{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromDelegate",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toDelegate",
          "type": "address"
        }
      ],
      "name": "DelegateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newBalance",
          "type": "uint256"
        }
      ],
      "name": "DelegateVotesChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DELEGATION_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "name": "checkpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "fromBlock",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "delegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "delegateBySig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        }
      ],
      "name": "delegates",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getCurrentVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPriorVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "initToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "newOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "numCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/GSN/Context.sol",
    "24": "contracts/Tokens/ERC20.sol",
    "29": "contracts/Tokens/SushiToken.sol",
    "3": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/math/SafeMath.sol",
    "50": "contracts/Utils/Owned.sol",
    "57": "interfaces/IERC20.sol",
    "6": "/Users/adrian/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.2.0/contracts/utils/Address.sol",
    "61": "interfaces/IMisoToken.sol"
  },
  "ast": {
    "absolutePath": "contracts/Tokens/SushiToken.sol",
    "exportedSymbols": {
      "SushiToken": [
        6720
      ]
    },
    "id": 6721,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6062,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:29"
      },
      {
        "absolutePath": "contracts/Tokens/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 6063,
        "nodeType": "ImportDirective",
        "scope": 6721,
        "sourceUnit": 5773,
        "src": "26:21:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Utils/Owned.sol",
        "file": "../Utils/Owned.sol",
        "id": 6064,
        "nodeType": "ImportDirective",
        "scope": 6721,
        "sourceUnit": 14342,
        "src": "48:28:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IMisoToken.sol",
        "file": "../../interfaces/IMisoToken.sol",
        "id": 6065,
        "nodeType": "ImportDirective",
        "scope": 6721,
        "sourceUnit": 17662,
        "src": "77:41:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6066,
              "name": "Owned",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14341,
              "src": "175:5:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Owned_$14341",
                "typeString": "contract Owned"
              }
            },
            "id": 6067,
            "nodeType": "InheritanceSpecifier",
            "src": "175:5:29"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6068,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5772,
              "src": "182:5:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$5772",
                "typeString": "contract ERC20"
              }
            },
            "id": 6069,
            "nodeType": "InheritanceSpecifier",
            "src": "182:5:29"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6070,
              "name": "IMisoToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 17661,
              "src": "189:10:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMisoToken_$17661",
                "typeString": "contract IMisoToken"
              }
            },
            "id": 6071,
            "nodeType": "InheritanceSpecifier",
            "src": "189:10:29"
          }
        ],
        "contractDependencies": [
          5772,
          14341,
          16622,
          16663,
          17661
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 6720,
        "linearizedBaseContracts": [
          6720,
          17661,
          5772,
          16663,
          16622,
          14341
        ],
        "name": "SushiToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              17660
            ],
            "body": {
              "id": 6090,
              "nodeType": "Block",
              "src": "303:70:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6082,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6077,
                        "src": "324:5:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6081,
                      "name": "_initOwned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14273,
                      "src": "313:10:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 6083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "313:17:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6084,
                  "nodeType": "ExpressionStatement",
                  "src": "313:17:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6086,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6073,
                        "src": "351:5:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6087,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6075,
                        "src": "358:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 6085,
                      "name": "_initERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5318,
                      "src": "340:10:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 6088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "340:26:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6089,
                  "nodeType": "ExpressionStatement",
                  "src": "340:26:29"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "893c8bba",
            "id": 6091,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initToken",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6079,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "294:8:29"
            },
            "parameters": {
              "id": 6078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6073,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6091,
                  "src": "226:19:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6072,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "226:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6075,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6091,
                  "src": "247:21:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6074,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "247:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6077,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6091,
                  "src": "270:13:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6076,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "270:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "225:59:29"
            },
            "returnParameters": {
              "id": 6080,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "303:0:29"
            },
            "scope": 6720,
            "src": "207:166:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6117,
              "nodeType": "Block",
              "src": "537:98:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6102,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6094,
                        "src": "553:3:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6103,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6096,
                        "src": "558:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6101,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5648,
                      "src": "547:5:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "547:19:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6105,
                  "nodeType": "ExpressionStatement",
                  "src": "547:19:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 6109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "599:1:29",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 6108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "591:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6107,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "591:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 6110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "591:10:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 6111,
                          "name": "_delegates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6123,
                          "src": "603:10:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                          }
                        },
                        "id": 6113,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 6112,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6094,
                          "src": "614:3:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "603:15:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6114,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6096,
                        "src": "620:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6106,
                      "name": "_moveDelegates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6610,
                      "src": "576:14:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "576:52:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6116,
                  "nodeType": "ExpressionStatement",
                  "src": "576:52:29"
                }
              ]
            },
            "documentation": {
              "id": 6092,
              "nodeType": "StructuredDocumentation",
              "src": "379:92:29",
              "text": "@notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef)."
            },
            "functionSelector": "40c10f19",
            "id": 6118,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 6099,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6098,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14240,
                  "src": "527:9:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "527:9:29"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6094,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6118,
                  "src": "490:11:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6093,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "490:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6096,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6118,
                  "src": "503:15:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6095,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "503:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "489:30:29"
            },
            "returnParameters": {
              "id": 6100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "537:0:29"
            },
            "scope": 6720,
            "src": "476:159:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 6119,
              "nodeType": "StructuredDocumentation",
              "src": "1039:46:29",
              "text": "@notice A record of each accounts delegate"
            },
            "id": 6123,
            "mutability": "mutable",
            "name": "_delegates",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6720,
            "src": "1090:48:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 6122,
              "keyType": {
                "id": 6120,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1099:7:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1090:28:29",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 6121,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1110:7:29",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "canonicalName": "SushiToken.Checkpoint",
            "id": 6128,
            "members": [
              {
                "constant": false,
                "id": 6125,
                "mutability": "mutable",
                "name": "fromBlock",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 6128,
                "src": "1249:16:29",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 6124,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1249:6:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6127,
                "mutability": "mutable",
                "name": "votes",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 6128,
                "src": "1275:13:29",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 6126,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1275:7:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Checkpoint",
            "nodeType": "StructDefinition",
            "scope": 6720,
            "src": "1221:74:29",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 6129,
              "nodeType": "StructuredDocumentation",
              "src": "1301:68:29",
              "text": "@notice A record of votes checkpoints for each account, by index"
            },
            "functionSelector": "f1127ed8",
            "id": 6135,
            "mutability": "mutable",
            "name": "checkpoints",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6720,
            "src": "1374:70:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$6128_storage_$_$",
              "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint))"
            },
            "typeName": {
              "id": 6134,
              "keyType": {
                "id": 6130,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1383:7:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1374:51:29",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$6128_storage_$_$",
                "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint))"
              },
              "valueType": {
                "id": 6133,
                "keyType": {
                  "id": 6131,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1403:6:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "nodeType": "Mapping",
                "src": "1394:30:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$6128_storage_$",
                  "typeString": "mapping(uint32 => struct SushiToken.Checkpoint)"
                },
                "valueType": {
                  "contractScope": null,
                  "id": 6132,
                  "name": "Checkpoint",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 6128,
                  "src": "1413:10:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Checkpoint_$6128_storage_ptr",
                    "typeString": "struct SushiToken.Checkpoint"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 6136,
              "nodeType": "StructuredDocumentation",
              "src": "1451:54:29",
              "text": "@notice The number of checkpoints for each account"
            },
            "functionSelector": "6fcfff45",
            "id": 6140,
            "mutability": "mutable",
            "name": "numCheckpoints",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6720,
            "src": "1510:49:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
              "typeString": "mapping(address => uint32)"
            },
            "typeName": {
              "id": 6139,
              "keyType": {
                "id": 6137,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1519:7:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1510:27:29",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                "typeString": "mapping(address => uint32)"
              },
              "valueType": {
                "id": 6138,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "1530:6:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 6141,
              "nodeType": "StructuredDocumentation",
              "src": "1566:58:29",
              "text": "@notice The EIP-712 typehash for the contract's domain"
            },
            "functionSelector": "20606b70",
            "id": 6146,
            "mutability": "constant",
            "name": "DOMAIN_TYPEHASH",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6720,
            "src": "1629:122:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6142,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1629:7:29",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                  "id": 6144,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1681:69:29",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
                    "typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
                  },
                  "value": "EIP712Domain(string name,uint256 chainId,address verifyingContract)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
                    "typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
                  }
                ],
                "id": 6143,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1671:9:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6145,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1671:80:29",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 6147,
              "nodeType": "StructuredDocumentation",
              "src": "1758:79:29",
              "text": "@notice The EIP-712 typehash for the delegation struct used by the contract"
            },
            "functionSelector": "e7a324dc",
            "id": 6152,
            "mutability": "constant",
            "name": "DELEGATION_TYPEHASH",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6720,
            "src": "1842:117:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6148,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1842:7:29",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929",
                  "id": 6150,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1898:60:29",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
                    "typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
                  },
                  "value": "Delegation(address delegatee,uint256 nonce,uint256 expiry)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
                    "typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
                  }
                ],
                "id": 6149,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1888:9:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6151,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1888:71:29",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 6153,
              "nodeType": "StructuredDocumentation",
              "src": "1966:66:29",
              "text": "@notice A record of states for signing / validating signatures"
            },
            "functionSelector": "7ecebe00",
            "id": 6157,
            "mutability": "mutable",
            "name": "nonces",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6720,
            "src": "2037:39:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 6156,
              "keyType": {
                "id": 6154,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2046:7:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2037:25:29",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 6155,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "2057:4:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 6158,
              "nodeType": "StructuredDocumentation",
              "src": "2085:71:29",
              "text": "@notice An event thats emitted when an account changes its delegate"
            },
            "id": 6166,
            "name": "DelegateChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6160,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "delegator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6166,
                  "src": "2183:25:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6159,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2183:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6162,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fromDelegate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6166,
                  "src": "2210:28:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6161,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2210:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6164,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "toDelegate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6166,
                  "src": "2240:26:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2240:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2182:85:29"
            },
            "src": "2161:107:29"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 6167,
              "nodeType": "StructuredDocumentation",
              "src": "2274:81:29",
              "text": "@notice An event thats emitted when a delegate account's vote balance changes"
            },
            "id": 6175,
            "name": "DelegateVotesChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6169,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "delegate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6175,
                  "src": "2387:24:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2387:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6171,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "previousBalance",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6175,
                  "src": "2413:20:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6170,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2413:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6173,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newBalance",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6175,
                  "src": "2435:15:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6172,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2435:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2386:65:29"
            },
            "src": "2360:92:29"
          },
          {
            "body": {
              "id": 6187,
              "nodeType": "Block",
              "src": "2692:45:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 6183,
                      "name": "_delegates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6123,
                      "src": "2709:10:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 6185,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 6184,
                      "name": "delegator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6178,
                      "src": "2720:9:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2709:21:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 6182,
                  "id": 6186,
                  "nodeType": "Return",
                  "src": "2702:28:29"
                }
              ]
            },
            "documentation": {
              "id": 6176,
              "nodeType": "StructuredDocumentation",
              "src": "2458:131:29",
              "text": " @notice Delegate votes from `msg.sender` to `delegatee`\n @param delegator The address to get delegatee for"
            },
            "functionSelector": "587cde1e",
            "id": 6188,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegates",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6178,
                  "mutability": "mutable",
                  "name": "delegator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6188,
                  "src": "2613:17:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6177,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2613:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2612:19:29"
            },
            "returnParameters": {
              "id": 6182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6181,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6188,
                  "src": "2679:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6180,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2679:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2678:9:29"
            },
            "scope": 6720,
            "src": "2594:143:29",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6200,
              "nodeType": "Block",
              "src": "2921:56:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6195,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2948:3:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2948:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6197,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6191,
                        "src": "2960:9:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6194,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6503,
                      "src": "2938:9:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 6198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2938:32:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "functionReturnParameters": 6193,
                  "id": 6199,
                  "nodeType": "Return",
                  "src": "2931:39:29"
                }
              ]
            },
            "documentation": {
              "id": 6189,
              "nodeType": "StructuredDocumentation",
              "src": "2742:128:29",
              "text": " @notice Delegate votes from `msg.sender` to `delegatee`\n @param delegatee The address to delegate votes to"
            },
            "functionSelector": "5c19a95c",
            "id": 6201,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6191,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6201,
                  "src": "2893:17:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2893:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2892:19:29"
            },
            "returnParameters": {
              "id": 6193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2921:0:29"
            },
            "scope": 6720,
            "src": "2875:102:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6303,
              "nodeType": "Block",
              "src": "3573:967:29",
              "statements": [
                {
                  "assignments": [
                    6218
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6218,
                      "mutability": "mutable",
                      "name": "domainSeparator",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6303,
                      "src": "3583:23:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 6217,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3583:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6238,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 6222,
                            "name": "DOMAIN_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6146,
                            "src": "3660:15:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 6226,
                                      "name": "name",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5328,
                                      "src": "3709:4:29",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                                        "typeString": "function () view returns (string memory)"
                                      }
                                    },
                                    "id": 6227,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3709:6:29",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 6225,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3703:5:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 6224,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3703:5:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 6228,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3703:13:29",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 6223,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "3693:9:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 6229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3693:24:29",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 6230,
                              "name": "getChainId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6719,
                              "src": "3735:10:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                "typeString": "function () pure returns (uint256)"
                              }
                            },
                            "id": 6231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3735:12:29",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 6234,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3773:4:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SushiToken_$6720",
                                  "typeString": "contract SushiToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SushiToken_$6720",
                                  "typeString": "contract SushiToken"
                                }
                              ],
                              "id": 6233,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3765:7:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 6232,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3765:7:29",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 6235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3765:13:29",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 6220,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3632:3:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 6221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3632:10:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 6236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3632:160:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 6219,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3609:9:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 6237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3609:193:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3583:219:29"
                },
                {
                  "assignments": [
                    6240
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6240,
                      "mutability": "mutable",
                      "name": "structHash",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6303,
                      "src": "3813:18:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 6239,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3813:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6250,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 6244,
                            "name": "DELEGATION_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6152,
                            "src": "3885:19:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 6245,
                            "name": "delegatee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6204,
                            "src": "3922:9:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 6246,
                            "name": "nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6206,
                            "src": "3949:5:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 6247,
                            "name": "expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6208,
                            "src": "3972:6:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 6242,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3857:3:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 6243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3857:10:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 6248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3857:135:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 6241,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3834:9:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 6249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3834:168:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3813:189:29"
                },
                {
                  "assignments": [
                    6252
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6252,
                      "mutability": "mutable",
                      "name": "digest",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6303,
                      "src": "4013:14:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 6251,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4013:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6261,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "1901",
                            "id": 6256,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4087:10:29",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string \"\u0019\u0001\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "argumentTypes": null,
                            "id": 6257,
                            "name": "domainSeparator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6218,
                            "src": "4115:15:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 6258,
                            "name": "structHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6240,
                            "src": "4148:10:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string \"\u0019\u0001\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 6254,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4053:3:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 6255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4053:16:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 6259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4053:119:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 6253,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "4030:9:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 6260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4030:152:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4013:169:29"
                },
                {
                  "assignments": [
                    6263
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6263,
                      "mutability": "mutable",
                      "name": "signatory",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6303,
                      "src": "4193:17:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6262,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4193:7:29",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6270,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6265,
                        "name": "digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6252,
                        "src": "4223:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6266,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6210,
                        "src": "4231:1:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6267,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6212,
                        "src": "4234:1:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6268,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6214,
                        "src": "4237:1:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 6264,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -6,
                      "src": "4213:9:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 6269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4213:26:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4193:46:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 6272,
                          "name": "signatory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6263,
                          "src": "4257:9:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 6275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4278:1:29",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4270:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6273,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4270:7:29",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 6276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4270:10:29",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4257:23:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53555348493a3a64656c656761746542795369673a20696e76616c6964207369676e6174757265",
                        "id": 6278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4282:41:29",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aeeb870860c7451819edc560c5520e1197c2d62c04cc23def3a21b91410d0633",
                          "typeString": "literal_string \"SUSHI::delegateBySig: invalid signature\""
                        },
                        "value": "SUSHI::delegateBySig: invalid signature"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aeeb870860c7451819edc560c5520e1197c2d62c04cc23def3a21b91410d0633",
                          "typeString": "literal_string \"SUSHI::delegateBySig: invalid signature\""
                        }
                      ],
                      "id": 6271,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4249:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4249:75:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6280,
                  "nodeType": "ExpressionStatement",
                  "src": "4249:75:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 6282,
                          "name": "nonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6206,
                          "src": "4342:5:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 6286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "4351:19:29",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 6283,
                              "name": "nonces",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6157,
                              "src": "4351:6:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 6285,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 6284,
                              "name": "signatory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6263,
                              "src": "4358:9:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4351:17:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4342:28:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53555348493a3a64656c656761746542795369673a20696e76616c6964206e6f6e6365",
                        "id": 6288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4372:37:29",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1e65db8426b65ad764814369e421d0b17d63e03dc4c1056a693e1cc89fb7a3e",
                          "typeString": "literal_string \"SUSHI::delegateBySig: invalid nonce\""
                        },
                        "value": "SUSHI::delegateBySig: invalid nonce"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1e65db8426b65ad764814369e421d0b17d63e03dc4c1056a693e1cc89fb7a3e",
                          "typeString": "literal_string \"SUSHI::delegateBySig: invalid nonce\""
                        }
                      ],
                      "id": 6281,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4334:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4334:76:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6290,
                  "nodeType": "ExpressionStatement",
                  "src": "4334:76:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 6292,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -17,
                          "src": "4428:3:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 6293,
                          "name": "expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6208,
                          "src": "4435:6:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4428:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53555348493a3a64656c656761746542795369673a207369676e61747572652065787069726564",
                        "id": 6295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4443:41:29",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_18fecdf225b5e9a1d03e234e6893b777c717a928a78496f199bb78499b5dcd1c",
                          "typeString": "literal_string \"SUSHI::delegateBySig: signature expired\""
                        },
                        "value": "SUSHI::delegateBySig: signature expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_18fecdf225b5e9a1d03e234e6893b777c717a928a78496f199bb78499b5dcd1c",
                          "typeString": "literal_string \"SUSHI::delegateBySig: signature expired\""
                        }
                      ],
                      "id": 6291,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4420:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4420:65:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6297,
                  "nodeType": "ExpressionStatement",
                  "src": "4420:65:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6299,
                        "name": "signatory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6263,
                        "src": "4512:9:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6300,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6204,
                        "src": "4523:9:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6298,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6503,
                      "src": "4502:9:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 6301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4502:31:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "functionReturnParameters": 6216,
                  "id": 6302,
                  "nodeType": "Return",
                  "src": "4495:38:29"
                }
              ]
            },
            "documentation": {
              "id": 6202,
              "nodeType": "StructuredDocumentation",
              "src": "2983:412:29",
              "text": " @notice Delegates votes from signatory to `delegatee`\n @param delegatee The address to delegate votes to\n @param nonce The contract state required to match the signature\n @param expiry The time at which to expire the signature\n @param v The recovery byte of the signature\n @param r Half of the ECDSA signature pair\n @param s Half of the ECDSA signature pair"
            },
            "functionSelector": "c3cda520",
            "id": 6304,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegateBySig",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6204,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6304,
                  "src": "3432:17:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6203,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3432:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6206,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6304,
                  "src": "3459:10:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6205,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3459:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6208,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6304,
                  "src": "3479:11:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6207,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3479:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6210,
                  "mutability": "mutable",
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6304,
                  "src": "3500:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 6209,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3500:5:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6212,
                  "mutability": "mutable",
                  "name": "r",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6304,
                  "src": "3517:9:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6211,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3517:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6214,
                  "mutability": "mutable",
                  "name": "s",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6304,
                  "src": "3536:9:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6213,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3536:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3422:129:29"
            },
            "returnParameters": {
              "id": 6216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3573:0:29"
            },
            "scope": 6720,
            "src": "3400:1140:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6332,
              "nodeType": "Block",
              "src": "4836:146:29",
              "statements": [
                {
                  "assignments": [
                    6313
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6313,
                      "mutability": "mutable",
                      "name": "nCheckpoints",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6332,
                      "src": "4846:19:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 6312,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4846:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6317,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 6314,
                      "name": "numCheckpoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6140,
                      "src": "4868:14:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                        "typeString": "mapping(address => uint32)"
                      }
                    },
                    "id": 6316,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 6315,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6307,
                      "src": "4883:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4868:23:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4846:45:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 6320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 6318,
                        "name": "nCheckpoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6313,
                        "src": "4908:12:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 6319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4923:1:29",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4908:16:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 6329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4974:1:29",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 6330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "4908:67:29",
                    "trueExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 6321,
                            "name": "checkpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6135,
                            "src": "4927:11:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$6128_storage_$_$",
                              "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                            }
                          },
                          "id": 6323,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 6322,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6307,
                            "src": "4939:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4927:20:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$6128_storage_$",
                            "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                          }
                        },
                        "id": 6327,
                        "indexExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 6326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 6324,
                            "name": "nCheckpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6313,
                            "src": "4948:12:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 6325,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4963:1:29",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "4948:16:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4927:38:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Checkpoint_$6128_storage",
                          "typeString": "struct SushiToken.Checkpoint storage ref"
                        }
                      },
                      "id": 6328,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "votes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6127,
                      "src": "4927:44:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6311,
                  "id": 6331,
                  "nodeType": "Return",
                  "src": "4901:74:29"
                }
              ]
            },
            "documentation": {
              "id": 6305,
              "nodeType": "StructuredDocumentation",
              "src": "4546:183:29",
              "text": " @notice Gets the current votes balance for `account`\n @param account The address to get votes balance\n @return The number of current votes for `account`"
            },
            "functionSelector": "b4b5ea57",
            "id": 6333,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentVotes",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6307,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6333,
                  "src": "4759:15:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6306,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4759:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4758:17:29"
            },
            "returnParameters": {
              "id": 6311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6310,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6333,
                  "src": "4823:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6309,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4823:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4822:9:29"
            },
            "scope": 6720,
            "src": "4734:248:29",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6464,
              "nodeType": "Block",
              "src": "5522:1100:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 6344,
                          "name": "blockNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6338,
                          "src": "5540:11:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 6345,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5554:5:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 6346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5554:12:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5540:26:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53555348493a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e6564",
                        "id": 6348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5568:42:29",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_95f5bca076212943aad5c226142010ad55d0096dba63ca905d770f4fe4afff33",
                          "typeString": "literal_string \"SUSHI::getPriorVotes: not yet determined\""
                        },
                        "value": "SUSHI::getPriorVotes: not yet determined"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_95f5bca076212943aad5c226142010ad55d0096dba63ca905d770f4fe4afff33",
                          "typeString": "literal_string \"SUSHI::getPriorVotes: not yet determined\""
                        }
                      ],
                      "id": 6343,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5532:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5532:79:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6350,
                  "nodeType": "ExpressionStatement",
                  "src": "5532:79:29"
                },
                {
                  "assignments": [
                    6352
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6352,
                      "mutability": "mutable",
                      "name": "nCheckpoints",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6464,
                      "src": "5622:19:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 6351,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5622:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6356,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 6353,
                      "name": "numCheckpoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6140,
                      "src": "5644:14:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                        "typeString": "mapping(address => uint32)"
                      }
                    },
                    "id": 6355,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 6354,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6336,
                      "src": "5659:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5644:23:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5622:45:29"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 6359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 6357,
                      "name": "nCheckpoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6352,
                      "src": "5681:12:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 6358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5697:1:29",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5681:17:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 6363,
                  "nodeType": "IfStatement",
                  "src": "5677:56:29",
                  "trueBody": {
                    "id": 6362,
                    "nodeType": "Block",
                    "src": "5700:33:29",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 6360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5721:1:29",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 6342,
                        "id": 6361,
                        "nodeType": "Return",
                        "src": "5714:8:29"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 6364,
                            "name": "checkpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6135,
                            "src": "5790:11:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$6128_storage_$_$",
                              "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                            }
                          },
                          "id": 6366,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 6365,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6336,
                            "src": "5802:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5790:20:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$6128_storage_$",
                            "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                          }
                        },
                        "id": 6370,
                        "indexExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 6369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 6367,
                            "name": "nCheckpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6352,
                            "src": "5811:12:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 6368,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5826:1:29",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "5811:16:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5790:38:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Checkpoint_$6128_storage",
                          "typeString": "struct SushiToken.Checkpoint storage ref"
                        }
                      },
                      "id": 6371,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fromBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6125,
                      "src": "5790:48:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 6372,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6338,
                      "src": "5842:11:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5790:63:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 6384,
                  "nodeType": "IfStatement",
                  "src": "5786:145:29",
                  "trueBody": {
                    "id": 6383,
                    "nodeType": "Block",
                    "src": "5855:76:29",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 6374,
                                "name": "checkpoints",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6135,
                                "src": "5876:11:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$6128_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                                }
                              },
                              "id": 6376,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 6375,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6336,
                                "src": "5888:7:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5876:20:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$6128_storage_$",
                                "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                              }
                            },
                            "id": 6380,
                            "indexExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "id": 6379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 6377,
                                "name": "nCheckpoints",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6352,
                                "src": "5897:12:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 6378,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5912:1:29",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "5897:16:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5876:38:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Checkpoint_$6128_storage",
                              "typeString": "struct SushiToken.Checkpoint storage ref"
                            }
                          },
                          "id": 6381,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "votes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6127,
                          "src": "5876:44:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 6342,
                        "id": 6382,
                        "nodeType": "Return",
                        "src": "5869:51:29"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 6385,
                            "name": "checkpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6135,
                            "src": "5989:11:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$6128_storage_$_$",
                              "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                            }
                          },
                          "id": 6387,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 6386,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6336,
                            "src": "6001:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5989:20:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$6128_storage_$",
                            "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                          }
                        },
                        "id": 6389,
                        "indexExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 6388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6010:1:29",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5989:23:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Checkpoint_$6128_storage",
                          "typeString": "struct SushiToken.Checkpoint storage ref"
                        }
                      },
                      "id": 6390,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fromBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6125,
                      "src": "5989:33:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 6391,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6338,
                      "src": "6025:11:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5989:47:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 6396,
                  "nodeType": "IfStatement",
                  "src": "5985:86:29",
                  "trueBody": {
                    "id": 6395,
                    "nodeType": "Block",
                    "src": "6038:33:29",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 6393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6059:1:29",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 6342,
                        "id": 6394,
                        "nodeType": "Return",
                        "src": "6052:8:29"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    6398
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6398,
                      "mutability": "mutable",
                      "name": "lower",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6464,
                      "src": "6081:12:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 6397,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6081:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6400,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 6399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6096:1:29",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6081:16:29"
                },
                {
                  "assignments": [
                    6402
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6402,
                      "mutability": "mutable",
                      "name": "upper",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6464,
                      "src": "6107:12:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 6401,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6107:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6406,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 6405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 6403,
                      "name": "nCheckpoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6352,
                      "src": "6122:12:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 6404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6137:1:29",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "6122:16:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6107:31:29"
                },
                {
                  "body": {
                    "id": 6455,
                    "nodeType": "Block",
                    "src": "6170:396:29",
                    "statements": [
                      {
                        "assignments": [
                          6411
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 6411,
                            "mutability": "mutable",
                            "name": "center",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 6455,
                            "src": "6184:13:29",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "typeName": {
                              "id": 6410,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6184:6:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 6420,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 6419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 6412,
                            "name": "upper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6402,
                            "src": "6200:5:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 6418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "id": 6415,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 6413,
                                    "name": "upper",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6402,
                                    "src": "6209:5:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "id": 6414,
                                    "name": "lower",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6398,
                                    "src": "6217:5:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "src": "6209:13:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                }
                              ],
                              "id": 6416,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6208:15:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 6417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6226:1:29",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "6208:19:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "6200:27:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6184:43:29"
                      },
                      {
                        "assignments": [
                          6422
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 6422,
                            "mutability": "mutable",
                            "name": "cp",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 6455,
                            "src": "6268:20:29",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Checkpoint_$6128_memory_ptr",
                              "typeString": "struct SushiToken.Checkpoint"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 6421,
                              "name": "Checkpoint",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 6128,
                              "src": "6268:10:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$6128_storage_ptr",
                                "typeString": "struct SushiToken.Checkpoint"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 6428,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 6423,
                              "name": "checkpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6135,
                              "src": "6291:11:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$6128_storage_$_$",
                                "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                              }
                            },
                            "id": 6425,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 6424,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6336,
                              "src": "6303:7:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6291:20:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$6128_storage_$",
                              "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                            }
                          },
                          "id": 6427,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 6426,
                            "name": "center",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6411,
                            "src": "6312:6:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6291:28:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Checkpoint_$6128_storage",
                            "typeString": "struct SushiToken.Checkpoint storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6268:51:29"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6429,
                              "name": "cp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6422,
                              "src": "6337:2:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$6128_memory_ptr",
                                "typeString": "struct SushiToken.Checkpoint memory"
                              }
                            },
                            "id": 6430,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "fromBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6125,
                            "src": "6337:12:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 6431,
                            "name": "blockNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6338,
                            "src": "6353:11:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6337:27:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 6440,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 6437,
                                "name": "cp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6422,
                                "src": "6424:2:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Checkpoint_$6128_memory_ptr",
                                  "typeString": "struct SushiToken.Checkpoint memory"
                                }
                              },
                              "id": 6438,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "fromBlock",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6125,
                              "src": "6424:12:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 6439,
                              "name": "blockNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6338,
                              "src": "6439:11:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6424:26:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "id": 6452,
                            "nodeType": "Block",
                            "src": "6505:51:29",
                            "statements": [
                              {
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 6450,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "argumentTypes": null,
                                    "id": 6446,
                                    "name": "upper",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6402,
                                    "src": "6523:5:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    },
                                    "id": 6449,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 6447,
                                      "name": "center",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6411,
                                      "src": "6531:6:29",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "31",
                                      "id": 6448,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6540:1:29",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "6531:10:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "src": "6523:18:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "id": 6451,
                                "nodeType": "ExpressionStatement",
                                "src": "6523:18:29"
                              }
                            ]
                          },
                          "id": 6453,
                          "nodeType": "IfStatement",
                          "src": "6420:136:29",
                          "trueBody": {
                            "id": 6445,
                            "nodeType": "Block",
                            "src": "6452:47:29",
                            "statements": [
                              {
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 6443,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "argumentTypes": null,
                                    "id": 6441,
                                    "name": "lower",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6398,
                                    "src": "6470:5:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "argumentTypes": null,
                                    "id": 6442,
                                    "name": "center",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6411,
                                    "src": "6478:6:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "src": "6470:14:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "id": 6444,
                                "nodeType": "ExpressionStatement",
                                "src": "6470:14:29"
                              }
                            ]
                          }
                        },
                        "id": 6454,
                        "nodeType": "IfStatement",
                        "src": "6333:223:29",
                        "trueBody": {
                          "id": 6436,
                          "nodeType": "Block",
                          "src": "6366:48:29",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 6433,
                                  "name": "cp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6422,
                                  "src": "6391:2:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Checkpoint_$6128_memory_ptr",
                                    "typeString": "struct SushiToken.Checkpoint memory"
                                  }
                                },
                                "id": 6434,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "votes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6127,
                                "src": "6391:8:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 6342,
                              "id": 6435,
                              "nodeType": "Return",
                              "src": "6384:15:29"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 6409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 6407,
                      "name": "upper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6402,
                      "src": "6155:5:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 6408,
                      "name": "lower",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6398,
                      "src": "6163:5:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "6155:13:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6456,
                  "nodeType": "WhileStatement",
                  "src": "6148:418:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 6457,
                          "name": "checkpoints",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6135,
                          "src": "6582:11:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$6128_storage_$_$",
                            "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                          }
                        },
                        "id": 6459,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 6458,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6336,
                          "src": "6594:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6582:20:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$6128_storage_$",
                          "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                        }
                      },
                      "id": 6461,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 6460,
                        "name": "lower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6398,
                        "src": "6603:5:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6582:27:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Checkpoint_$6128_storage",
                        "typeString": "struct SushiToken.Checkpoint storage ref"
                      }
                    },
                    "id": 6462,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "votes",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 6127,
                    "src": "6582:33:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6342,
                  "id": 6463,
                  "nodeType": "Return",
                  "src": "6575:40:29"
                }
              ]
            },
            "documentation": {
              "id": 6334,
              "nodeType": "StructuredDocumentation",
              "src": "4988:411:29",
              "text": " @notice Determine the prior number of votes for an account as of a block number\n @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n @param account The address of the account to check\n @param blockNumber The block number to get the vote balance at\n @return The number of votes the account had as of the given block"
            },
            "functionSelector": "782d6fe1",
            "id": 6465,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPriorVotes",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6336,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6465,
                  "src": "5427:15:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6335,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5427:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6338,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6465,
                  "src": "5444:16:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6337,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5444:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5426:35:29"
            },
            "returnParameters": {
              "id": 6342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6341,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6465,
                  "src": "5509:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6340,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5509:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5508:9:29"
            },
            "scope": 6720,
            "src": "5404:1218:29",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6502,
              "nodeType": "Block",
              "src": "6706:351:29",
              "statements": [
                {
                  "assignments": [
                    6473
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6473,
                      "mutability": "mutable",
                      "name": "currentDelegate",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6502,
                      "src": "6716:23:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6472,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6716:7:29",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6477,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 6474,
                      "name": "_delegates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6123,
                      "src": "6742:10:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 6476,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 6475,
                      "name": "delegator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6467,
                      "src": "6753:9:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6742:21:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6716:47:29"
                },
                {
                  "assignments": [
                    6479
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6479,
                      "mutability": "mutable",
                      "name": "delegatorBalance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6502,
                      "src": "6773:24:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6478,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6773:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6483,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6481,
                        "name": "delegator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6467,
                        "src": "6810:9:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6480,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5372,
                      "src": "6800:9:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 6482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6800:20:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6773:47:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 6484,
                        "name": "_delegates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6123,
                        "src": "6876:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 6486,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 6485,
                        "name": "delegator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6467,
                        "src": "6887:9:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6876:21:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 6487,
                      "name": "delegatee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6469,
                      "src": "6900:9:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6876:33:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6489,
                  "nodeType": "ExpressionStatement",
                  "src": "6876:33:29"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6491,
                        "name": "delegator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6467,
                        "src": "6941:9:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6492,
                        "name": "currentDelegate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6473,
                        "src": "6952:15:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6493,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6469,
                        "src": "6969:9:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6490,
                      "name": "DelegateChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6166,
                      "src": "6925:15:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 6494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6925:54:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6495,
                  "nodeType": "EmitStatement",
                  "src": "6920:59:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6497,
                        "name": "currentDelegate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6473,
                        "src": "7005:15:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6498,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6469,
                        "src": "7022:9:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6499,
                        "name": "delegatorBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6479,
                        "src": "7033:16:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6496,
                      "name": "_moveDelegates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6610,
                      "src": "6990:14:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6990:60:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6501,
                  "nodeType": "ExpressionStatement",
                  "src": "6990:60:29"
                }
              ]
            },
            "documentation": null,
            "id": 6503,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_delegate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6467,
                  "mutability": "mutable",
                  "name": "delegator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6503,
                  "src": "6647:17:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6466,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6647:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6469,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6503,
                  "src": "6666:17:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6468,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6666:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6646:38:29"
            },
            "returnParameters": {
              "id": 6471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6706:0:29"
            },
            "scope": 6720,
            "src": "6628:429:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6609,
              "nodeType": "Block",
              "src": "7144:848:29",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 6518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 6514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 6512,
                        "name": "srcRep",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6505,
                        "src": "7158:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 6513,
                        "name": "dstRep",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6507,
                        "src": "7168:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "7158:16:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 6515,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6509,
                        "src": "7178:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 6516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7187:1:29",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7178:10:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7158:30:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 6608,
                  "nodeType": "IfStatement",
                  "src": "7154:832:29",
                  "trueBody": {
                    "id": 6607,
                    "nodeType": "Block",
                    "src": "7190:796:29",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 6524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 6519,
                            "name": "srcRep",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6505,
                            "src": "7208:6:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 6522,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7226:1:29",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 6521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7218:7:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 6520,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7218:7:29",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 6523,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7218:10:29",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "7208:20:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 6562,
                        "nodeType": "IfStatement",
                        "src": "7204:379:29",
                        "trueBody": {
                          "id": 6561,
                          "nodeType": "Block",
                          "src": "7230:353:29",
                          "statements": [
                            {
                              "assignments": [
                                6526
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 6526,
                                  "mutability": "mutable",
                                  "name": "srcRepNum",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 6561,
                                  "src": "7295:16:29",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "typeName": {
                                    "id": 6525,
                                    "name": "uint32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7295:6:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 6530,
                              "initialValue": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 6527,
                                  "name": "numCheckpoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6140,
                                  "src": "7314:14:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                                    "typeString": "mapping(address => uint32)"
                                  }
                                },
                                "id": 6529,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 6528,
                                  "name": "srcRep",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6505,
                                  "src": "7329:6:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7314:22:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7295:41:29"
                            },
                            {
                              "assignments": [
                                6532
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 6532,
                                  "mutability": "mutable",
                                  "name": "srcRepOld",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 6561,
                                  "src": "7354:17:29",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 6531,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7354:7:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 6546,
                              "initialValue": {
                                "argumentTypes": null,
                                "condition": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "id": 6535,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 6533,
                                    "name": "srcRepNum",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6526,
                                    "src": "7374:9:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 6534,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7386:1:29",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "7374:13:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 6544,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7433:1:29",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "id": 6545,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "7374:60:29",
                                "trueExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 6536,
                                        "name": "checkpoints",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6135,
                                        "src": "7390:11:29",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$6128_storage_$_$",
                                          "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                                        }
                                      },
                                      "id": 6538,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 6537,
                                        "name": "srcRep",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6505,
                                        "src": "7402:6:29",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7390:19:29",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$6128_storage_$",
                                        "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                                      }
                                    },
                                    "id": 6542,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      },
                                      "id": 6541,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 6539,
                                        "name": "srcRepNum",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6526,
                                        "src": "7410:9:29",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "31",
                                        "id": 6540,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7422:1:29",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "7410:13:29",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7390:34:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Checkpoint_$6128_storage",
                                      "typeString": "struct SushiToken.Checkpoint storage ref"
                                    }
                                  },
                                  "id": 6543,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "votes",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6127,
                                  "src": "7390:40:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7354:80:29"
                            },
                            {
                              "assignments": [
                                6548
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 6548,
                                  "mutability": "mutable",
                                  "name": "srcRepNew",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 6561,
                                  "src": "7452:17:29",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 6547,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7452:7:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 6553,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 6551,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6509,
                                    "src": "7486:6:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 6549,
                                    "name": "srcRepOld",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6532,
                                    "src": "7472:9:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 6550,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 16388,
                                  "src": "7472:13:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 6552,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7472:21:29",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7452:41:29"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 6555,
                                    "name": "srcRep",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6505,
                                    "src": "7528:6:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 6556,
                                    "name": "srcRepNum",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6526,
                                    "src": "7536:9:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 6557,
                                    "name": "srcRepOld",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6532,
                                    "src": "7547:9:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 6558,
                                    "name": "srcRepNew",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6548,
                                    "src": "7558:9:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 6554,
                                  "name": "_writeCheckpoint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6683,
                                  "src": "7511:16:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint32,uint256,uint256)"
                                  }
                                },
                                "id": 6559,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7511:57:29",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 6560,
                              "nodeType": "ExpressionStatement",
                              "src": "7511:57:29"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 6568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 6563,
                            "name": "dstRep",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6507,
                            "src": "7601:6:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 6566,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7619:1:29",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 6565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7611:7:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 6564,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7611:7:29",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 6567,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7611:10:29",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "7601:20:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 6606,
                        "nodeType": "IfStatement",
                        "src": "7597:379:29",
                        "trueBody": {
                          "id": 6605,
                          "nodeType": "Block",
                          "src": "7623:353:29",
                          "statements": [
                            {
                              "assignments": [
                                6570
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 6570,
                                  "mutability": "mutable",
                                  "name": "dstRepNum",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 6605,
                                  "src": "7688:16:29",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "typeName": {
                                    "id": 6569,
                                    "name": "uint32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7688:6:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 6574,
                              "initialValue": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 6571,
                                  "name": "numCheckpoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6140,
                                  "src": "7707:14:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                                    "typeString": "mapping(address => uint32)"
                                  }
                                },
                                "id": 6573,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 6572,
                                  "name": "dstRep",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6507,
                                  "src": "7722:6:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7707:22:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7688:41:29"
                            },
                            {
                              "assignments": [
                                6576
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 6576,
                                  "mutability": "mutable",
                                  "name": "dstRepOld",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 6605,
                                  "src": "7747:17:29",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 6575,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7747:7:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 6590,
                              "initialValue": {
                                "argumentTypes": null,
                                "condition": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "id": 6579,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 6577,
                                    "name": "dstRepNum",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6570,
                                    "src": "7767:9:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 6578,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7779:1:29",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "7767:13:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 6588,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7826:1:29",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "id": 6589,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "7767:60:29",
                                "trueExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 6580,
                                        "name": "checkpoints",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6135,
                                        "src": "7783:11:29",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$6128_storage_$_$",
                                          "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                                        }
                                      },
                                      "id": 6582,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 6581,
                                        "name": "dstRep",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6507,
                                        "src": "7795:6:29",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7783:19:29",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$6128_storage_$",
                                        "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                                      }
                                    },
                                    "id": 6586,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      },
                                      "id": 6585,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 6583,
                                        "name": "dstRepNum",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6570,
                                        "src": "7803:9:29",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "31",
                                        "id": 6584,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7815:1:29",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "7803:13:29",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7783:34:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Checkpoint_$6128_storage",
                                      "typeString": "struct SushiToken.Checkpoint storage ref"
                                    }
                                  },
                                  "id": 6587,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "votes",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6127,
                                  "src": "7783:40:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7747:80:29"
                            },
                            {
                              "assignments": [
                                6592
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 6592,
                                  "mutability": "mutable",
                                  "name": "dstRepNew",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 6605,
                                  "src": "7845:17:29",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 6591,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7845:7:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 6597,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 6595,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6509,
                                    "src": "7879:6:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 6593,
                                    "name": "dstRepOld",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6576,
                                    "src": "7865:9:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 6594,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "add",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 16371,
                                  "src": "7865:13:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 6596,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7865:21:29",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7845:41:29"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 6599,
                                    "name": "dstRep",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6507,
                                    "src": "7921:6:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 6600,
                                    "name": "dstRepNum",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6570,
                                    "src": "7929:9:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 6601,
                                    "name": "dstRepOld",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6576,
                                    "src": "7940:9:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 6602,
                                    "name": "dstRepNew",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6592,
                                    "src": "7951:9:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 6598,
                                  "name": "_writeCheckpoint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6683,
                                  "src": "7904:16:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint32,uint256,uint256)"
                                  }
                                },
                                "id": 6603,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7904:57:29",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 6604,
                              "nodeType": "ExpressionStatement",
                              "src": "7904:57:29"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 6610,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_moveDelegates",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6505,
                  "mutability": "mutable",
                  "name": "srcRep",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6610,
                  "src": "7087:14:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6504,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7087:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6507,
                  "mutability": "mutable",
                  "name": "dstRep",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6610,
                  "src": "7103:14:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6506,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7103:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6509,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6610,
                  "src": "7119:14:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6508,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7119:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7086:48:29"
            },
            "returnParameters": {
              "id": 6511,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7144:0:29"
            },
            "scope": 6720,
            "src": "7063:929:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6682,
              "nodeType": "Block",
              "src": "8159:526:29",
              "statements": [
                {
                  "assignments": [
                    6622
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6622,
                      "mutability": "mutable",
                      "name": "blockNumber",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6682,
                      "src": "8169:18:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 6621,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8169:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6628,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6624,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "8197:5:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 6625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8197:12:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53555348493a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473",
                        "id": 6626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8211:55:29",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_80202fadc1798ad44893c1a6a1a3b4079151936a969e36fa214486a4e00f3a74",
                          "typeString": "literal_string \"SUSHI::_writeCheckpoint: block number exceeds 32 bits\""
                        },
                        "value": "SUSHI::_writeCheckpoint: block number exceeds 32 bits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_80202fadc1798ad44893c1a6a1a3b4079151936a969e36fa214486a4e00f3a74",
                          "typeString": "literal_string \"SUSHI::_writeCheckpoint: block number exceeds 32 bits\""
                        }
                      ],
                      "id": 6623,
                      "name": "safe32",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6707,
                      "src": "8190:6:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint32_$",
                        "typeString": "function (uint256,string memory) pure returns (uint32)"
                      }
                    },
                    "id": 6627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8190:77:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8169:98:29"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 6642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 6631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 6629,
                        "name": "nCheckpoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6614,
                        "src": "8282:12:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 6630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8297:1:29",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "8282:16:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 6641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 6632,
                              "name": "checkpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6135,
                              "src": "8302:11:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$6128_storage_$_$",
                                "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                              }
                            },
                            "id": 6634,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 6633,
                              "name": "delegatee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6612,
                              "src": "8314:9:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8302:22:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$6128_storage_$",
                              "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                            }
                          },
                          "id": 6638,
                          "indexExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 6637,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 6635,
                              "name": "nCheckpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6614,
                              "src": "8325:12:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 6636,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8340:1:29",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "8325:16:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8302:40:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Checkpoint_$6128_storage",
                            "typeString": "struct SushiToken.Checkpoint storage ref"
                          }
                        },
                        "id": 6639,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fromBlock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6125,
                        "src": "8302:50:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 6640,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6622,
                        "src": "8356:11:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "src": "8302:65:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "8282:85:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 6674,
                    "nodeType": "Block",
                    "src": "8457:155:29",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 6664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 6655,
                                "name": "checkpoints",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6135,
                                "src": "8471:11:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$6128_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                                }
                              },
                              "id": 6658,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 6656,
                                "name": "delegatee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6612,
                                "src": "8483:9:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8471:22:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$6128_storage_$",
                                "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                              }
                            },
                            "id": 6659,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 6657,
                              "name": "nCheckpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6614,
                              "src": "8494:12:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8471:36:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Checkpoint_$6128_storage",
                              "typeString": "struct SushiToken.Checkpoint storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 6661,
                                "name": "blockNumber",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6622,
                                "src": "8521:11:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 6662,
                                "name": "newVotes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6618,
                                "src": "8534:8:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 6660,
                              "name": "Checkpoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6128,
                              "src": "8510:10:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Checkpoint_$6128_storage_ptr_$",
                                "typeString": "type(struct SushiToken.Checkpoint storage pointer)"
                              }
                            },
                            "id": 6663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8510:33:29",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Checkpoint_$6128_memory_ptr",
                              "typeString": "struct SushiToken.Checkpoint memory"
                            }
                          },
                          "src": "8471:72:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Checkpoint_$6128_storage",
                            "typeString": "struct SushiToken.Checkpoint storage ref"
                          }
                        },
                        "id": 6665,
                        "nodeType": "ExpressionStatement",
                        "src": "8471:72:29"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 6672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 6666,
                              "name": "numCheckpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6140,
                              "src": "8557:14:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                                "typeString": "mapping(address => uint32)"
                              }
                            },
                            "id": 6668,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 6667,
                              "name": "delegatee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6612,
                              "src": "8572:9:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8557:25:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 6671,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 6669,
                              "name": "nCheckpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6614,
                              "src": "8585:12:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 6670,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8600:1:29",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "8585:16:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "8557:44:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 6673,
                        "nodeType": "ExpressionStatement",
                        "src": "8557:44:29"
                      }
                    ]
                  },
                  "id": 6675,
                  "nodeType": "IfStatement",
                  "src": "8278:334:29",
                  "trueBody": {
                    "id": 6654,
                    "nodeType": "Block",
                    "src": "8369:82:29",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 6652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 6643,
                                  "name": "checkpoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6135,
                                  "src": "8383:11:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$6128_storage_$_$",
                                    "typeString": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint storage ref))"
                                  }
                                },
                                "id": 6648,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 6644,
                                  "name": "delegatee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6612,
                                  "src": "8395:9:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8383:22:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$6128_storage_$",
                                  "typeString": "mapping(uint32 => struct SushiToken.Checkpoint storage ref)"
                                }
                              },
                              "id": 6649,
                              "indexExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                "id": 6647,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 6645,
                                  "name": "nCheckpoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6614,
                                  "src": "8406:12:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 6646,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8421:1:29",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "8406:16:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8383:40:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$6128_storage",
                                "typeString": "struct SushiToken.Checkpoint storage ref"
                              }
                            },
                            "id": 6650,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "votes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6127,
                            "src": "8383:46:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 6651,
                            "name": "newVotes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6618,
                            "src": "8432:8:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8383:57:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6653,
                        "nodeType": "ExpressionStatement",
                        "src": "8383:57:29"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6677,
                        "name": "delegatee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6612,
                        "src": "8648:9:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6678,
                        "name": "oldVotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6616,
                        "src": "8659:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6679,
                        "name": "newVotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6618,
                        "src": "8669:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6676,
                      "name": "DelegateVotesChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6175,
                      "src": "8627:20:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 6680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8627:51:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6681,
                  "nodeType": "EmitStatement",
                  "src": "8622:56:29"
                }
              ]
            },
            "documentation": null,
            "id": 6683,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_writeCheckpoint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6612,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6683,
                  "src": "8033:17:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6611,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8033:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6614,
                  "mutability": "mutable",
                  "name": "nCheckpoints",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6683,
                  "src": "8060:19:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 6613,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8060:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6616,
                  "mutability": "mutable",
                  "name": "oldVotes",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6683,
                  "src": "8089:16:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6615,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8089:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6618,
                  "mutability": "mutable",
                  "name": "newVotes",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6683,
                  "src": "8115:16:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6617,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8115:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8023:114:29"
            },
            "returnParameters": {
              "id": 6620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8159:0:29"
            },
            "scope": 6720,
            "src": "7998:687:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6706,
              "nodeType": "Block",
              "src": "8774:75:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 6693,
                          "name": "n",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6685,
                          "src": "8792:1:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_rational_4294967296_by_1",
                            "typeString": "int_const 4294967296"
                          },
                          "id": 6696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 6694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8796:1:29",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3332",
                            "id": 6695,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8799:2:29",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "src": "8796:5:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4294967296_by_1",
                            "typeString": "int_const 4294967296"
                          }
                        },
                        "src": "8792:9:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6698,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6687,
                        "src": "8803:12:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 6692,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8784:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8784:32:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6700,
                  "nodeType": "ExpressionStatement",
                  "src": "8784:32:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6703,
                        "name": "n",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6685,
                        "src": "8840:1:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "8833:6:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint32_$",
                        "typeString": "type(uint32)"
                      },
                      "typeName": {
                        "id": 6701,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8833:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 6704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8833:9:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 6691,
                  "id": 6705,
                  "nodeType": "Return",
                  "src": "8826:16:29"
                }
              ]
            },
            "documentation": null,
            "id": 6707,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safe32",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6685,
                  "mutability": "mutable",
                  "name": "n",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6707,
                  "src": "8707:6:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6684,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8707:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6687,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6707,
                  "src": "8715:26:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6686,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8715:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8706:36:29"
            },
            "returnParameters": {
              "id": 6691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6690,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6707,
                  "src": "8766:6:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 6689,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8766:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8765:8:29"
            },
            "scope": 6720,
            "src": "8691:158:29",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6718,
              "nodeType": "Block",
              "src": "8906:98:29",
              "statements": [
                {
                  "assignments": [
                    6713
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6713,
                      "mutability": "mutable",
                      "name": "chainId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 6718,
                      "src": "8916:15:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6712,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8916:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6714,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8916:15:29"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "8950:24:29",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8952:20:29",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "chainid",
                            "nodeType": "YulIdentifier",
                            "src": "8963:7:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8963:9:29"
                        },
                        "variableNames": [
                          {
                            "name": "chainId",
                            "nodeType": "YulIdentifier",
                            "src": "8952:7:29"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 6713,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "8952:7:29",
                      "valueSize": 1
                    }
                  ],
                  "id": 6715,
                  "nodeType": "InlineAssembly",
                  "src": "8941:33:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6716,
                    "name": "chainId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6713,
                    "src": "8990:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6711,
                  "id": 6717,
                  "nodeType": "Return",
                  "src": "8983:14:29"
                }
              ]
            },
            "documentation": null,
            "id": 6719,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getChainId",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8874:2:29"
            },
            "returnParameters": {
              "id": 6711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6710,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6719,
                  "src": "8900:4:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6709,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8900:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8899:6:29"
            },
            "scope": 6720,
            "src": "8855:149:29",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 6721,
        "src": "152:8854:29"
      }
    ],
    "src": "0:9006:29"
  },
  "bytecode": "",
  "bytecodeSha1": "b32eb98047cf70a9f940b72a0fa2a98fe0f1e492",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12"
  },
  "contractName": "SushiToken",
  "coverageMap": {
    "branches": {
      "0": {},
      "24": {
        "ERC20._approve": {
          "99": [
            9713,
            9732,
            true
          ],
          "100": [
            9791,
            9812,
            true
          ]
        },
        "ERC20._initERC20": {
          "104": [
            2214,
            2227,
            true
          ]
        },
        "ERC20._mint": {
          "103": [
            8173,
            8194,
            true
          ]
        },
        "ERC20._transfer": {
          "101": [
            7395,
            7415,
            true
          ],
          "102": [
            7475,
            7498,
            true
          ]
        }
      },
      "29": {
        "SushiToken._moveDelegates": {
          "90": [
            7158,
            7174,
            false
          ],
          "91": [
            7178,
            7188,
            false
          ],
          "92": [
            7208,
            7228,
            false
          ],
          "93": [
            7374,
            7387,
            true
          ],
          "94": [
            7601,
            7621,
            false
          ],
          "95": [
            7767,
            7780,
            true
          ]
        },
        "SushiToken._writeCheckpoint": {
          "96": [
            8282,
            8298,
            false
          ],
          "97": [
            8302,
            8367,
            false
          ]
        },
        "SushiToken.delegateBySig": {
          "87": [
            4257,
            4280,
            true
          ],
          "88": [
            4342,
            4370,
            true
          ],
          "89": [
            4428,
            4441,
            true
          ]
        },
        "SushiToken.getCurrentVotes": {
          "86": [
            4908,
            4924,
            true
          ]
        },
        "SushiToken.getPriorVotes": {
          "80": [
            5540,
            5566,
            true
          ],
          "81": [
            5681,
            5698,
            false
          ],
          "82": [
            5790,
            5853,
            false
          ],
          "83": [
            5989,
            6036,
            false
          ],
          "84": [
            6337,
            6364,
            false
          ],
          "85": [
            6424,
            6450,
            false
          ]
        },
        "SushiToken.safe32": {
          "98": [
            8792,
            8801,
            true
          ]
        }
      },
      "3": {
        "SafeMath.add": {
          "110": [
            986,
            992,
            true
          ]
        },
        "SafeMath.sub": {
          "109": [
            1859,
            1865,
            true
          ]
        }
      },
      "50": {
        "Owned._initOwned": {
          "108": [
            412,
            424,
            true
          ]
        },
        "Owned.acceptOwnership": {
          "106": [
            918,
            940,
            true
          ]
        },
        "Owned.transferOwnership": {
          "107": [
            813,
            822,
            true
          ]
        },
        "SushiToken.mint": {
          "105": [
            315,
            324,
            true
          ]
        }
      },
      "57": {},
      "6": {},
      "61": {}
    },
    "statements": {
      "0": {
        "Context._msgSender": {
          "41": [
            670,
            687
          ]
        }
      },
      "24": {
        "ERC20._approve": {
          "42": [
            9705,
            9773
          ],
          "43": [
            9783,
            9851
          ],
          "44": [
            9862,
            9898
          ],
          "45": [
            9908,
            9945
          ]
        },
        "ERC20._initERC20": {
          "68": [
            2206,
            2274
          ],
          "69": [
            2284,
            2296
          ],
          "70": [
            2306,
            2322
          ],
          "71": [
            2332,
            2346
          ],
          "72": [
            2356,
            2375
          ]
        },
        "ERC20._mint": {
          "54": [
            8165,
            8230
          ],
          "55": [
            8241,
            8290
          ],
          "56": [
            8301,
            8340
          ],
          "57": [
            8350,
            8401
          ],
          "58": [
            8411,
            8453
          ]
        },
        "ERC20._transfer": {
          "46": [
            7387,
            7457
          ],
          "47": [
            7467,
            7538
          ],
          "48": [
            7549,
            7596
          ],
          "49": [
            7607,
            7698
          ],
          "50": [
            7708,
            7763
          ],
          "51": [
            7773,
            7813
          ]
        },
        "ERC20.allowance": {
          "38": [
            4331,
            4365
          ]
        },
        "ERC20.approve": {
          "1": [
            4609,
            4648
          ],
          "2": [
            4658,
            4669
          ]
        },
        "ERC20.balanceOf": {
          "13": [
            3758,
            3783
          ]
        },
        "ERC20.decimals": {
          "7": [
            3434,
            3450
          ]
        },
        "ERC20.decreaseAllowance": {
          "31": [
            6659,
            6788
          ]
        },
        "ERC20.increaseAllowance": {
          "8": [
            5952,
            6035
          ]
        },
        "ERC20.name": {
          "0": [
            2518,
            2530
          ]
        },
        "ERC20.symbol": {
          "30": [
            2723,
            2737
          ]
        },
        "ERC20.totalSupply": {
          "3": [
            3589,
            3608
          ]
        },
        "ERC20.transfer": {
          "32": [
            4095,
            4137
          ]
        },
        "ERC20.transferFrom": {
          "4": [
            5258,
            5294
          ],
          "5": [
            5304,
            5425
          ],
          "6": [
            5435,
            5446
          ]
        }
      },
      "29": {
        "SushiToken._delegate": {
          "61": [
            6876,
            6909
          ],
          "62": [
            6920,
            6979
          ],
          "63": [
            6990,
            7050
          ]
        },
        "SushiToken._moveDelegates": {
          "59": [
            7511,
            7568
          ],
          "60": [
            7904,
            7961
          ]
        },
        "SushiToken._writeCheckpoint": {
          "74": [
            8383,
            8440
          ],
          "75": [
            8471,
            8543
          ],
          "76": [
            8557,
            8601
          ],
          "77": [
            8622,
            8678
          ]
        },
        "SushiToken.delegate": {
          "12": [
            2931,
            2970
          ]
        },
        "SushiToken.delegateBySig": {
          "34": [
            4249,
            4324
          ],
          "35": [
            4334,
            4410
          ],
          "36": [
            4420,
            4485
          ],
          "37": [
            4495,
            4533
          ]
        },
        "SushiToken.delegates": {
          "11": [
            2702,
            2730
          ]
        },
        "SushiToken.getCurrentVotes": {
          "33": [
            4901,
            4975
          ]
        },
        "SushiToken.getPriorVotes": {
          "14": [
            5532,
            5611
          ],
          "15": [
            5714,
            5722
          ],
          "16": [
            5869,
            5920
          ],
          "17": [
            6052,
            6060
          ],
          "18": [
            6384,
            6399
          ],
          "19": [
            6470,
            6484
          ],
          "20": [
            6523,
            6541
          ],
          "21": [
            6575,
            6615
          ]
        },
        "SushiToken.initToken": {
          "26": [
            313,
            330
          ],
          "27": [
            340,
            366
          ]
        },
        "SushiToken.mint": {
          "9": [
            547,
            566
          ],
          "10": [
            576,
            628
          ]
        },
        "SushiToken.safe32": {
          "78": [
            8784,
            8816
          ],
          "79": [
            8826,
            8842
          ]
        }
      },
      "3": {
        "SafeMath.add": {
          "53": [
            978,
            1024
          ]
        },
        "SafeMath.sub": {
          "52": [
            1851,
            1880
          ],
          "73": [
            1398,
            1448
          ]
        }
      },
      "50": {
        "Owned._initOwned": {
          "64": [
            404,
            425
          ],
          "65": [
            435,
            468
          ],
          "66": [
            478,
            496
          ],
          "67": [
            506,
            551
          ]
        },
        "Owned.acceptOwnership": {
          "22": [
            910,
            941
          ],
          "23": [
            951,
            994
          ],
          "24": [
            1004,
            1039
          ],
          "25": [
            1049,
            1070
          ]
        },
        "Owned.isOwner": {
          "29": [
            702,
            729
          ]
        },
        "Owned.owner": {
          "28": [
            621,
            634
          ]
        },
        "Owned.transferOwnership": {
          "39": [
            805,
            823
          ],
          "40": [
            833,
            853
          ]
        }
      },
      "57": {},
      "6": {},
      "61": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.2.0/Address",
    "OpenZeppelin/openzeppelin-contracts@3.2.0/Context",
    "ERC20",
    "IERC20",
    "IMisoToken",
    "Owned",
    "OpenZeppelin/openzeppelin-contracts@3.2.0/SafeMath"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "152:8854:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:90:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4510:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4510:166:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3517:98;;;:::i;:::-;;;;;;;;;;;;;;;;1629:122:29;;;:::i;5136:317:24:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5136:317:24;;;;;;;;;;;;;;;;;:::i;3367:90::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5848:215;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5848:215:24;;;;;;;;:::i;476:159:29:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;476:159:29;;;;;;;;:::i;:::-;;2594:143;;;;;;;;;;;;;;;;-1:-1:-1;2594:143:29;-1:-1:-1;;;;;2594:143:29;;:::i;:::-;;;;-1:-1:-1;;;;;2594:143:29;;;;;;;;;;;;;;2875:102;;;;;;;;;;;;;;;;-1:-1:-1;2875:102:29;-1:-1:-1;;;;;2875:102:29;;:::i;1510:49::-;;;;;;;;;;;;;;;;-1:-1:-1;1510:49:29;-1:-1:-1;;;;;1510:49:29;;:::i;:::-;;;;;;;;;;;;;;;;;;;3673:117:24;;;;;;;;;;;;;;;;-1:-1:-1;3673:117:24;-1:-1:-1;;;;;3673:117:24;;:::i;5404:1218:29:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5404:1218:29;;;;;;;;:::i;866:211:50:-;;;:::i;2037:39:29:-;;;;;;;;;;;;;;;;-1:-1:-1;2037:39:29;-1:-1:-1;;;;;2037:39:29;;:::i;207:166::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;207:166:29;;;;;;;;-1:-1:-1;207:166:29;;-1:-1:-1;;207:166:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;207:166:29;;-1:-1:-1;;;207:166:29;;-1:-1:-1;;;;;207:166:29;;-1:-1:-1;207:166:29;;-1:-1:-1;207:166:29:i;564:77:50:-;;;:::i;646:90::-;;;:::i;2650:94:24:-;;;:::i;6550:266::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6550:266:24;;;;;;;;:::i;3993:172::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3993:172:24;;;;;;;;:::i;4734:248:29:-;;;;;;;;;;;;;;;;-1:-1:-1;4734:248:29;-1:-1:-1;;;;;4734:248:29;;:::i;3400:1140::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3400:1140:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;156:23:50:-;;;:::i;4223:149:24:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4223:149:24;;;;;;;;;;:::i;1842:117:29:-;;;:::i;1374:70::-;;;;;;;;;;;;;;;;-1:-1:-1;1374:70:29;;-1:-1:-1;;;;;1374:70:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;742:118:50;;;;;;;;;;;;;;;;-1:-1:-1;742:118:50;-1:-1:-1;;;;;742:118:50;;:::i;2447:90:24:-;2525:5;2518:12;;;;;;;;-1:-1:-1;;2518:12:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:13;;2518:12;;2525:5;;2518:12;;2525:5;2518:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:90;:::o;4510:166::-;4593:4;4609:39;4618:12;:10;:12::i;:::-;4632:7;4641:6;4609:8;:39::i;:::-;-1:-1:-1;4665:4:24;4510:166;;;;;:::o;3517:98::-;3596:12;;3517:98;:::o;1629:122:29:-;1671:80;1629:122;:::o;5136:317:24:-;5242:4;5258:36;5268:6;5276:9;5287:6;5258:9;:36::i;:::-;5304:121;5313:6;5321:12;:10;:12::i;:::-;5335:89;5373:6;5335:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5335:19:24;;;;;;:11;:19;;;;;;5355:12;:10;:12::i;:::-;-1:-1:-1;;;;;5335:33:24;;;;;;;;;;;;-1:-1:-1;5335:33:24;;;:89;:37;:89::i;:::-;5304:8;:121::i;:::-;-1:-1:-1;5442:4:24;5136:317;;;;;:::o;3367:90::-;3441:9;;;;3367:90;:::o;5848:215::-;5936:4;5952:83;5961:12;:10;:12::i;:::-;5975:7;5984:50;6023:10;5984:11;:25;5996:12;:10;:12::i;:::-;-1:-1:-1;;;;;5984:25:24;;;;;;;;;;;;;;;;;-1:-1:-1;5984:25:24;;;:34;;;;;;;;;;;:38;:50::i;476:159:29:-;315:9:50;:7;:9::i;:::-;307:18;;;;;;547:19:29::1;553:3;558:7;547:5;:19::i;:::-;-1:-1:-1::0;;;;;603:15:29;;::::1;599:1;603:15:::0;;;:10:::1;:15;::::0;;;;;576:52:::1;::::0;603:15:::1;620:7:::0;576:14:::1;:52::i;:::-;476:159:::0;;:::o;2594:143::-;-1:-1:-1;;;;;2709:21:29;;;2679:7;2709:21;;;:10;:21;;;;;;;;2594:143::o;2875:102::-;2938:32;2948:10;2960:9;2938;:32::i;:::-;2875:102;:::o;1510:49::-;;;;;;;;;;;;;;;:::o;3673:117:24:-;-1:-1:-1;;;;;3765:18:24;3739:7;3765:18;;;:9;:18;;;;;;;3673:117::o;5404:1218:29:-;5509:7;5554:12;5540:11;:26;5532:79;;;;-1:-1:-1;;;5532:79:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5644:23:29;;5622:19;5644:23;;;:14;:23;;;;;;;;5681:17;5677:56;;5721:1;5714:8;;;;;5677:56;-1:-1:-1;;;;;5790:20:29;;;;;;:11;:20;;;;;;;;:38;-1:-1:-1;;5811:16:29;;5790:38;;;;;;;;;:48;;:63;-1:-1:-1;5786:145:29;;-1:-1:-1;;;;;5876:20:29;;;;;;:11;:20;;;;;;;;-1:-1:-1;;5897:16:29;;;;5876:38;;;;;;;;5912:1;5876:44;;;-1:-1:-1;5869:51:29;;5786:145;-1:-1:-1;;;;;5989:20:29;;;;;;:11;:20;;;;;;;;:23;;;;;;;;:33;:23;:33;:47;-1:-1:-1;5985:86:29;;;6059:1;6052:8;;;;;5985:86;6081:12;-1:-1:-1;;6122:16:29;;6148:418;6163:5;6155:13;;:5;:13;;;6148:418;;;6226:1;6209:13;;;6208:19;;;6200:27;;6268:20;;:::i;:::-;-1:-1:-1;;;;;;6291:20:29;;;;;;:11;:20;;;;;;;;:28;;;;;;;;;;;;;6268:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6337:27;;6333:223;;;6391:8;;;;-1:-1:-1;6384:15:29;;-1:-1:-1;;;;6384:15:29;6333:223;6424:12;;:26;;;-1:-1:-1;6420:136:29;;;6478:6;6470:14;;6420:136;;;6540:1;6531:6;:10;6523:18;;6420:136;6148:418;;;;;-1:-1:-1;;;;;;6582:20:29;;;;;;:11;:20;;;;;;;;:27;;;;;;;;;;:33;;;;-1:-1:-1;;5404:1218:29;;;;:::o;866:211:50:-;932:8;;-1:-1:-1;;;;;932:8:50;918:10;:22;910:31;;;;;;985:8;;;977:6;;956:38;;-1:-1:-1;;;;;985:8:50;;;;977:6;;;;956:38;;;1029:8;;;;1004:35;;-1:-1:-1;;;;;;1004:35:50;;;-1:-1:-1;;;;;1029:8:50;;1004:35;;;;1049:21;;;866:211::o;2037:39:29:-;;;;;;;;;;;;;:::o;207:166::-;313:17;324:5;313:10;:17::i;:::-;340:26;351:5;358:7;340:10;:26::i;:::-;207:166;;;:::o;564:77:50:-;602:7;628:6;-1:-1:-1;;;;;628:6:50;564:77;:::o;646:90::-;686:4;723:6;-1:-1:-1;;;;;723:6:50;709:10;:20;;646:90::o;2650:94:24:-;2730:7;2723:14;;;;;;;;-1:-1:-1;;2723:14:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2698:13;;2723:14;;2730:7;;2723:14;;2730:7;2723:14;;;;;;;;;;;;;;;;;;;;;;;;6550:266;6643:4;6659:129;6668:12;:10;:12::i;:::-;6682:7;6691:96;6730:15;6691:96;;;;;;;;;;;;;;;;;:11;:25;6703:12;:10;:12::i;:::-;-1:-1:-1;;;;;6691:25:24;;;;;;;;;;;;;;;;;-1:-1:-1;6691:25:24;;;:34;;;;;;;;;;;:96;:38;:96::i;3993:172::-;4079:4;4095:42;4105:12;:10;:12::i;:::-;4119:9;4130:6;4095:9;:42::i;4734:248:29:-;-1:-1:-1;;;;;4868:23:29;;4823:7;4868:23;;;:14;:23;;;;;;;;4908:16;:67;;4974:1;4908:67;;;-1:-1:-1;;;;;4927:20:29;;;;;;:11;:20;;;;;;;;:38;-1:-1:-1;;4948:16:29;;4927:38;;;;;;;;4963:1;4927:44;;4908:67;4901:74;4734:248;-1:-1:-1;;;4734:248:29:o;3400:1140::-;3583:23;1671:80;3709:6;:4;:6::i;:::-;3693:24;;;;;;3735:12;:10;:12::i;:::-;3632:160;;;;;;;;;;;;;;;;;;;;;;;;;3773:4;3632:160;;;;;;;;;;;;;;;;;;;;;;;3609:193;;;;;;1888:71;3857:135;;;;-1:-1:-1;;;;;3857:135:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3834:168;;;;;;-1:-1:-1;;;4053:119:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4030:152;;;;;;;;;-1:-1:-1;4213:26:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3609:193;;-1:-1:-1;3834:168:29;;4030:152;;-1:-1:-1;;4213:26:29;;;;;;;-1:-1:-1;;4213:26:29;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4213:26:29;;-1:-1:-1;;4213:26:29;;;-1:-1:-1;;;;;;;4257:23:29;;4249:75;;;;-1:-1:-1;;;4249:75:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4351:17:29;;;;;;:6;:17;;;;;:19;;;;;;;;4342:28;;4334:76;;;;-1:-1:-1;;;4334:76:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4435:6;4428:3;:13;;4420:65;;;;-1:-1:-1;;;4420:65:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4502:31;4512:9;4523;4502;:31::i;:::-;4495:38;;;;3400:1140;;;;;;;:::o;156:23:50:-;;;-1:-1:-1;;;;;156:23:50;;:::o;4223:149:24:-;-1:-1:-1;;;;;4338:18:24;;;4312:7;4338:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4223:149::o;1842:117:29:-;1888:71;1842:117;:::o;1374:70::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;742:118:50:-;813:9;:7;:9::i;:::-;805:18;;;;;;833:8;:20;;-1:-1:-1;;;;;;833:20:50;-1:-1:-1;;;;;833:20:50;;;;;;;;;;742:118::o;590:104:0:-;677:10;590:104;:::o;9612:340:24:-;-1:-1:-1;;;;;9713:19:24;;9705:68;;;;-1:-1:-1;;;9705:68:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9791:21:24;;9783:68;;;;-1:-1:-1;;;9783:68:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9862:18:24;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9913:32;;;;;;;;;;;;;;;;;9612:340;;;:::o;7290:530::-;-1:-1:-1;;;;;7395:20:24;;7387:70;;;;-1:-1:-1;;;7387:70:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7475:23:24;;7467:71;;;;-1:-1:-1;;;7467:71:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7549:47;7570:6;7578:9;7589:6;7549:20;:47::i;:::-;7627:71;7649:6;7627:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7627:17:24;;;;;;:9;:17;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7607:17:24;;;;;;;:9;:17;;;;;;:91;;;;7731:20;;;;;;;:32;;7756:6;7731:24;:32::i;:::-;-1:-1:-1;;;;;7708:20:24;;;;;;;:9;:20;;;;;;;;;:55;;;;7778:35;;;;;;;7708:20;;7778:35;;;;;;;;;;;;;7290:530;;;:::o;1746:187:3:-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1902:5:3;;;1746:187::o;874:176::-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;8090:370:24;-1:-1:-1;;;;;8173:21:24;;8165:65;;;;;-1:-1:-1;;;8165:65:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;8241:49;8270:1;8274:7;8283:6;8241:20;:49::i;:::-;8316:12;;:24;;8333:6;8316:16;:24::i;:::-;8301:12;:39;-1:-1:-1;;;;;8371:18:24;;;;;;:9;:18;;;;;;:30;;8394:6;8371:22;:30::i;:::-;-1:-1:-1;;;;;8350:18:24;;;;;;:9;:18;;;;;;;;:51;;;;8416:37;;;;;;;8350:18;;;;8416:37;;;;;;;;;;8090:370;;:::o;7063:929:29:-;7168:6;-1:-1:-1;;;;;7158:16:29;:6;-1:-1:-1;;;;;7158:16:29;;;:30;;;;;7187:1;7178:6;:10;7158:30;7154:832;;;-1:-1:-1;;;;;7208:20:29;;;7204:379;;-1:-1:-1;;;;;7314:22:29;;7295:16;7314:22;;;:14;:22;;;;;;;;;7374:13;:60;;7433:1;7374:60;;;-1:-1:-1;;;;;7390:19:29;;;;;;:11;:19;;;;;;;;:34;-1:-1:-1;;7410:13:29;;7390:34;;;;;;;;7422:1;7390:40;;7374:60;7354:80;-1:-1:-1;7452:17:29;7472:21;7354:80;7486:6;7472:13;:21::i;:::-;7452:41;;7511:57;7528:6;7536:9;7547;7558;7511:16;:57::i;:::-;7204:379;;;;-1:-1:-1;;;;;7601:20:29;;;7597:379;;-1:-1:-1;;;;;7707:22:29;;7688:16;7707:22;;;:14;:22;;;;;;;;;7767:13;:60;;7826:1;7767:60;;;-1:-1:-1;;;;;7783:19:29;;;;;;:11;:19;;;;;;;;:34;-1:-1:-1;;7803:13:29;;7783:34;;;;;;;;7815:1;7783:40;;7767:60;7747:80;-1:-1:-1;7845:17:29;7865:21;7747:80;7879:6;7865:13;:21::i;:::-;7845:41;;7904:57;7921:6;7929:9;7940;7951;7904:16;:57::i;6628:429::-;-1:-1:-1;;;;;6742:21:29;;;6716:23;6742:21;;;:10;:21;;;;;;;;;;6800:20;6753:9;6800;:20::i;:::-;-1:-1:-1;;;;;6876:21:29;;;;;;;:10;:21;;;;;;:33;;-1:-1:-1;;;;;;6876:33:29;;;;;;;;;;6925:54;;6773:47;;-1:-1:-1;6876:33:29;6925:54;;;;;;6876:21;6925:54;6990:60;7005:15;7022:9;7033:16;6990:14;:60::i;:::-;6628:429;;;;:::o;349:209:50:-;413:11;;-1:-1:-1;;;413:11:50;;;;412:12;404:21;;;;;;435:6;:33;;-1:-1:-1;;;;;;;;;435:33:50;;;-1:-1:-1;;;;;;435:33:50;;;;;;;478:18;-1:-1:-1;;;478:18:50;;;;511:40;;544:6;;;435;511:40;;435:6;;511:40;349:209;:::o;2125:257:24:-;2215:12;;;;;;;2214:13;2206:68;;;;-1:-1:-1;;;2206:68:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2284:12;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;2306:16:24;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2332:9:24;:14;;-1:-1:-1;;;;2332:14:24;;;2344:2;2332:14;2356:19;2332:14;2356:19;;;-1:-1:-1;2125:257:24:o;8855:149:29:-;8963:9;8855:149;:::o;1321:134:3:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;7998:687:29:-;8169:18;8190:77;8197:12;8190:77;;;;;;;;;;;;;;;;;:6;:77::i;:::-;8169:98;;8297:1;8282:12;:16;;;:85;;;;-1:-1:-1;;;;;;8302:22:29;;;;;;:11;:22;;;;;;;;:65;-1:-1:-1;;8325:16:29;;8302:40;;;;;;;;;:50;:65;;;:50;;:65;8282:85;8278:334;;;-1:-1:-1;;;;;8383:22:29;;;;;;:11;:22;;;;;;;;:40;-1:-1:-1;;8406:16:29;;8383:40;;;;;;;;8421:1;8383:46;:57;;;8278:334;;;8510:33;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8471:22:29;;-1:-1:-1;8471:22:29;;;:11;:22;;;;;:36;;;;;;;;;;:72;;;;;;;-1:-1:-1;;8471:72:29;;;;;;;;;;;;;8557:25;;;:14;:25;;;;;;:44;;8585:16;;;8557:44;;;;;;;;;;8278:334;8627:51;;;;;;;;;;;;;;-1:-1:-1;;;;;8627:51:29;;;;;;;;;;;7998:687;;;;;:::o;8691:158::-;8766:6;8803:12;8796:5;8792:9;;8784:32;;;;-1:-1:-1;;;8784:32:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8840:1:29;;8691:158;-1:-1:-1;;8691:158:29:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;",
  "language": "Solidity",
  "natspec": {
    "events": {
      "DelegateChanged(address,address,address)": {
        "notice": "An event thats emitted when an account changes its delegate"
      },
      "DelegateVotesChanged(address,uint256,uint256)": {
        "notice": "An event thats emitted when a delegate account's vote balance changes"
      }
    },
    "kind": "dev",
    "methods": {
      "DELEGATION_TYPEHASH()": {
        "notice": "The EIP-712 typehash for the delegation struct used by the contract"
      },
      "DOMAIN_TYPEHASH()": {
        "notice": "The EIP-712 typehash for the contract's domain"
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "checkpoints(address,uint32)": {
        "notice": "A record of votes checkpoints for each account, by index"
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "delegate(address)": {
        "notice": "Delegate votes from `msg.sender` to `delegatee`",
        "params": {
          "delegatee": "The address to delegate votes to"
        }
      },
      "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
        "notice": "Delegates votes from signatory to `delegatee`",
        "params": {
          "delegatee": "The address to delegate votes to",
          "expiry": "The time at which to expire the signature",
          "nonce": "The contract state required to match the signature",
          "r": "Half of the ECDSA signature pair",
          "s": "Half of the ECDSA signature pair",
          "v": "The recovery byte of the signature"
        }
      },
      "delegates(address)": {
        "notice": "Delegate votes from `msg.sender` to `delegatee`",
        "params": {
          "delegator": "The address to get delegatee for"
        }
      },
      "getCurrentVotes(address)": {
        "notice": "Gets the current votes balance for `account`",
        "params": {
          "account": "The address to get votes balance"
        },
        "returns": {
          "_0": "The number of current votes for `account`"
        }
      },
      "getPriorVotes(address,uint256)": {
        "details": "Block number must be a finalized block or else this function will revert to prevent misinformation.",
        "notice": "Determine the prior number of votes for an account as of a block number",
        "params": {
          "account": "The address of the account to check",
          "blockNumber": "The block number to get the vote balance at"
        },
        "returns": {
          "_0": "The number of votes the account had as of the given block"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "notice": "Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef)."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "nonces(address)": {
        "notice": "A record of states for signing / validating signatures"
      },
      "numCheckpoints(address)": {
        "notice": "The number of checkpoints for each account"
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    152,
    9006
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xB4B5EA57 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x69A JUMPI DUP1 PUSH4 0xE7A324DC EQ PUSH2 0x6C8 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x6D0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x722 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0xB4B5EA57 EQ PUSH2 0x625 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x64B JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0x692 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x8F32D59B GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x5BD JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5C5 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x5CD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5F9 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0x893C8BBA EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5B5 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x6FCFFF45 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0x782D6FE1 EQ PUSH2 0x423 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x44F JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x398 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x20606B70 GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x20606B70 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2FC JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x286 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D1 PUSH2 0x748 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1F3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x238 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH2 0x802 JUMP JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x826 JUMP JUMPDEST PUSH2 0x2E6 PUSH2 0x8AD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x354 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x904 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x948 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x354 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x966 JUMP JUMPDEST PUSH2 0x3E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x98B JUMP JUMPDEST PUSH2 0x28E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x9A6 JUMP JUMPDEST PUSH2 0x354 PUSH2 0xBAE JUMP JUMPDEST PUSH2 0x28E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC29 JUMP JUMPDEST PUSH2 0x354 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x4AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x4C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x4E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP POP POP SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0xC3B SWAP1 POP JUMP JUMPDEST PUSH2 0x37C PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x272 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0xC73 JUMP JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xCD4 JUMP JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x60F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xD3C JUMP JUMPDEST PUSH2 0x28E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD50 JUMP JUMPDEST PUSH2 0x354 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x60 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0xDB4 JUMP JUMPDEST PUSH2 0x37C PUSH2 0x1027 JUMP JUMPDEST PUSH2 0x28E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1036 JUMP JUMPDEST PUSH2 0x28E PUSH2 0x1061 JUMP JUMPDEST PUSH2 0x702 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x1085 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x354 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x738 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10B2 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x7D4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7A9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F2 PUSH2 0x7EB PUSH2 0x10E5 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x10E9 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x833 DUP5 DUP5 DUP5 PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x8A3 DUP5 PUSH2 0x83F PUSH2 0x10E5 JUMP JUMPDEST PUSH2 0x89E DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BB4 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x87D PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1332 JUMP JUMPDEST PUSH2 0x10E9 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F2 PUSH2 0x8C3 PUSH2 0x10E5 JUMP JUMPDEST DUP5 PUSH2 0x89E DUP6 PUSH1 0x3 PUSH1 0x0 PUSH2 0x8D4 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x13C9 JUMP JUMPDEST PUSH2 0x90C PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x915 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x91F DUP3 DUP3 PUSH2 0x1423 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x944 SWAP3 AND DUP4 PUSH2 0x1515 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH2 0x970 CALLER DUP3 PUSH2 0x1652 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x9E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B8C PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0xA14 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD AND DUP4 LT PUSH2 0xA83 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x0 NOT SWAP5 SWAP1 SWAP5 ADD PUSH4 0xFFFFFFFF AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP4 LT ISZERO PUSH2 0xABE JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 ADD JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0xB77 JUMPI PUSH1 0x2 DUP3 DUP3 SUB PUSH4 0xFFFFFFFF AND DIV DUP2 SUB PUSH2 0xAF0 PUSH2 0x19F0 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF DUP1 DUP7 AND DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP1 SWAP4 AND DUP1 DUP3 MSTORE PUSH1 0x1 SWAP1 SWAP4 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP8 EQ ISZERO PUSH2 0xB52 JUMPI PUSH1 0x20 ADD MLOAD SWAP5 POP PUSH2 0x7F6 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH4 0xFFFFFFFF AND DUP8 GT ISZERO PUSH2 0xB69 JUMPI DUP2 SWAP4 POP PUSH2 0xB70 JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP3 POP JUMPDEST POP POP PUSH2 0xAC6 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC44 DUP2 PUSH2 0x16E7 JUMP JUMPDEST PUSH2 0xC4E DUP4 DUP4 PUSH2 0x175C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x7D4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7A9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F2 PUSH2 0xCE1 PUSH2 0x10E5 JUMP JUMPDEST DUP5 PUSH2 0x89E DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C6F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x3 PUSH1 0x0 PUSH2 0xD0B PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1332 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F2 PUSH2 0xD49 PUSH2 0x10E5 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x11D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND DUP1 PUSH2 0xD7B JUMPI PUSH1 0x0 PUSH2 0xDAD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866 PUSH2 0xDDF PUSH2 0x748 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0xDEE PUSH2 0x17E7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP1 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADDRESS PUSH1 0x80 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 DUP4 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP5 ADD KECCAK256 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP4 ADD DUP11 SWAP1 MSTORE PUSH2 0x120 DUP1 DUP5 ADD DUP11 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x140 DUP5 ADD DUP4 MSTORE DUP1 MLOAD SWAP1 DUP6 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x160 DUP6 ADD MSTORE PUSH2 0x162 DUP5 ADD DUP3 SWAP1 MSTORE PUSH2 0x182 DUP1 DUP6 ADD DUP3 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x1A2 DUP6 ADD DUP1 DUP6 MSTORE DUP2 MLOAD SWAP2 DUP8 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP2 DUP3 SWAP1 MSTORE PUSH2 0x1C2 DUP7 ADD DUP1 DUP7 MSTORE DUP2 SWAP1 MSTORE PUSH1 0xFF DUP12 AND PUSH2 0x1E2 DUP8 ADD MSTORE PUSH2 0x202 DUP7 ADD DUP11 SWAP1 MSTORE PUSH2 0x222 DUP7 ADD DUP10 SWAP1 MSTORE SWAP4 MLOAD SWAP3 SWAP7 POP SWAP1 SWAP5 SWAP3 SWAP4 SWAP1 SWAP3 PUSH1 0x1 SWAP3 PUSH2 0x242 DUP1 DUP5 ADD SWAP4 PUSH1 0x1F NOT DUP4 ADD SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF21 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1BFF PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP10 EQ PUSH2 0xFD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1BDC PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 TIMESTAMP GT ISZERO PUSH2 0x1010 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1ABE PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x101A DUP2 DUP12 PUSH2 0x1652 JUMP JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH2 0x10BA PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x10C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x112E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1C4B PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1173 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1AE5 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x121A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1C26 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x125F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A9B PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x126A DUP4 DUP4 DUP4 PUSH2 0xC4E JUMP JUMPDEST PUSH2 0x12A7 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B07 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1332 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x12D6 SWAP1 DUP3 PUSH2 0x13C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x13C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1386 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x136E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13B3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xDAD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x147E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x148A PUSH1 0x0 DUP4 DUP4 PUSH2 0xC4E JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1497 SWAP1 DUP3 PUSH2 0x13C9 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x14BD SWAP1 DUP3 PUSH2 0x13C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1537 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0xC4E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x15C9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x1577 JUMPI PUSH1 0x0 PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP8 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x15B7 DUP3 DUP6 PUSH2 0x17EB JUMP JUMPDEST SWAP1 POP PUSH2 0x15C5 DUP7 DUP5 DUP5 DUP5 PUSH2 0x182D JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0xC4E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH2 0x1604 JUMPI PUSH1 0x0 PUSH2 0x1636 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP8 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1644 DUP3 DUP6 PUSH2 0x13C9 JUMP JUMPDEST SWAP1 POP PUSH2 0x101F DUP6 DUP5 DUP5 DUP5 PUSH2 0x182D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND SWAP1 PUSH2 0x1679 DUP5 PUSH2 0x98B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP10 DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP5 SWAP6 POP SWAP4 SWAP3 DUP7 AND SWAP3 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0x16E1 DUP3 DUP5 DUP4 PUSH2 0x1515 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x16FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP1 DUP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x17A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B2D PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x17B6 SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x1A07 JUMP JUMPDEST POP DUP1 MLOAD PUSH2 0x17CA SWAP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1A07 JUMP JUMPDEST POP POP PUSH1 0x7 DUP1 SLOAD PUSH2 0xFF00 NOT PUSH1 0xFF NOT SWAP1 SWAP2 AND PUSH1 0x12 OR AND PUSH2 0x100 OR SWAP1 SSTORE POP JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAD DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1332 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1851 NUMBER PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B57 PUSH1 0x35 SWAP2 CODECOPY PUSH2 0x1992 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x189A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP10 ADD DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP3 DUP3 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x18D7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP10 ADD AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD DUP3 SWAP1 SSTORE PUSH2 0x1948 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH4 0xFFFFFFFF DUP1 DUP5 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 DUP5 MSTORE DUP7 DUP2 KECCAK256 DUP12 DUP7 AND DUP3 MSTORE DUP5 MSTORE DUP7 DUP2 KECCAK256 SWAP6 MLOAD DUP7 SLOAD SWAP1 DUP7 AND PUSH4 0xFFFFFFFF NOT SWAP2 DUP3 AND OR DUP8 SSTORE SWAP3 MLOAD PUSH1 0x1 SWAP7 DUP8 ADD SSTORE SWAP1 DUP2 MSTORE PUSH1 0xA SWAP1 SWAP3 MSTORE SWAP4 SWAP1 KECCAK256 DUP1 SLOAD SWAP3 DUP9 ADD SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP3 PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH5 0x100000000 DUP5 LT PUSH2 0x19E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1386 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x136E JUMP JUMPDEST POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x1A48 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1A75 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1A75 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1A75 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1A5A JUMP JUMPDEST POP PUSH2 0x1A81 SWAP3 SWAP2 POP PUSH2 0x1A85 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1A81 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1A86 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 MSTORE8 SSTORE MSTORE8 0x48 0x49 GASPRICE GASPRICE PUSH5 0x656C656761 PUSH21 0x6542795369673A207369676E617475726520657870 PUSH10 0x72656445524332303A20 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x6F6B656E2068617320616C7265616479206265656E KECCAK256 PUSH10 0x6E697469616C697A6564 0x21 MSTORE8 SSTORE MSTORE8 0x48 0x49 GASPRICE GASPRICE 0x5F PUSH24 0x72697465436865636B706F696E743A20626C6F636B206E75 PUSH14 0x6265722065786365656473203332 KECCAK256 PUSH3 0x697473 MSTORE8 SSTORE MSTORE8 0x48 0x49 GASPRICE GASPRICE PUSH8 0x65745072696F7256 PUSH16 0x7465733A206E6F742079657420646574 PUSH6 0x726D696E6564 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636553555348493A3A64656C PUSH6 0x676174654279 MSTORE8 PUSH10 0x673A20696E76616C6964 KECCAK256 PUSH15 0x6F6E636553555348493A3A64656C65 PUSH8 0x6174654279536967 GASPRICE KECCAK256 PUSH10 0x6E76616C696420736967 PUSH15 0x617475726545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212200B54 DUP9 DUP13 STOP 0xC8 0xE3 OR 0xD4 SWAP11 PUSH9 0x71A426E275A13E3B93 SWAP15 0xDB SDIV 0x5C EXP 0xEC LOG3 0xB8 XOR 0x22 CHAINID 0xE4 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        152,
        9006
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "5": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "CALLVALUE",
      "path": "29"
    },
    "6": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "7": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "8": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "12": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "REVERT",
      "path": "29"
    },
    "16": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "17": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "POP",
      "path": "29"
    },
    "18": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "21": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "LT",
      "path": "29"
    },
    "22": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1C4"
    },
    "25": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "26": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "29": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "SHR",
      "path": "29"
    },
    "32": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "33": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x7ECEBE00"
    },
    "38": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "GT",
      "path": "29"
    },
    "39": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xF9"
    },
    "42": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "43": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "44": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xB4B5EA57"
    },
    "49": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "GT",
      "path": "29"
    },
    "50": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x97"
    },
    "53": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "54": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "55": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xDD62ED3E"
    },
    "60": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "GT",
      "path": "29"
    },
    "61": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x71"
    },
    "64": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "65": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "66": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xDD62ED3E"
    },
    "71": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "EQ",
      "path": "29"
    },
    "72": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x69A"
    },
    "75": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "76": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "77": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xE7A324DC"
    },
    "82": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "EQ",
      "path": "29"
    },
    "83": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x6C8"
    },
    "86": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "87": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "88": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xF1127ED8"
    },
    "93": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "EQ",
      "path": "29"
    },
    "94": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x6D0"
    },
    "97": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "98": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "99": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xF2FDE38B"
    },
    "104": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "EQ",
      "path": "29"
    },
    "105": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x722"
    },
    "108": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "109": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1C4"
    },
    "112": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMP",
      "path": "29"
    },
    "113": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "114": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "115": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xB4B5EA57"
    },
    "120": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "EQ",
      "path": "29"
    },
    "121": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x625"
    },
    "124": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "125": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "126": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xC3CDA520"
    },
    "131": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "EQ",
      "path": "29"
    },
    "132": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x64B"
    },
    "135": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "136": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "137": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xD4EE1D90"
    },
    "142": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "EQ",
      "path": "29"
    },
    "143": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x692"
    },
    "146": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "147": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1C4"
    },
    "150": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMP",
      "path": "29"
    },
    "151": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "152": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "153": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x8F32D59B"
    },
    "158": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "GT",
      "path": "29"
    },
    "159": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "163": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "164": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x8F32D59B"
    },
    "169": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "EQ",
      "path": "29"
    },
    "170": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x5BD"
    },
    "173": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "174": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "175": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x95D89B41"
    },
    "180": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "EQ",
      "path": "29"
    },
    "181": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x5C5"
    },
    "184": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "185": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "186": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xA457C2D7"
    },
    "191": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "EQ",
      "path": "29"
    },
    "192": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x5CD"
    },
    "195": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "196": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "197": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xA9059CBB"
    },
    "202": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "EQ",
      "path": "29"
    },
    "203": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x5F9"
    },
    "206": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "207": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1C4"
    },
    "210": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMP",
      "path": "29"
    },
    "211": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "212": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "213": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x7ECEBE00"
    },
    "218": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "EQ",
      "path": "29"
    },
    "219": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x457"
    },
    "222": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "223": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "224": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x893C8BBA"
    },
    "229": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "EQ",
      "path": "29"
    },
    "230": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x47D"
    },
    "233": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "234": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "235": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x8DA5CB5B"
    },
    "240": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "EQ",
      "path": "29"
    },
    "241": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x5B5"
    },
    "244": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "245": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1C4"
    },
    "248": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMP",
      "path": "29"
    },
    "249": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "250": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "251": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x40C10F19"
    },
    "256": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "GT",
      "path": "29"
    },
    "257": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x166"
    },
    "260": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "261": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "262": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x6FCFFF45"
    },
    "267": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "GT",
      "path": "29"
    },
    "268": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x140"
    },
    "271": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "272": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "273": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x6FCFFF45"
    },
    "278": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "EQ",
      "path": "29"
    },
    "279": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x3BE"
    },
    "282": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "283": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "284": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x70A08231"
    },
    "289": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "EQ",
      "path": "29"
    },
    "290": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x3FD"
    },
    "293": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "294": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "295": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x782D6FE1"
    },
    "300": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "EQ",
      "path": "29"
    },
    "301": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x423"
    },
    "304": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "305": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "306": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x79BA5097"
    },
    "311": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "EQ",
      "path": "29"
    },
    "312": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x44F"
    },
    "315": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "316": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1C4"
    },
    "319": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMP",
      "path": "29"
    },
    "320": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "321": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "322": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x40C10F19"
    },
    "327": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "EQ",
      "path": "29"
    },
    "328": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x328"
    },
    "331": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "332": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "333": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x587CDE1E"
    },
    "338": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "EQ",
      "path": "29"
    },
    "339": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x356"
    },
    "342": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "343": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "344": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x5C19A95C"
    },
    "349": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "EQ",
      "path": "29"
    },
    "350": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x398"
    },
    "353": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "354": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1C4"
    },
    "357": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMP",
      "path": "29"
    },
    "358": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "359": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "360": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x20606B70"
    },
    "365": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "GT",
      "path": "29"
    },
    "366": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1A2"
    },
    "369": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "370": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "371": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x20606B70"
    },
    "376": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "EQ",
      "path": "29"
    },
    "377": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x2A0"
    },
    "380": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "381": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "382": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x23B872DD"
    },
    "387": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "EQ",
      "path": "29"
    },
    "388": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x2A8"
    },
    "391": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "392": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "393": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x313CE567"
    },
    "398": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "EQ",
      "path": "29"
    },
    "399": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x2DE"
    },
    "402": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "403": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "404": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x39509351"
    },
    "409": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "EQ",
      "path": "29"
    },
    "410": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x2FC"
    },
    "413": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "414": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1C4"
    },
    "417": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMP",
      "path": "29"
    },
    "418": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "419": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "420": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x6FDDE03"
    },
    "425": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "EQ",
      "path": "29"
    },
    "426": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1C9"
    },
    "429": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "430": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "431": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x95EA7B3"
    },
    "436": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "EQ",
      "path": "29"
    },
    "437": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x246"
    },
    "440": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "441": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "442": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x18160DDD"
    },
    "447": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "EQ",
      "path": "29"
    },
    "448": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x286"
    },
    "451": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "452": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "453": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "455": {
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "DUP1",
      "path": "29"
    },
    "456": {
      "first_revert": true,
      "fn": null,
      "offset": [
        152,
        9006
      ],
      "op": "REVERT",
      "path": "29"
    },
    "457": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "458": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1D1"
    },
    "461": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x748"
    },
    "464": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2447,
        2537
      ],
      "op": "JUMP",
      "path": "24"
    },
    "465": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "466": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "468": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP1",
      "path": "24"
    },
    "469": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "470": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "472": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP1",
      "path": "24"
    },
    "473": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP3",
      "path": "24"
    },
    "474": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "475": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP4",
      "path": "24"
    },
    "476": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "477": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP2",
      "path": "24"
    },
    "478": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP4",
      "path": "24"
    },
    "479": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "ADD",
      "path": "24"
    },
    "480": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "481": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP4",
      "path": "24"
    },
    "482": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "483": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "484": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "485": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP4",
      "path": "24"
    },
    "486": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "487": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "488": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP4",
      "path": "24"
    },
    "489": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "ADD",
      "path": "24"
    },
    "490": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "491": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP6",
      "path": "24"
    },
    "492": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "ADD",
      "path": "24"
    },
    "493": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "494": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP1",
      "path": "24"
    },
    "495": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP4",
      "path": "24"
    },
    "496": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP4",
      "path": "24"
    },
    "497": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "499": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "500": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP4",
      "path": "24"
    },
    "501": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP2",
      "path": "24"
    },
    "502": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "LT",
      "path": "24"
    },
    "503": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "504": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x20B"
    },
    "507": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "508": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP2",
      "path": "24"
    },
    "509": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP2",
      "path": "24"
    },
    "510": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "ADD",
      "path": "24"
    },
    "511": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "512": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP4",
      "path": "24"
    },
    "513": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP3",
      "path": "24"
    },
    "514": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "ADD",
      "path": "24"
    },
    "515": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "516": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "518": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "ADD",
      "path": "24"
    },
    "519": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1F3"
    },
    "522": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "JUMP",
      "path": "24"
    },
    "523": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "524": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "POP",
      "path": "24"
    },
    "525": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "POP",
      "path": "24"
    },
    "526": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "POP",
      "path": "24"
    },
    "527": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "POP",
      "path": "24"
    },
    "528": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "529": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "POP",
      "path": "24"
    },
    "530": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "531": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP2",
      "path": "24"
    },
    "532": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "ADD",
      "path": "24"
    },
    "533": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "534": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1F"
    },
    "536": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "AND",
      "path": "24"
    },
    "537": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP1",
      "path": "24"
    },
    "538": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "539": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x238"
    },
    "542": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "543": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP1",
      "path": "24"
    },
    "544": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP3",
      "path": "24"
    },
    "545": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SUB",
      "path": "24"
    },
    "546": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP1",
      "path": "24"
    },
    "547": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "548": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "550": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP4",
      "path": "24"
    },
    "551": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "553": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SUB",
      "path": "24"
    },
    "554": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x100"
    },
    "557": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "EXP",
      "path": "24"
    },
    "558": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SUB",
      "path": "24"
    },
    "559": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "NOT",
      "path": "24"
    },
    "560": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "AND",
      "path": "24"
    },
    "561": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP2",
      "path": "24"
    },
    "562": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "563": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "565": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "ADD",
      "path": "24"
    },
    "566": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "567": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "POP",
      "path": "24"
    },
    "568": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "569": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "POP",
      "path": "24"
    },
    "570": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "571": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "POP",
      "path": "24"
    },
    "572": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "POP",
      "path": "24"
    },
    "573": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "POP",
      "path": "24"
    },
    "574": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "576": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "577": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "DUP1",
      "path": "24"
    },
    "578": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "579": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SUB",
      "path": "24"
    },
    "580": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "581": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "RETURN",
      "path": "24"
    },
    "582": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "583": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x272"
    },
    "586": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "588": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "DUP1",
      "path": "24"
    },
    "589": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "590": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "SUB",
      "path": "24"
    },
    "591": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "593": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "DUP2",
      "path": "24"
    },
    "594": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "LT",
      "path": "24"
    },
    "595": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "596": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x25C"
    },
    "599": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "600": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "602": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "DUP1",
      "path": "24"
    },
    "603": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "REVERT",
      "path": "24"
    },
    "604": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "605": {
      "op": "POP"
    },
    "606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "610": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "612": {
      "op": "SHL"
    },
    "613": {
      "op": "SUB"
    },
    "614": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "DUP2",
      "path": "24"
    },
    "615": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "CALLDATALOAD",
      "path": "24"
    },
    "616": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "AND",
      "path": "24"
    },
    "617": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "618": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "620": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "ADD",
      "path": "24"
    },
    "621": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "CALLDATALOAD",
      "path": "24"
    },
    "622": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x7DE"
    },
    "625": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4510,
        4676
      ],
      "op": "JUMP",
      "path": "24"
    },
    "626": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "627": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "629": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "DUP1",
      "path": "24"
    },
    "630": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "631": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "632": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "633": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "634": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "DUP3",
      "path": "24"
    },
    "635": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "636": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "637": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "638": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "DUP2",
      "path": "24"
    },
    "639": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "640": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "SUB",
      "path": "24"
    },
    "641": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "643": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "ADD",
      "path": "24"
    },
    "644": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "645": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "RETURN",
      "path": "24"
    },
    "646": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "647": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x28E"
    },
    "650": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x7FC"
    },
    "653": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        3517,
        3615
      ],
      "op": "JUMP",
      "path": "24"
    },
    "654": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "655": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "657": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "DUP1",
      "path": "24"
    },
    "658": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "659": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "660": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "DUP3",
      "path": "24"
    },
    "661": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "662": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "663": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "664": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "DUP2",
      "path": "24"
    },
    "665": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "666": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "SUB",
      "path": "24"
    },
    "667": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "669": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "ADD",
      "path": "24"
    },
    "670": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "671": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "RETURN",
      "path": "24"
    },
    "672": {
      "offset": [
        1629,
        1751
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "673": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1629,
        1751
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x28E"
    },
    "676": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1629,
        1751
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x802"
    },
    "679": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        1629,
        1751
      ],
      "op": "JUMP",
      "path": "29"
    },
    "680": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "681": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x272"
    },
    "684": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "686": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "DUP1",
      "path": "24"
    },
    "687": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "688": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "SUB",
      "path": "24"
    },
    "689": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x60"
    },
    "691": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "DUP2",
      "path": "24"
    },
    "692": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "LT",
      "path": "24"
    },
    "693": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "694": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2BE"
    },
    "697": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "698": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "700": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "DUP1",
      "path": "24"
    },
    "701": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "REVERT",
      "path": "24"
    },
    "702": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "703": {
      "op": "POP"
    },
    "704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "708": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "710": {
      "op": "SHL"
    },
    "711": {
      "op": "SUB"
    },
    "712": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "DUP2",
      "path": "24"
    },
    "713": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "CALLDATALOAD",
      "path": "24"
    },
    "714": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "DUP2",
      "path": "24"
    },
    "715": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "AND",
      "path": "24"
    },
    "716": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "717": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "719": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "DUP2",
      "path": "24"
    },
    "720": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "ADD",
      "path": "24"
    },
    "721": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "CALLDATALOAD",
      "path": "24"
    },
    "722": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "723": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "724": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "AND",
      "path": "24"
    },
    "725": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "726": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "728": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "ADD",
      "path": "24"
    },
    "729": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "CALLDATALOAD",
      "path": "24"
    },
    "730": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x826"
    },
    "733": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5136,
        5453
      ],
      "op": "JUMP",
      "path": "24"
    },
    "734": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "735": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2E6"
    },
    "738": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x8AD"
    },
    "741": {
      "fn": "ERC20.decimals",
      "jump": "i",
      "offset": [
        3367,
        3457
      ],
      "op": "JUMP",
      "path": "24"
    },
    "742": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "743": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "745": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "DUP1",
      "path": "24"
    },
    "746": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "747": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xFF"
    },
    "749": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "750": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "751": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "AND",
      "path": "24"
    },
    "752": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "DUP3",
      "path": "24"
    },
    "753": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "754": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "755": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "756": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "DUP2",
      "path": "24"
    },
    "757": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "758": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "SUB",
      "path": "24"
    },
    "759": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "761": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "ADD",
      "path": "24"
    },
    "762": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "763": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "RETURN",
      "path": "24"
    },
    "764": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "765": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x272"
    },
    "768": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "770": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "DUP1",
      "path": "24"
    },
    "771": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "772": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "SUB",
      "path": "24"
    },
    "773": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "775": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "DUP2",
      "path": "24"
    },
    "776": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "LT",
      "path": "24"
    },
    "777": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "778": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x312"
    },
    "781": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "782": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "784": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "DUP1",
      "path": "24"
    },
    "785": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "REVERT",
      "path": "24"
    },
    "786": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "787": {
      "op": "POP"
    },
    "788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "792": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "794": {
      "op": "SHL"
    },
    "795": {
      "op": "SUB"
    },
    "796": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "DUP2",
      "path": "24"
    },
    "797": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "CALLDATALOAD",
      "path": "24"
    },
    "798": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "AND",
      "path": "24"
    },
    "799": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "800": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "802": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "ADD",
      "path": "24"
    },
    "803": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "CALLDATALOAD",
      "path": "24"
    },
    "804": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x8B6"
    },
    "807": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5848,
        6063
      ],
      "op": "JUMP",
      "path": "24"
    },
    "808": {
      "fn": "SushiToken.mint",
      "offset": [
        476,
        635
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "809": {
      "fn": "SushiToken.mint",
      "offset": [
        476,
        635
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x354"
    },
    "812": {
      "fn": "SushiToken.mint",
      "offset": [
        476,
        635
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "814": {
      "fn": "SushiToken.mint",
      "offset": [
        476,
        635
      ],
      "op": "DUP1",
      "path": "29"
    },
    "815": {
      "fn": "SushiToken.mint",
      "offset": [
        476,
        635
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "816": {
      "fn": "SushiToken.mint",
      "offset": [
        476,
        635
      ],
      "op": "SUB",
      "path": "29"
    },
    "817": {
      "fn": "SushiToken.mint",
      "offset": [
        476,
        635
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "819": {
      "fn": "SushiToken.mint",
      "offset": [
        476,
        635
      ],
      "op": "DUP2",
      "path": "29"
    },
    "820": {
      "fn": "SushiToken.mint",
      "offset": [
        476,
        635
      ],
      "op": "LT",
      "path": "29"
    },
    "821": {
      "fn": "SushiToken.mint",
      "offset": [
        476,
        635
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "822": {
      "fn": "SushiToken.mint",
      "offset": [
        476,
        635
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x33E"
    },
    "825": {
      "fn": "SushiToken.mint",
      "offset": [
        476,
        635
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "826": {
      "fn": "SushiToken.mint",
      "offset": [
        476,
        635
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "828": {
      "fn": "SushiToken.mint",
      "offset": [
        476,
        635
      ],
      "op": "DUP1",
      "path": "29"
    },
    "829": {
      "fn": "SushiToken.mint",
      "offset": [
        476,
        635
      ],
      "op": "REVERT",
      "path": "29"
    },
    "830": {
      "fn": "SushiToken.mint",
      "offset": [
        476,
        635
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "831": {
      "op": "POP"
    },
    "832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "836": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "838": {
      "op": "SHL"
    },
    "839": {
      "op": "SUB"
    },
    "840": {
      "fn": "SushiToken.mint",
      "offset": [
        476,
        635
      ],
      "op": "DUP2",
      "path": "29"
    },
    "841": {
      "fn": "SushiToken.mint",
      "offset": [
        476,
        635
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "842": {
      "fn": "SushiToken.mint",
      "offset": [
        476,
        635
      ],
      "op": "AND",
      "path": "29"
    },
    "843": {
      "fn": "SushiToken.mint",
      "offset": [
        476,
        635
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "844": {
      "fn": "SushiToken.mint",
      "offset": [
        476,
        635
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "846": {
      "fn": "SushiToken.mint",
      "offset": [
        476,
        635
      ],
      "op": "ADD",
      "path": "29"
    },
    "847": {
      "fn": "SushiToken.mint",
      "offset": [
        476,
        635
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "848": {
      "fn": "SushiToken.mint",
      "offset": [
        476,
        635
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x904"
    },
    "851": {
      "fn": "SushiToken.mint",
      "jump": "i",
      "offset": [
        476,
        635
      ],
      "op": "JUMP",
      "path": "29"
    },
    "852": {
      "fn": "SushiToken.mint",
      "offset": [
        476,
        635
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "853": {
      "fn": "SushiToken.mint",
      "offset": [
        476,
        635
      ],
      "op": "STOP",
      "path": "29"
    },
    "854": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "855": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x37C"
    },
    "858": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "860": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "DUP1",
      "path": "29"
    },
    "861": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "862": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "SUB",
      "path": "29"
    },
    "863": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "865": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "DUP2",
      "path": "29"
    },
    "866": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "LT",
      "path": "29"
    },
    "867": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "868": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x36C"
    },
    "871": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "872": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "874": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "DUP1",
      "path": "29"
    },
    "875": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "REVERT",
      "path": "29"
    },
    "876": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "877": {
      "op": "POP"
    },
    "878": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "883": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "885": {
      "op": "SHL"
    },
    "886": {
      "op": "SUB"
    },
    "887": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "AND",
      "path": "29"
    },
    "888": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x948"
    },
    "891": {
      "fn": "SushiToken.delegates",
      "jump": "i",
      "offset": [
        2594,
        2737
      ],
      "op": "JUMP",
      "path": "29"
    },
    "892": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "893": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "895": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "DUP1",
      "path": "29"
    },
    "896": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "901": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "903": {
      "op": "SHL"
    },
    "904": {
      "op": "SUB"
    },
    "905": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "906": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "907": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "AND",
      "path": "29"
    },
    "908": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "DUP3",
      "path": "29"
    },
    "909": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "910": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "911": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "912": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "DUP2",
      "path": "29"
    },
    "913": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "914": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "SUB",
      "path": "29"
    },
    "915": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "917": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "ADD",
      "path": "29"
    },
    "918": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "919": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "RETURN",
      "path": "29"
    },
    "920": {
      "fn": "SushiToken.delegate",
      "offset": [
        2875,
        2977
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "921": {
      "fn": "SushiToken.delegate",
      "offset": [
        2875,
        2977
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x354"
    },
    "924": {
      "fn": "SushiToken.delegate",
      "offset": [
        2875,
        2977
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "926": {
      "fn": "SushiToken.delegate",
      "offset": [
        2875,
        2977
      ],
      "op": "DUP1",
      "path": "29"
    },
    "927": {
      "fn": "SushiToken.delegate",
      "offset": [
        2875,
        2977
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "928": {
      "fn": "SushiToken.delegate",
      "offset": [
        2875,
        2977
      ],
      "op": "SUB",
      "path": "29"
    },
    "929": {
      "fn": "SushiToken.delegate",
      "offset": [
        2875,
        2977
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "931": {
      "fn": "SushiToken.delegate",
      "offset": [
        2875,
        2977
      ],
      "op": "DUP2",
      "path": "29"
    },
    "932": {
      "fn": "SushiToken.delegate",
      "offset": [
        2875,
        2977
      ],
      "op": "LT",
      "path": "29"
    },
    "933": {
      "fn": "SushiToken.delegate",
      "offset": [
        2875,
        2977
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "934": {
      "fn": "SushiToken.delegate",
      "offset": [
        2875,
        2977
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x3AE"
    },
    "937": {
      "fn": "SushiToken.delegate",
      "offset": [
        2875,
        2977
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "938": {
      "fn": "SushiToken.delegate",
      "offset": [
        2875,
        2977
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "940": {
      "fn": "SushiToken.delegate",
      "offset": [
        2875,
        2977
      ],
      "op": "DUP1",
      "path": "29"
    },
    "941": {
      "fn": "SushiToken.delegate",
      "offset": [
        2875,
        2977
      ],
      "op": "REVERT",
      "path": "29"
    },
    "942": {
      "fn": "SushiToken.delegate",
      "offset": [
        2875,
        2977
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "943": {
      "op": "POP"
    },
    "944": {
      "fn": "SushiToken.delegate",
      "offset": [
        2875,
        2977
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "949": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "951": {
      "op": "SHL"
    },
    "952": {
      "op": "SUB"
    },
    "953": {
      "fn": "SushiToken.delegate",
      "offset": [
        2875,
        2977
      ],
      "op": "AND",
      "path": "29"
    },
    "954": {
      "fn": "SushiToken.delegate",
      "offset": [
        2875,
        2977
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x966"
    },
    "957": {
      "fn": "SushiToken.delegate",
      "jump": "i",
      "offset": [
        2875,
        2977
      ],
      "op": "JUMP",
      "path": "29"
    },
    "958": {
      "offset": [
        1510,
        1559
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "959": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x3E4"
    },
    "962": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "964": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "DUP1",
      "path": "29"
    },
    "965": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "966": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "SUB",
      "path": "29"
    },
    "967": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "969": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "DUP2",
      "path": "29"
    },
    "970": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "LT",
      "path": "29"
    },
    "971": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "972": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x3D4"
    },
    "975": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "976": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "978": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "DUP1",
      "path": "29"
    },
    "979": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "REVERT",
      "path": "29"
    },
    "980": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "981": {
      "op": "POP"
    },
    "982": {
      "offset": [
        1510,
        1559
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "987": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "989": {
      "op": "SHL"
    },
    "990": {
      "op": "SUB"
    },
    "991": {
      "offset": [
        1510,
        1559
      ],
      "op": "AND",
      "path": "29"
    },
    "992": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x973"
    },
    "995": {
      "fn": "SushiToken.delegate",
      "jump": "i",
      "offset": [
        1510,
        1559
      ],
      "op": "JUMP",
      "path": "29"
    },
    "996": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "997": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "999": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1000": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1001": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "1006": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1007": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1008": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "AND",
      "path": "29"
    },
    "1009": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1010": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1011": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1012": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1013": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1014": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1015": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "SUB",
      "path": "29"
    },
    "1016": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1018": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "ADD",
      "path": "29"
    },
    "1019": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1020": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "RETURN",
      "path": "29"
    },
    "1021": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1022": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x28E"
    },
    "1025": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1027": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1028": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1029": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "SUB",
      "path": "24"
    },
    "1030": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1032": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1033": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "LT",
      "path": "24"
    },
    "1034": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1035": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x413"
    },
    "1038": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1039": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1041": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1042": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "REVERT",
      "path": "24"
    },
    "1043": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1044": {
      "op": "POP"
    },
    "1045": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "CALLDATALOAD",
      "path": "24"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1050": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1052": {
      "op": "SHL"
    },
    "1053": {
      "op": "SUB"
    },
    "1054": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "AND",
      "path": "24"
    },
    "1055": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x98B"
    },
    "1058": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3673,
        3790
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1059": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5404,
        6622
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1060": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5404,
        6622
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x28E"
    },
    "1063": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5404,
        6622
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "1065": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5404,
        6622
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1066": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5404,
        6622
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "1067": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5404,
        6622
      ],
      "op": "SUB",
      "path": "29"
    },
    "1068": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5404,
        6622
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1070": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5404,
        6622
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1071": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5404,
        6622
      ],
      "op": "LT",
      "path": "29"
    },
    "1072": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5404,
        6622
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1073": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5404,
        6622
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x439"
    },
    "1076": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5404,
        6622
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1077": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5404,
        6622
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1079": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5404,
        6622
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1080": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5404,
        6622
      ],
      "op": "REVERT",
      "path": "29"
    },
    "1081": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5404,
        6622
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1082": {
      "op": "POP"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1089": {
      "op": "SHL"
    },
    "1090": {
      "op": "SUB"
    },
    "1091": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5404,
        6622
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1092": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5404,
        6622
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "1093": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5404,
        6622
      ],
      "op": "AND",
      "path": "29"
    },
    "1094": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5404,
        6622
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1095": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5404,
        6622
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1097": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5404,
        6622
      ],
      "op": "ADD",
      "path": "29"
    },
    "1098": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5404,
        6622
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "1099": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5404,
        6622
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x9A6"
    },
    "1102": {
      "fn": "SushiToken.getPriorVotes",
      "jump": "i",
      "offset": [
        5404,
        6622
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1103": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        866,
        1077
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1104": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        866,
        1077
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x354"
    },
    "1107": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        866,
        1077
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xBAE"
    },
    "1110": {
      "fn": "Owned.acceptOwnership",
      "jump": "i",
      "offset": [
        866,
        1077
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1111": {
      "offset": [
        2037,
        2076
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1112": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2037,
        2076
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x28E"
    },
    "1115": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2037,
        2076
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "1117": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2037,
        2076
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1118": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2037,
        2076
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "1119": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2037,
        2076
      ],
      "op": "SUB",
      "path": "29"
    },
    "1120": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2037,
        2076
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1122": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2037,
        2076
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1123": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2037,
        2076
      ],
      "op": "LT",
      "path": "29"
    },
    "1124": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2037,
        2076
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1125": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2037,
        2076
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x46D"
    },
    "1128": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2037,
        2076
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1129": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2037,
        2076
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1131": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2037,
        2076
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1132": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2037,
        2076
      ],
      "op": "REVERT",
      "path": "29"
    },
    "1133": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2037,
        2076
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1134": {
      "op": "POP"
    },
    "1135": {
      "offset": [
        2037,
        2076
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "1136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1142": {
      "op": "SHL"
    },
    "1143": {
      "op": "SUB"
    },
    "1144": {
      "offset": [
        2037,
        2076
      ],
      "op": "AND",
      "path": "29"
    },
    "1145": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2037,
        2076
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xC29"
    },
    "1148": {
      "fn": "Owned.acceptOwnership",
      "jump": "i",
      "offset": [
        2037,
        2076
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1149": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1150": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x354"
    },
    "1153": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "1155": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1156": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "1157": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SUB",
      "path": "29"
    },
    "1158": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "1160": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1161": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "LT",
      "path": "29"
    },
    "1162": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1163": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x493"
    },
    "1166": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1167": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1169": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1170": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "REVERT",
      "path": "29"
    },
    "1171": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1172": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1173": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "ADD",
      "path": "29"
    },
    "1174": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1175": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1177": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1178": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "ADD",
      "path": "29"
    },
    "1179": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1180": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "1181": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH5",
      "path": "29",
      "value": "0x100000000"
    },
    "1187": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1188": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "GT",
      "path": "29"
    },
    "1189": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1190": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x4AE"
    },
    "1193": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1194": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1196": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1197": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "REVERT",
      "path": "29"
    },
    "1198": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1199": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1200": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "ADD",
      "path": "29"
    },
    "1201": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1202": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1204": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1205": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "ADD",
      "path": "29"
    },
    "1206": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "GT",
      "path": "29"
    },
    "1207": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1208": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x4C0"
    },
    "1211": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1212": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1214": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1215": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "REVERT",
      "path": "29"
    },
    "1216": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1217": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1218": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "1219": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1220": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1222": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "ADD",
      "path": "29"
    },
    "1223": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1224": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP5",
      "path": "29"
    },
    "1225": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "1227": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1228": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "MUL",
      "path": "29"
    },
    "1229": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP5",
      "path": "29"
    },
    "1230": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "ADD",
      "path": "29"
    },
    "1231": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "GT",
      "path": "29"
    },
    "1232": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH5",
      "path": "29",
      "value": "0x100000000"
    },
    "1238": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1239": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "GT",
      "path": "29"
    },
    "1240": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "OR",
      "path": "29"
    },
    "1241": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1242": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x4E2"
    },
    "1245": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1246": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1248": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1249": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "REVERT",
      "path": "29"
    },
    "1250": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1251": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1252": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1253": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1254": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1255": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "1257": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "ADD",
      "path": "29"
    },
    "1258": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1260": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1261": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1262": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DIV",
      "path": "29"
    },
    "1263": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "MUL",
      "path": "29"
    },
    "1264": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1266": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "ADD",
      "path": "29"
    },
    "1267": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1269": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1270": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1271": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1272": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "ADD",
      "path": "29"
    },
    "1273": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1275": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1276": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1277": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "1278": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1279": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1280": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1281": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1282": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1283": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1284": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1286": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "ADD",
      "path": "29"
    },
    "1287": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1288": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1289": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1290": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1291": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP5",
      "path": "29"
    },
    "1292": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "CALLDATACOPY",
      "path": "29"
    },
    "1293": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1295": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1296": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "ADD",
      "path": "29"
    },
    "1297": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1298": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1299": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1300": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1301": {
      "op": "POP"
    },
    "1302": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1303": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP6",
      "path": "29"
    },
    "1304": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP5",
      "path": "29"
    },
    "1305": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "1306": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1308": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1309": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "ADD",
      "path": "29"
    },
    "1310": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "1311": {
      "op": "POP"
    },
    "1312": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "1313": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1314": {
      "op": "POP"
    },
    "1315": {
      "op": "POP"
    },
    "1316": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH5",
      "path": "29",
      "value": "0x100000000"
    },
    "1322": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1323": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "GT",
      "path": "29"
    },
    "1324": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1325": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x535"
    },
    "1328": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1329": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1331": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1332": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "REVERT",
      "path": "29"
    },
    "1333": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1334": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1335": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "ADD",
      "path": "29"
    },
    "1336": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1337": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1339": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1340": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "ADD",
      "path": "29"
    },
    "1341": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "GT",
      "path": "29"
    },
    "1342": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1343": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x547"
    },
    "1346": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1347": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1349": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1350": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "REVERT",
      "path": "29"
    },
    "1351": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1352": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1353": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "1354": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1355": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1357": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "ADD",
      "path": "29"
    },
    "1358": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1359": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP5",
      "path": "29"
    },
    "1360": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "1362": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1363": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "MUL",
      "path": "29"
    },
    "1364": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP5",
      "path": "29"
    },
    "1365": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "ADD",
      "path": "29"
    },
    "1366": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "GT",
      "path": "29"
    },
    "1367": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH5",
      "path": "29",
      "value": "0x100000000"
    },
    "1373": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1374": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "GT",
      "path": "29"
    },
    "1375": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "OR",
      "path": "29"
    },
    "1376": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1377": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x569"
    },
    "1380": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1381": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1383": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1384": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "REVERT",
      "path": "29"
    },
    "1385": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1386": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1387": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1388": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1389": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1390": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "1392": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "ADD",
      "path": "29"
    },
    "1393": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1395": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1396": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1397": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DIV",
      "path": "29"
    },
    "1398": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "MUL",
      "path": "29"
    },
    "1399": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1401": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "ADD",
      "path": "29"
    },
    "1402": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1404": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1405": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1406": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1407": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "ADD",
      "path": "29"
    },
    "1408": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1410": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1411": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1412": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "1413": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1414": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1415": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1416": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1417": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1418": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1419": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1421": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "ADD",
      "path": "29"
    },
    "1422": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1423": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1424": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1425": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1426": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "DUP5",
      "path": "29"
    },
    "1427": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "CALLDATACOPY",
      "path": "29"
    },
    "1428": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1430": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1431": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "ADD",
      "path": "29"
    },
    "1432": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1433": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1434": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1435": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1436": {
      "op": "POP"
    },
    "1437": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1438": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP6",
      "path": "29"
    },
    "1439": {
      "op": "POP"
    },
    "1440": {
      "op": "POP"
    },
    "1441": {
      "op": "POP"
    },
    "1442": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1443": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1450": {
      "op": "SHL"
    },
    "1451": {
      "op": "SUB"
    },
    "1452": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "AND",
      "path": "29"
    },
    "1453": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1454": {
      "op": "POP"
    },
    "1455": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xC3B"
    },
    "1458": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1459": {
      "op": "POP"
    },
    "1460": {
      "fn": "SushiToken.initToken",
      "jump": "i",
      "offset": [
        207,
        373
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1461": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1462": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x37C"
    },
    "1465": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xC53"
    },
    "1468": {
      "fn": "Owned.owner",
      "jump": "i",
      "offset": [
        564,
        641
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1469": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1470": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x272"
    },
    "1473": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xC62"
    },
    "1476": {
      "fn": "Owned.isOwner",
      "jump": "i",
      "offset": [
        646,
        736
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1477": {
      "fn": "ERC20.symbol",
      "offset": [
        2650,
        2744
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1478": {
      "fn": "ERC20.symbol",
      "offset": [
        2650,
        2744
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1D1"
    },
    "1481": {
      "fn": "ERC20.symbol",
      "offset": [
        2650,
        2744
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xC73"
    },
    "1484": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2650,
        2744
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1485": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1486": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x272"
    },
    "1489": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1491": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1492": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1493": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "SUB",
      "path": "24"
    },
    "1494": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1496": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1497": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "LT",
      "path": "24"
    },
    "1498": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1499": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5E3"
    },
    "1502": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1503": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1505": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1506": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "REVERT",
      "path": "24"
    },
    "1507": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1508": {
      "op": "POP"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1515": {
      "op": "SHL"
    },
    "1516": {
      "op": "SUB"
    },
    "1517": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1518": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "CALLDATALOAD",
      "path": "24"
    },
    "1519": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "AND",
      "path": "24"
    },
    "1520": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1521": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1523": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "ADD",
      "path": "24"
    },
    "1524": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "CALLDATALOAD",
      "path": "24"
    },
    "1525": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xCD4"
    },
    "1528": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6550,
        6816
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1529": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1530": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x272"
    },
    "1533": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1535": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1536": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1537": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "SUB",
      "path": "24"
    },
    "1538": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1540": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1541": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "LT",
      "path": "24"
    },
    "1542": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1543": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x60F"
    },
    "1546": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1547": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1549": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1550": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "REVERT",
      "path": "24"
    },
    "1551": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1552": {
      "op": "POP"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1559": {
      "op": "SHL"
    },
    "1560": {
      "op": "SUB"
    },
    "1561": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1562": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "CALLDATALOAD",
      "path": "24"
    },
    "1563": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "AND",
      "path": "24"
    },
    "1564": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1565": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1567": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "ADD",
      "path": "24"
    },
    "1568": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "CALLDATALOAD",
      "path": "24"
    },
    "1569": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xD3C"
    },
    "1572": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3993,
        4165
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1573": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4734,
        4982
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1574": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4734,
        4982
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x28E"
    },
    "1577": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4734,
        4982
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "1579": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4734,
        4982
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1580": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4734,
        4982
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "1581": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4734,
        4982
      ],
      "op": "SUB",
      "path": "29"
    },
    "1582": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4734,
        4982
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1584": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4734,
        4982
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1585": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4734,
        4982
      ],
      "op": "LT",
      "path": "29"
    },
    "1586": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4734,
        4982
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1587": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4734,
        4982
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x63B"
    },
    "1590": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4734,
        4982
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1591": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4734,
        4982
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1593": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4734,
        4982
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1594": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4734,
        4982
      ],
      "op": "REVERT",
      "path": "29"
    },
    "1595": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4734,
        4982
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1596": {
      "op": "POP"
    },
    "1597": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4734,
        4982
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1602": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1604": {
      "op": "SHL"
    },
    "1605": {
      "op": "SUB"
    },
    "1606": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4734,
        4982
      ],
      "op": "AND",
      "path": "29"
    },
    "1607": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4734,
        4982
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xD50"
    },
    "1610": {
      "fn": "SushiToken.getCurrentVotes",
      "jump": "i",
      "offset": [
        4734,
        4982
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1611": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1612": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x354"
    },
    "1615": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "1617": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1618": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "1619": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "SUB",
      "path": "29"
    },
    "1620": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xC0"
    },
    "1622": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1623": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "LT",
      "path": "29"
    },
    "1624": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1625": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x661"
    },
    "1628": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1629": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1631": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1632": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "REVERT",
      "path": "29"
    },
    "1633": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1634": {
      "op": "POP"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1641": {
      "op": "SHL"
    },
    "1642": {
      "op": "SUB"
    },
    "1643": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1644": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "1645": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "AND",
      "path": "29"
    },
    "1646": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1647": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1649": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1650": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "ADD",
      "path": "29"
    },
    "1651": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "1652": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1653": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1655": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1656": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "ADD",
      "path": "29"
    },
    "1657": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "1658": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1659": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xFF"
    },
    "1661": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "1663": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1664": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "ADD",
      "path": "29"
    },
    "1665": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "1666": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "AND",
      "path": "29"
    },
    "1667": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1668": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x80"
    },
    "1670": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1671": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "ADD",
      "path": "29"
    },
    "1672": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "1673": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1674": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xA0"
    },
    "1676": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "ADD",
      "path": "29"
    },
    "1677": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "1678": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xDB4"
    },
    "1681": {
      "fn": "SushiToken.delegateBySig",
      "jump": "i",
      "offset": [
        3400,
        4540
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1682": {
      "offset": [
        156,
        179
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1683": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        156,
        179
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x37C"
    },
    "1686": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        156,
        179
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1027"
    },
    "1689": {
      "fn": "SushiToken.delegateBySig",
      "jump": "i",
      "offset": [
        156,
        179
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1690": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1691": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x28E"
    },
    "1694": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1696": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1697": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1698": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "SUB",
      "path": "24"
    },
    "1699": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1701": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1702": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "LT",
      "path": "24"
    },
    "1703": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1704": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x6B0"
    },
    "1707": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1708": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1710": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1711": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "REVERT",
      "path": "24"
    },
    "1712": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1713": {
      "op": "POP"
    },
    "1714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1718": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1720": {
      "op": "SHL"
    },
    "1721": {
      "op": "SUB"
    },
    "1722": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1723": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "CALLDATALOAD",
      "path": "24"
    },
    "1724": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1725": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "AND",
      "path": "24"
    },
    "1726": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1727": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1729": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "ADD",
      "path": "24"
    },
    "1730": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "CALLDATALOAD",
      "path": "24"
    },
    "1731": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "AND",
      "path": "24"
    },
    "1732": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1036"
    },
    "1735": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        4223,
        4372
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1736": {
      "offset": [
        1842,
        1959
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1737": {
      "fn": "ERC20.allowance",
      "offset": [
        1842,
        1959
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x28E"
    },
    "1740": {
      "fn": "ERC20.allowance",
      "offset": [
        1842,
        1959
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1061"
    },
    "1743": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        1842,
        1959
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1744": {
      "offset": [
        1374,
        1444
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1745": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x702"
    },
    "1748": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "1750": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1751": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "1752": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "SUB",
      "path": "29"
    },
    "1753": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1755": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1756": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "LT",
      "path": "29"
    },
    "1757": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1758": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x6E6"
    },
    "1761": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1762": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1764": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1765": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "REVERT",
      "path": "29"
    },
    "1766": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1767": {
      "op": "POP"
    },
    "1768": {
      "offset": [
        1374,
        1444
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1769": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "1770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1774": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1776": {
      "op": "SHL"
    },
    "1777": {
      "op": "SUB"
    },
    "1778": {
      "offset": [
        1374,
        1444
      ],
      "op": "AND",
      "path": "29"
    },
    "1779": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1780": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1782": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "ADD",
      "path": "29"
    },
    "1783": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "1784": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "1789": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "AND",
      "path": "29"
    },
    "1790": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1085"
    },
    "1793": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        1374,
        1444
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1794": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1795": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1797": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1798": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1799": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "1804": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1805": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "1806": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "AND",
      "path": "29"
    },
    "1807": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1808": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1809": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1811": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1812": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "ADD",
      "path": "29"
    },
    "1813": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1814": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1815": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1816": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1817": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1818": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1819": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1820": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1821": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1822": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "SUB",
      "path": "29"
    },
    "1823": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "ADD",
      "path": "29"
    },
    "1824": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1825": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "RETURN",
      "path": "29"
    },
    "1826": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1827": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x354"
    },
    "1830": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "1832": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1833": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "1834": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "SUB",
      "path": "50"
    },
    "1835": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x20"
    },
    "1837": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "DUP2",
      "path": "50"
    },
    "1838": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "LT",
      "path": "50"
    },
    "1839": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "1840": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x738"
    },
    "1843": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "1844": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "1846": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "DUP1",
      "path": "50"
    },
    "1847": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "REVERT",
      "path": "50"
    },
    "1848": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "1849": {
      "op": "POP"
    },
    "1850": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "CALLDATALOAD",
      "path": "50"
    },
    "1851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1855": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1857": {
      "op": "SHL"
    },
    "1858": {
      "op": "SUB"
    },
    "1859": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "AND",
      "path": "50"
    },
    "1860": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x10B2"
    },
    "1863": {
      "fn": "Owned.transferOwnership",
      "jump": "i",
      "offset": [
        742,
        860
      ],
      "op": "JUMP",
      "path": "50"
    },
    "1864": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1865": {
      "fn": "ERC20.name",
      "offset": [
        2525,
        2530
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 0,
      "value": "0x5"
    },
    "1867": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1868": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1869": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1871": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1872": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1873": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1875": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1F"
    },
    "1877": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1881": {
      "op": "NOT"
    },
    "1882": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x100"
    },
    "1885": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "1887": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP9",
      "path": "24"
    },
    "1888": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "AND",
      "path": "24"
    },
    "1889": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1890": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "MUL",
      "path": "24"
    },
    "1891": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ADD",
      "path": "24"
    },
    "1892": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1893": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP6",
      "path": "24"
    },
    "1894": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "AND",
      "path": "24"
    },
    "1895": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "1896": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1897": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "1898": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DIV",
      "path": "24"
    },
    "1899": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "1900": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP5",
      "path": "24"
    },
    "1901": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ADD",
      "path": "24"
    },
    "1902": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1903": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1904": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DIV",
      "path": "24"
    },
    "1905": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1906": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "MUL",
      "path": "24"
    },
    "1907": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1908": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ADD",
      "path": "24"
    },
    "1909": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1910": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ADD",
      "path": "24"
    },
    "1911": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1912": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "1913": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1914": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1915": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1916": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1917": {
      "fn": "ERC20.name",
      "offset": [
        2493,
        2506
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x60"
    },
    "1919": {
      "fn": "ERC20.name",
      "offset": [
        2493,
        2506
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "1920": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1921": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "1922": {
      "fn": "ERC20.name",
      "offset": [
        2525,
        2530
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1923": {
      "fn": "ERC20.name",
      "offset": [
        2525,
        2530
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1924": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1925": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ADD",
      "path": "24"
    },
    "1926": {
      "fn": "ERC20.name",
      "offset": [
        2525,
        2530
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1927": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1928": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1929": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1930": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x7D4"
    },
    "1933": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1934": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1935": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1F"
    },
    "1937": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "LT",
      "path": "24"
    },
    "1938": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x7A9"
    },
    "1941": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1942": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x100"
    },
    "1945": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1946": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1947": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1948": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DIV",
      "path": "24"
    },
    "1949": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "MUL",
      "path": "24"
    },
    "1950": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1951": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1952": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1953": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1955": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ADD",
      "path": "24"
    },
    "1956": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1957": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x7D4"
    },
    "1960": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1961": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1962": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1963": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ADD",
      "path": "24"
    },
    "1964": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1965": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1966": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1968": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1969": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1971": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1973": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "1974": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1975": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1976": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1977": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1978": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1979": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1980": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1981": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "1983": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ADD",
      "path": "24"
    },
    "1984": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1985": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1987": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ADD",
      "path": "24"
    },
    "1988": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1989": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1990": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "GT",
      "path": "24"
    },
    "1991": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x7B7"
    },
    "1994": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1995": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1996": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1997": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SUB",
      "path": "24"
    },
    "1998": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1F"
    },
    "2000": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "AND",
      "path": "24"
    },
    "2001": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2002": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "ADD",
      "path": "24"
    },
    "2003": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2004": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2005": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "POP",
      "path": "24"
    },
    "2006": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "POP",
      "path": "24"
    },
    "2007": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "POP",
      "path": "24"
    },
    "2008": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "POP",
      "path": "24"
    },
    "2009": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "POP",
      "path": "24"
    },
    "2010": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2011": {
      "fn": "ERC20.name",
      "offset": [
        2518,
        2530
      ],
      "op": "POP",
      "path": "24"
    },
    "2012": {
      "fn": "ERC20.name",
      "offset": [
        2447,
        2537
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2013": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2447,
        2537
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2014": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2015": {
      "fn": "ERC20.approve",
      "offset": [
        4593,
        4597
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2017": {
      "fn": "ERC20.approve",
      "offset": [
        4609,
        4648
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 1,
      "value": "0x7F2"
    },
    "2020": {
      "fn": "ERC20.approve",
      "offset": [
        4618,
        4630
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x7EB"
    },
    "2023": {
      "fn": "ERC20.approve",
      "offset": [
        4618,
        4628
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x10E5"
    },
    "2026": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4618,
        4630
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2027": {
      "fn": "ERC20.approve",
      "offset": [
        4618,
        4630
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2028": {
      "fn": "ERC20.approve",
      "offset": [
        4632,
        4639
      ],
      "op": "DUP5",
      "path": "24"
    },
    "2029": {
      "fn": "ERC20.approve",
      "offset": [
        4641,
        4647
      ],
      "op": "DUP5",
      "path": "24"
    },
    "2030": {
      "fn": "ERC20.approve",
      "offset": [
        4609,
        4617
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x10E9"
    },
    "2033": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4609,
        4648
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2034": {
      "fn": "ERC20.approve",
      "offset": [
        4609,
        4648
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2035": {
      "op": "POP"
    },
    "2036": {
      "fn": "ERC20.approve",
      "offset": [
        4665,
        4669
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 2,
      "value": "0x1"
    },
    "2038": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2039": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "2040": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2041": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "POP",
      "path": "24"
    },
    "2042": {
      "fn": "ERC20.approve",
      "offset": [
        4510,
        4676
      ],
      "op": "POP",
      "path": "24"
    },
    "2043": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4510,
        4676
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2044": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2045": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3596,
        3608
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 3,
      "value": "0x4"
    },
    "2047": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3596,
        3608
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2048": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3517,
        3615
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2049": {
      "fn": "ERC20.totalSupply",
      "jump": "o",
      "offset": [
        3517,
        3615
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2050": {
      "offset": [
        1629,
        1751
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2051": {
      "offset": [
        1671,
        1751
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
    },
    "2084": {
      "offset": [
        1629,
        1751
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2085": {
      "fn": "ERC20.totalSupply",
      "jump": "o",
      "offset": [
        1629,
        1751
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2086": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2087": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5242,
        5246
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2089": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5258,
        5294
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 4,
      "value": "0x833"
    },
    "2092": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5268,
        5274
      ],
      "op": "DUP5",
      "path": "24"
    },
    "2093": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5276,
        5285
      ],
      "op": "DUP5",
      "path": "24"
    },
    "2094": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5287,
        5293
      ],
      "op": "DUP5",
      "path": "24"
    },
    "2095": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5258,
        5267
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x11D5"
    },
    "2098": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5258,
        5294
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2099": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5258,
        5294
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2100": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5304,
        5425
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 5,
      "value": "0x8A3"
    },
    "2103": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5313,
        5319
      ],
      "op": "DUP5",
      "path": "24"
    },
    "2104": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5321,
        5333
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x83F"
    },
    "2107": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5321,
        5331
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x10E5"
    },
    "2110": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5321,
        5333
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2111": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5321,
        5333
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2112": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x89E"
    },
    "2115": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5373,
        5379
      ],
      "op": "DUP6",
      "path": "24"
    },
    "2116": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2118": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2119": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2120": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x60"
    },
    "2122": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "ADD",
      "path": "24"
    },
    "2123": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2125": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2126": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2127": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x28"
    },
    "2129": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2130": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2131": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2133": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "ADD",
      "path": "24"
    },
    "2134": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1BB4"
    },
    "2137": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x28"
    },
    "2139": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2140": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "CODECOPY",
      "path": "24"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2145": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2147": {
      "op": "SHL"
    },
    "2148": {
      "op": "SUB"
    },
    "2149": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "DUP11",
      "path": "24"
    },
    "2150": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "AND",
      "path": "24"
    },
    "2151": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2153": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2154": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2155": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2156": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5346
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "2158": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2160": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2161": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2163": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2164": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "2165": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5354
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2166": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5355,
        5367
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x87D"
    },
    "2169": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5355,
        5365
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x10E5"
    },
    "2172": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5355,
        5367
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2173": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5355,
        5367
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2178": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2180": {
      "op": "SHL"
    },
    "2181": {
      "op": "SUB"
    },
    "2182": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "AND",
      "path": "24"
    },
    "2183": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2184": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2185": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2187": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2188": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "ADD",
      "path": "24"
    },
    "2189": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2190": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2191": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2192": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2193": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2195": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "ADD",
      "path": "24"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2198": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "2199": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2200": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5368
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2201": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2202": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5372
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1332"
    },
    "2205": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5335,
        5424
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2206": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5335,
        5424
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2207": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5304,
        5312
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x10E9"
    },
    "2210": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5304,
        5425
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2211": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5304,
        5425
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2212": {
      "op": "POP"
    },
    "2213": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5442,
        5446
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 6,
      "value": "0x1"
    },
    "2215": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "2216": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "2217": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "POP",
      "path": "24"
    },
    "2218": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "POP",
      "path": "24"
    },
    "2219": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5136,
        5453
      ],
      "op": "POP",
      "path": "24"
    },
    "2220": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        5136,
        5453
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2221": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2222": {
      "fn": "ERC20.decimals",
      "offset": [
        3441,
        3450
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 7,
      "value": "0x7"
    },
    "2224": {
      "fn": "ERC20.decimals",
      "offset": [
        3441,
        3450
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2225": {
      "fn": "ERC20.decimals",
      "offset": [
        3441,
        3450
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xFF"
    },
    "2227": {
      "fn": "ERC20.decimals",
      "offset": [
        3441,
        3450
      ],
      "op": "AND",
      "path": "24"
    },
    "2228": {
      "fn": "ERC20.decimals",
      "offset": [
        3367,
        3457
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2229": {
      "fn": "ERC20.decimals",
      "jump": "o",
      "offset": [
        3367,
        3457
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2230": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5848,
        6063
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2231": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5936,
        5940
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2233": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5952,
        6035
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 8,
      "value": "0x7F2"
    },
    "2236": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5973
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x8C3"
    },
    "2239": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5971
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x10E5"
    },
    "2242": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5961,
        5973
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2243": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5973
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2244": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5975,
        5982
      ],
      "op": "DUP5",
      "path": "24"
    },
    "2245": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6034
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x89E"
    },
    "2248": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6023,
        6033
      ],
      "op": "DUP6",
      "path": "24"
    },
    "2249": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        5995
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "2251": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2253": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5996,
        6008
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x8D4"
    },
    "2256": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5996,
        6006
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x10E5"
    },
    "2259": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5996,
        6008
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2260": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5996,
        6008
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2265": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2267": {
      "op": "SHL"
    },
    "2268": {
      "op": "SUB"
    },
    "2269": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2270": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2271": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "AND",
      "path": "24"
    },
    "2272": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2273": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2274": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2276": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2277": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "DUP4",
      "path": "24"
    },
    "2278": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "ADD",
      "path": "24"
    },
    "2279": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "2280": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2281": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "2282": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2283": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2285": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2286": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2287": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "ADD",
      "path": "24"
    },
    "2288": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2290": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2291": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2292": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6009
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "2293": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6018
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2294": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6018
      ],
      "op": "DUP13",
      "path": "24"
    },
    "2295": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6018
      ],
      "op": "AND",
      "path": "24"
    },
    "2296": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6018
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2297": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6018
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2298": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6018
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "2299": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6018
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2300": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6018
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2301": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6018
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "2302": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6018
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2303": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6018
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2304": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5984,
        6022
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x13C9"
    },
    "2307": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5984,
        6034
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2308": {
      "fn": "SushiToken.mint",
      "offset": [
        476,
        635
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2309": {
      "offset": [
        315,
        324
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x90C"
    },
    "2312": {
      "offset": [
        315,
        322
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xC62"
    },
    "2315": {
      "jump": "i",
      "offset": [
        315,
        324
      ],
      "op": "JUMP",
      "path": "50"
    },
    "2316": {
      "branch": 105,
      "fn": "SushiToken.mint",
      "offset": [
        315,
        324
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2317": {
      "offset": [
        307,
        325
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x915"
    },
    "2320": {
      "branch": 105,
      "offset": [
        307,
        325
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "2321": {
      "fn": "SushiToken.mint",
      "offset": [
        307,
        325
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "2323": {
      "fn": "SushiToken.mint",
      "offset": [
        307,
        325
      ],
      "op": "DUP1",
      "path": "50"
    },
    "2324": {
      "fn": "SushiToken.mint",
      "offset": [
        307,
        325
      ],
      "op": "REVERT",
      "path": "50"
    },
    "2325": {
      "fn": "SushiToken.mint",
      "offset": [
        307,
        325
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2326": {
      "fn": "SushiToken.mint",
      "offset": [
        547,
        566
      ],
      "op": "PUSH2",
      "path": "29",
      "statement": 9,
      "value": "0x91F"
    },
    "2329": {
      "fn": "SushiToken.mint",
      "offset": [
        553,
        556
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2330": {
      "fn": "SushiToken.mint",
      "offset": [
        558,
        565
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2331": {
      "fn": "SushiToken.mint",
      "offset": [
        547,
        552
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1423"
    },
    "2334": {
      "fn": "SushiToken.mint",
      "jump": "i",
      "offset": [
        547,
        566
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2335": {
      "fn": "SushiToken.mint",
      "offset": [
        547,
        566
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2342": {
      "op": "SHL"
    },
    "2343": {
      "op": "SUB"
    },
    "2344": {
      "fn": "SushiToken.mint",
      "offset": [
        603,
        618
      ],
      "op": "DUP1",
      "path": "29",
      "statement": 10
    },
    "2345": {
      "fn": "SushiToken.mint",
      "offset": [
        603,
        618
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2346": {
      "fn": "SushiToken.mint",
      "offset": [
        603,
        618
      ],
      "op": "AND",
      "path": "29"
    },
    "2347": {
      "fn": "SushiToken.mint",
      "offset": [
        599,
        600
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2349": {
      "fn": "SushiToken.mint",
      "offset": [
        603,
        618
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2350": {
      "fn": "SushiToken.mint",
      "offset": [
        603,
        618
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2351": {
      "fn": "SushiToken.mint",
      "offset": [
        603,
        618
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2352": {
      "fn": "SushiToken.mint",
      "offset": [
        603,
        613
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x8"
    },
    "2354": {
      "fn": "SushiToken.mint",
      "offset": [
        603,
        618
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2356": {
      "fn": "SushiToken.mint",
      "offset": [
        603,
        618
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2357": {
      "fn": "SushiToken.mint",
      "offset": [
        603,
        618
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2359": {
      "fn": "SushiToken.mint",
      "offset": [
        603,
        618
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2360": {
      "fn": "SushiToken.mint",
      "offset": [
        603,
        618
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "2361": {
      "fn": "SushiToken.mint",
      "offset": [
        603,
        618
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2362": {
      "fn": "SushiToken.mint",
      "offset": [
        576,
        628
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x944"
    },
    "2365": {
      "fn": "SushiToken.mint",
      "offset": [
        576,
        628
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "2366": {
      "fn": "SushiToken.mint",
      "offset": [
        603,
        618
      ],
      "op": "AND",
      "path": "29"
    },
    "2367": {
      "fn": "SushiToken.mint",
      "offset": [
        620,
        627
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2368": {
      "fn": "SushiToken.mint",
      "offset": [
        576,
        590
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1515"
    },
    "2371": {
      "fn": "SushiToken.mint",
      "jump": "i",
      "offset": [
        576,
        628
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2372": {
      "fn": "SushiToken.mint",
      "offset": [
        576,
        628
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2373": {
      "fn": "SushiToken.mint",
      "offset": [
        476,
        635
      ],
      "op": "POP",
      "path": "29"
    },
    "2374": {
      "fn": "SushiToken.mint",
      "offset": [
        476,
        635
      ],
      "op": "POP",
      "path": "29"
    },
    "2375": {
      "fn": "SushiToken.mint",
      "jump": "o",
      "offset": [
        476,
        635
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2376": {
      "fn": "SushiToken.delegates",
      "offset": [
        2594,
        2737
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2381": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2383": {
      "op": "SHL"
    },
    "2384": {
      "op": "SUB"
    },
    "2385": {
      "fn": "SushiToken.delegates",
      "offset": [
        2709,
        2730
      ],
      "op": "SWAP1",
      "path": "29",
      "statement": 11
    },
    "2386": {
      "fn": "SushiToken.delegates",
      "offset": [
        2709,
        2730
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2387": {
      "fn": "SushiToken.delegates",
      "offset": [
        2709,
        2730
      ],
      "op": "AND",
      "path": "29"
    },
    "2388": {
      "fn": "SushiToken.delegates",
      "offset": [
        2679,
        2686
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2390": {
      "fn": "SushiToken.delegates",
      "offset": [
        2709,
        2730
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2391": {
      "fn": "SushiToken.delegates",
      "offset": [
        2709,
        2730
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2392": {
      "fn": "SushiToken.delegates",
      "offset": [
        2709,
        2730
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2393": {
      "fn": "SushiToken.delegates",
      "offset": [
        2709,
        2719
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x8"
    },
    "2395": {
      "fn": "SushiToken.delegates",
      "offset": [
        2709,
        2730
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2397": {
      "fn": "SushiToken.delegates",
      "offset": [
        2709,
        2730
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2398": {
      "fn": "SushiToken.delegates",
      "offset": [
        2709,
        2730
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2400": {
      "fn": "SushiToken.delegates",
      "offset": [
        2709,
        2730
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2401": {
      "fn": "SushiToken.delegates",
      "offset": [
        2709,
        2730
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "2402": {
      "fn": "SushiToken.delegates",
      "offset": [
        2709,
        2730
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2403": {
      "fn": "SushiToken.delegates",
      "offset": [
        2709,
        2730
      ],
      "op": "AND",
      "path": "29"
    },
    "2404": {
      "fn": "SushiToken.delegates",
      "offset": [
        2709,
        2730
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2405": {
      "fn": "SushiToken.delegates",
      "jump": "o",
      "offset": [
        2594,
        2737
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2406": {
      "fn": "SushiToken.delegate",
      "offset": [
        2875,
        2977
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2407": {
      "fn": "SushiToken.delegate",
      "offset": [
        2938,
        2970
      ],
      "op": "PUSH2",
      "path": "29",
      "statement": 12,
      "value": "0x970"
    },
    "2410": {
      "fn": "SushiToken.delegate",
      "offset": [
        2948,
        2958
      ],
      "op": "CALLER",
      "path": "29"
    },
    "2411": {
      "fn": "SushiToken.delegate",
      "offset": [
        2960,
        2969
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2412": {
      "fn": "SushiToken.delegate",
      "offset": [
        2938,
        2947
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1652"
    },
    "2415": {
      "fn": "SushiToken.delegate",
      "jump": "i",
      "offset": [
        2938,
        2970
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2416": {
      "fn": "SushiToken.delegate",
      "offset": [
        2938,
        2970
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2417": {
      "fn": "SushiToken.delegate",
      "offset": [
        2875,
        2977
      ],
      "op": "POP",
      "path": "29"
    },
    "2418": {
      "fn": "SushiToken.delegate",
      "jump": "o",
      "offset": [
        2875,
        2977
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2419": {
      "offset": [
        1510,
        1559
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2420": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xA"
    },
    "2422": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2424": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2425": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2427": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2428": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2429": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2430": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2432": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2433": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "2434": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2435": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "2440": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "AND",
      "path": "29"
    },
    "2441": {
      "fn": "SushiToken.delegate",
      "offset": [
        1510,
        1559
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2442": {
      "fn": "SushiToken.delegate",
      "jump": "o",
      "offset": [
        1510,
        1559
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2443": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3673,
        3790
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2448": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2450": {
      "op": "SHL"
    },
    "2451": {
      "op": "SUB"
    },
    "2452": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3783
      ],
      "op": "AND",
      "path": "24",
      "statement": 13
    },
    "2453": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3739,
        3746
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2455": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3783
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2456": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3783
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2457": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3783
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2458": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3774
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "2460": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3783
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2462": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3783
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2463": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3783
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2465": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3783
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2466": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3783
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "2467": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3783
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2468": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3765,
        3783
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2469": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [
        3673,
        3790
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2470": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5404,
        6622
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2471": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5509,
        5516
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2473": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5554,
        5566
      ],
      "op": "NUMBER",
      "path": "29",
      "statement": 14
    },
    "2474": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5540,
        5551
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2475": {
      "branch": 80,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5540,
        5566
      ],
      "op": "LT",
      "path": "29"
    },
    "2476": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x9E6"
    },
    "2479": {
      "branch": 80,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2480": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2482": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2483": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2487": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2489": {
      "op": "SHL"
    },
    "2490": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2491": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2492": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "2494": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "ADD",
      "path": "29"
    },
    "2495": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2496": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2497": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2499": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "ADD",
      "path": "29"
    },
    "2500": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2501": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2502": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "SUB",
      "path": "29"
    },
    "2503": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2504": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2505": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x28"
    },
    "2507": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2508": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2509": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2511": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "ADD",
      "path": "29"
    },
    "2512": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2513": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1B8C"
    },
    "2516": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x28"
    },
    "2518": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2519": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "CODECOPY",
      "path": "29"
    },
    "2520": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2522": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "ADD",
      "path": "29"
    },
    "2523": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2524": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "POP",
      "path": "29"
    },
    "2525": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "POP",
      "path": "29"
    },
    "2526": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2528": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2529": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2530": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2531": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "SUB",
      "path": "29"
    },
    "2532": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2533": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "REVERT",
      "path": "29"
    },
    "2534": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5532,
        5611
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2539": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2541": {
      "op": "SHL"
    },
    "2542": {
      "op": "SUB"
    },
    "2543": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5644,
        5667
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2544": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5644,
        5667
      ],
      "op": "AND",
      "path": "29"
    },
    "2545": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5622,
        5641
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2547": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5644,
        5667
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2548": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5644,
        5667
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2549": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5644,
        5667
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2550": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5644,
        5658
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xA"
    },
    "2552": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5644,
        5667
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2554": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5644,
        5667
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2555": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5644,
        5667
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2557": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5644,
        5667
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2558": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5644,
        5667
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "2559": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5644,
        5667
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2560": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5644,
        5667
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "2565": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5644,
        5667
      ],
      "op": "AND",
      "path": "29"
    },
    "2566": {
      "branch": 81,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5681,
        5698
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2567": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5677,
        5733
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xA14"
    },
    "2570": {
      "branch": 81,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5677,
        5733
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2571": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5721,
        5722
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 15,
      "value": "0x0"
    },
    "2573": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5714,
        5722
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2574": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5714,
        5722
      ],
      "op": "POP",
      "path": "29"
    },
    "2575": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5714,
        5722
      ],
      "op": "POP",
      "path": "29"
    },
    "2576": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5714,
        5722
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x7F6"
    },
    "2579": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5714,
        5722
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2580": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5677,
        5733
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2585": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2587": {
      "op": "SHL"
    },
    "2588": {
      "op": "SUB"
    },
    "2589": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5790,
        5810
      ],
      "op": "DUP5",
      "path": "29"
    },
    "2590": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5790,
        5810
      ],
      "op": "AND",
      "path": "29"
    },
    "2591": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5790,
        5810
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2593": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5790,
        5810
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2594": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5790,
        5810
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2595": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5790,
        5810
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2596": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5790,
        5801
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x9"
    },
    "2598": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5790,
        5810
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2600": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5790,
        5810
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2601": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5790,
        5810
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2602": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5790,
        5810
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2603": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5790,
        5810
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2605": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5790,
        5810
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2606": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5790,
        5810
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2607": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5790,
        5810
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "2608": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5790,
        5828
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2615": {
      "op": "NOT"
    },
    "2616": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5811,
        5827
      ],
      "op": "DUP7",
      "path": "29"
    },
    "2617": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5811,
        5827
      ],
      "op": "ADD",
      "path": "29"
    },
    "2618": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5790,
        5828
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2619": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5790,
        5828
      ],
      "op": "AND",
      "path": "29"
    },
    "2620": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5790,
        5828
      ],
      "op": "DUP6",
      "path": "29"
    },
    "2621": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5790,
        5828
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2622": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5790,
        5828
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "2623": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5790,
        5828
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2624": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5790,
        5828
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2625": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5790,
        5828
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2626": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5790,
        5828
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "2627": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5790,
        5838
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2628": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5790,
        5838
      ],
      "op": "AND",
      "path": "29"
    },
    "2629": {
      "branch": 82,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5790,
        5853
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2630": {
      "op": "LT"
    },
    "2631": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5786,
        5931
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xA83"
    },
    "2634": {
      "branch": 82,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5786,
        5931
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2639": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2641": {
      "op": "SHL"
    },
    "2642": {
      "op": "SUB"
    },
    "2643": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5896
      ],
      "op": "DUP5",
      "path": "29",
      "statement": 16
    },
    "2644": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5896
      ],
      "op": "AND",
      "path": "29"
    },
    "2645": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5896
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2647": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5896
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2648": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5896
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2649": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5896
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2650": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5887
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x9"
    },
    "2652": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5896
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2654": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5896
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2655": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5896
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2656": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5896
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2657": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5896
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2659": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5896
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2660": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5896
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2661": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5896
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "2662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2664": {
      "op": "NOT"
    },
    "2665": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5897,
        5913
      ],
      "op": "SWAP5",
      "path": "29"
    },
    "2666": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5897,
        5913
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2667": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5897,
        5913
      ],
      "op": "SWAP5",
      "path": "29"
    },
    "2668": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5897,
        5913
      ],
      "op": "ADD",
      "path": "29"
    },
    "2669": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5914
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "2674": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5914
      ],
      "op": "AND",
      "path": "29"
    },
    "2675": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5914
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2676": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5914
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2677": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5914
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "2678": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5914
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2679": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5914
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2680": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5914
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "2681": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5912,
        5913
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "2683": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5920
      ],
      "op": "ADD",
      "path": "29"
    },
    "2684": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5920
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2685": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5876,
        5920
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2686": {
      "op": "POP"
    },
    "2687": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5869,
        5920
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x7F6"
    },
    "2690": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5869,
        5920
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2691": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5786,
        5931
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2696": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2698": {
      "op": "SHL"
    },
    "2699": {
      "op": "SUB"
    },
    "2700": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5989,
        6009
      ],
      "op": "DUP5",
      "path": "29"
    },
    "2701": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5989,
        6009
      ],
      "op": "AND",
      "path": "29"
    },
    "2702": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5989,
        6009
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2704": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5989,
        6009
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2705": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5989,
        6009
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2706": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5989,
        6009
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2707": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5989,
        6000
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x9"
    },
    "2709": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5989,
        6009
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2711": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5989,
        6009
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2712": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5989,
        6009
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2713": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5989,
        6009
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2714": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5989,
        6009
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2716": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5989,
        6009
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2717": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5989,
        6009
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2718": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5989,
        6009
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "2719": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5989,
        6012
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2720": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5989,
        6012
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2721": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5989,
        6012
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2722": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5989,
        6012
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2723": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5989,
        6012
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2724": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5989,
        6012
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2725": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5989,
        6012
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2726": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5989,
        6012
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "2727": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5989,
        6022
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2728": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5989,
        6012
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "2733": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5989,
        6022
      ],
      "op": "AND",
      "path": "29"
    },
    "2734": {
      "branch": 83,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5989,
        6036
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2735": {
      "op": "LT"
    },
    "2736": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5985,
        6071
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "2737": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5985,
        6071
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xABE"
    },
    "2740": {
      "branch": 83,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5985,
        6071
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2741": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6059,
        6060
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 17,
      "value": "0x0"
    },
    "2743": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6052,
        6060
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2744": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6052,
        6060
      ],
      "op": "POP",
      "path": "29"
    },
    "2745": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6052,
        6060
      ],
      "op": "POP",
      "path": "29"
    },
    "2746": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6052,
        6060
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x7F6"
    },
    "2749": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6052,
        6060
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2750": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5985,
        6071
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2751": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6081,
        6093
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2753": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2755": {
      "op": "NOT"
    },
    "2756": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6122,
        6138
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2757": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6122,
        6138
      ],
      "op": "ADD",
      "path": "29"
    },
    "2758": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6148,
        6566
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2759": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6163,
        6168
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2760": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6155,
        6168
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "2765": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6155,
        6168
      ],
      "op": "AND",
      "path": "29"
    },
    "2766": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6155,
        6160
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2767": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6155,
        6168
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "2772": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6155,
        6168
      ],
      "op": "AND",
      "path": "29"
    },
    "2773": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6155,
        6168
      ],
      "op": "GT",
      "path": "29"
    },
    "2774": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6148,
        6566
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "2775": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6148,
        6566
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xB77"
    },
    "2778": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6148,
        6566
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2779": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6226,
        6227
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x2"
    },
    "2781": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6209,
        6222
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2782": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6209,
        6222
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2783": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6209,
        6222
      ],
      "op": "SUB",
      "path": "29"
    },
    "2784": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6208,
        6227
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "2789": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6208,
        6227
      ],
      "op": "AND",
      "path": "29"
    },
    "2790": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6208,
        6227
      ],
      "op": "DIV",
      "path": "29"
    },
    "2791": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6200,
        6227
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2792": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6200,
        6227
      ],
      "op": "SUB",
      "path": "29"
    },
    "2793": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6268,
        6288
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xAF0"
    },
    "2796": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6268,
        6288
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x19F0"
    },
    "2799": {
      "fn": "SushiToken.getPriorVotes",
      "jump": "i",
      "offset": [
        6268,
        6288
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2800": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6268,
        6288
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2801": {
      "op": "POP"
    },
    "2802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2806": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2808": {
      "op": "SHL"
    },
    "2809": {
      "op": "SUB"
    },
    "2810": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6291,
        6311
      ],
      "op": "DUP8",
      "path": "29"
    },
    "2811": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6291,
        6311
      ],
      "op": "AND",
      "path": "29"
    },
    "2812": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6291,
        6311
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2814": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6291,
        6311
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2815": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6291,
        6311
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2816": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6291,
        6311
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2817": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6291,
        6302
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x9"
    },
    "2819": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6291,
        6311
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2821": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6291,
        6311
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2822": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6291,
        6311
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2823": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6291,
        6311
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2824": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6291,
        6311
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2826": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6291,
        6311
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2827": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6291,
        6311
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2828": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6291,
        6311
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "2829": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6291,
        6319
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "2834": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6291,
        6319
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2835": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6291,
        6319
      ],
      "op": "DUP7",
      "path": "29"
    },
    "2836": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6291,
        6319
      ],
      "op": "AND",
      "path": "29"
    },
    "2837": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6291,
        6319
      ],
      "op": "DUP6",
      "path": "29"
    },
    "2838": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6291,
        6319
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2839": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6291,
        6319
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2840": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6291,
        6319
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2841": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6291,
        6319
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2842": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6291,
        6319
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "2843": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6291,
        6319
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2844": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6291,
        6319
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2845": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6291,
        6319
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "2846": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6268,
        6319
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2847": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6268,
        6319
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2848": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6268,
        6319
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2849": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6268,
        6319
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2850": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6268,
        6319
      ],
      "op": "ADD",
      "path": "29"
    },
    "2851": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6268,
        6319
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2852": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6268,
        6319
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "2853": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6268,
        6319
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2854": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6268,
        6319
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2855": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6268,
        6319
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2856": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6268,
        6319
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2857": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6268,
        6319
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "2858": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6268,
        6319
      ],
      "op": "AND",
      "path": "29"
    },
    "2859": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6268,
        6319
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2860": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6268,
        6319
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2861": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6268,
        6319
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2862": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6268,
        6319
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "2864": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6268,
        6319
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2865": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6268,
        6319
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "2866": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6268,
        6319
      ],
      "op": "ADD",
      "path": "29"
    },
    "2867": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6268,
        6319
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2868": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6268,
        6319
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2869": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6268,
        6319
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2870": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6268,
        6319
      ],
      "op": "ADD",
      "path": "29"
    },
    "2871": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6268,
        6319
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2872": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6268,
        6319
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2873": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6268,
        6319
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2874": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6268,
        6319
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2875": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6268,
        6319
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2876": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6337,
        6364
      ],
      "op": "DUP8",
      "path": "29"
    },
    "2877": {
      "branch": 84,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6337,
        6364
      ],
      "op": "EQ",
      "path": "29"
    },
    "2878": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6333,
        6556
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "2879": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6333,
        6556
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xB52"
    },
    "2882": {
      "branch": 84,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6333,
        6556
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2883": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6391,
        6399
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 18,
      "value": "0x20"
    },
    "2885": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6391,
        6399
      ],
      "op": "ADD",
      "path": "29"
    },
    "2886": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6391,
        6399
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2887": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6391,
        6399
      ],
      "op": "SWAP5",
      "path": "29"
    },
    "2888": {
      "op": "POP"
    },
    "2889": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6384,
        6399
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x7F6"
    },
    "2892": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6384,
        6399
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "2893": {
      "op": "POP"
    },
    "2894": {
      "op": "POP"
    },
    "2895": {
      "op": "POP"
    },
    "2896": {
      "op": "POP"
    },
    "2897": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6384,
        6399
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2898": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6333,
        6556
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2899": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6424,
        6436
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2900": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6424,
        6436
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2901": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6424,
        6450
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "2906": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6424,
        6450
      ],
      "op": "AND",
      "path": "29"
    },
    "2907": {
      "branch": 85,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6424,
        6450
      ],
      "op": "DUP8",
      "path": "29"
    },
    "2908": {
      "op": "GT"
    },
    "2909": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6420,
        6556
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "2910": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6420,
        6556
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xB69"
    },
    "2913": {
      "branch": 85,
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6420,
        6556
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2914": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6478,
        6484
      ],
      "op": "DUP2",
      "path": "29",
      "statement": 19
    },
    "2915": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6470,
        6484
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "2916": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6470,
        6484
      ],
      "op": "POP",
      "path": "29"
    },
    "2917": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6420,
        6556
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xB70"
    },
    "2920": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6420,
        6556
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2921": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6420,
        6556
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2922": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6540,
        6541
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 20,
      "value": "0x1"
    },
    "2924": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6531,
        6537
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2925": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6531,
        6541
      ],
      "op": "SUB",
      "path": "29"
    },
    "2926": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6523,
        6541
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "2927": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6523,
        6541
      ],
      "op": "POP",
      "path": "29"
    },
    "2928": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6420,
        6556
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2929": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6148,
        6566
      ],
      "op": "POP",
      "path": "29"
    },
    "2930": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6148,
        6566
      ],
      "op": "POP",
      "path": "29"
    },
    "2931": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6148,
        6566
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xAC6"
    },
    "2934": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6148,
        6566
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2935": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6148,
        6566
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2936": {
      "op": "POP"
    },
    "2937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2943": {
      "op": "SHL"
    },
    "2944": {
      "op": "SUB"
    },
    "2945": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6582,
        6602
      ],
      "op": "DUP6",
      "path": "29",
      "statement": 21
    },
    "2946": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6582,
        6602
      ],
      "op": "AND",
      "path": "29"
    },
    "2947": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6582,
        6602
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2949": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6582,
        6602
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2950": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6582,
        6602
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2951": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6582,
        6602
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2952": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6582,
        6593
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x9"
    },
    "2954": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6582,
        6602
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2956": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6582,
        6602
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2957": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6582,
        6602
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2958": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6582,
        6602
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2959": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6582,
        6602
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2961": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6582,
        6602
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2962": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6582,
        6602
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2963": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6582,
        6602
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "2964": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6582,
        6609
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "2969": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6582,
        6609
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2970": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6582,
        6609
      ],
      "op": "SWAP5",
      "path": "29"
    },
    "2971": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6582,
        6609
      ],
      "op": "AND",
      "path": "29"
    },
    "2972": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6582,
        6609
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2973": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6582,
        6609
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2974": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6582,
        6609
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "2975": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6582,
        6609
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2976": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6582,
        6609
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2977": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6582,
        6609
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "2978": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6582,
        6615
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "2980": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6582,
        6615
      ],
      "op": "ADD",
      "path": "29"
    },
    "2981": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6582,
        6615
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2982": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        6582,
        6615
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2983": {
      "op": "POP"
    },
    "2984": {
      "op": "POP"
    },
    "2985": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5404,
        6622
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "2986": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5404,
        6622
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2987": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5404,
        6622
      ],
      "op": "POP",
      "path": "29"
    },
    "2988": {
      "fn": "SushiToken.getPriorVotes",
      "offset": [
        5404,
        6622
      ],
      "op": "POP",
      "path": "29"
    },
    "2989": {
      "fn": "SushiToken.getPriorVotes",
      "jump": "o",
      "offset": [
        5404,
        6622
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2990": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        866,
        1077
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "2991": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        932,
        940
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 22,
      "value": "0x1"
    },
    "2993": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        932,
        940
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2998": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3000": {
      "op": "SHL"
    },
    "3001": {
      "op": "SUB"
    },
    "3002": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        932,
        940
      ],
      "op": "AND",
      "path": "50"
    },
    "3003": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        918,
        928
      ],
      "op": "CALLER",
      "path": "50"
    },
    "3004": {
      "branch": 106,
      "fn": "Owned.acceptOwnership",
      "offset": [
        918,
        940
      ],
      "op": "EQ",
      "path": "50"
    },
    "3005": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        910,
        941
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xBC5"
    },
    "3008": {
      "branch": 106,
      "fn": "Owned.acceptOwnership",
      "offset": [
        910,
        941
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "3009": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        910,
        941
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3011": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        910,
        941
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3012": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        910,
        941
      ],
      "op": "REVERT",
      "path": "50"
    },
    "3013": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        910,
        941
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3014": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        985,
        993
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 23,
      "value": "0x1"
    },
    "3016": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        985,
        993
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "3017": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        985,
        993
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3019": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        977,
        983
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3020": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        977,
        983
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "3021": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        956,
        994
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "3023": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        956,
        994
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "3024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3028": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3030": {
      "op": "SHL"
    },
    "3031": {
      "op": "SUB"
    },
    "3032": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        985,
        993
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "3033": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        985,
        993
      ],
      "op": "DUP5",
      "path": "50"
    },
    "3034": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        985,
        993
      ],
      "op": "AND",
      "path": "50"
    },
    "3035": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        985,
        993
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "3036": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        977,
        983
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3037": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        977,
        983
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3038": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        977,
        983
      ],
      "op": "AND",
      "path": "50"
    },
    "3039": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        977,
        983
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3040": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        956,
        994
      ],
      "op": "PUSH32",
      "path": "50",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3073": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        956,
        994
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3074": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        956,
        994
      ],
      "op": "LOG3",
      "path": "50"
    },
    "3075": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1029,
        1037
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 24,
      "value": "0x1"
    },
    "3077": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1029,
        1037
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3078": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1029,
        1037
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "3079": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1029,
        1037
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3081": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "DUP1",
      "path": "50"
    },
    "3082": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "3083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3087": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3089": {
      "op": "SHL"
    },
    "3090": {
      "op": "SUB"
    },
    "3091": {
      "op": "NOT"
    },
    "3092": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3093": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "DUP2",
      "path": "50"
    },
    "3094": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "AND",
      "path": "50"
    },
    "3095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3099": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3101": {
      "op": "SHL"
    },
    "3102": {
      "op": "SUB"
    },
    "3103": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1029,
        1037
      ],
      "op": "DUP5",
      "path": "50"
    },
    "3104": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1029,
        1037
      ],
      "op": "AND",
      "path": "50"
    },
    "3105": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "OR",
      "path": "50"
    },
    "3106": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3107": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "3108": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "SSTORE",
      "path": "50"
    },
    "3109": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1049,
        1070
      ],
      "op": "AND",
      "path": "50",
      "statement": 25
    },
    "3110": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1049,
        1070
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3111": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1049,
        1070
      ],
      "op": "SSTORE",
      "path": "50"
    },
    "3112": {
      "fn": "Owned.acceptOwnership",
      "jump": "o",
      "offset": [
        866,
        1077
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3113": {
      "offset": [
        2037,
        2076
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3114": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2037,
        2076
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xB"
    },
    "3116": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2037,
        2076
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "3118": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2037,
        2076
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3119": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2037,
        2076
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3121": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2037,
        2076
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3122": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2037,
        2076
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3123": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2037,
        2076
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3124": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2037,
        2076
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3126": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2037,
        2076
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3127": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2037,
        2076
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "3128": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2037,
        2076
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "3129": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        2037,
        2076
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3130": {
      "fn": "Owned.acceptOwnership",
      "jump": "o",
      "offset": [
        2037,
        2076
      ],
      "op": "JUMP",
      "path": "29"
    },
    "3131": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3132": {
      "fn": "SushiToken.initToken",
      "offset": [
        313,
        330
      ],
      "op": "PUSH2",
      "path": "29",
      "statement": 26,
      "value": "0xC44"
    },
    "3135": {
      "fn": "SushiToken.initToken",
      "offset": [
        324,
        329
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3136": {
      "fn": "SushiToken.initToken",
      "offset": [
        313,
        323
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x16E7"
    },
    "3139": {
      "fn": "SushiToken.initToken",
      "jump": "i",
      "offset": [
        313,
        330
      ],
      "op": "JUMP",
      "path": "29"
    },
    "3140": {
      "fn": "SushiToken.initToken",
      "offset": [
        313,
        330
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3141": {
      "fn": "SushiToken.initToken",
      "offset": [
        340,
        366
      ],
      "op": "PUSH2",
      "path": "29",
      "statement": 27,
      "value": "0xC4E"
    },
    "3144": {
      "fn": "SushiToken.initToken",
      "offset": [
        351,
        356
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3145": {
      "fn": "SushiToken.initToken",
      "offset": [
        358,
        365
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3146": {
      "fn": "SushiToken.initToken",
      "offset": [
        340,
        350
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x175C"
    },
    "3149": {
      "fn": "SushiToken.initToken",
      "jump": "i",
      "offset": [
        340,
        366
      ],
      "op": "JUMP",
      "path": "29"
    },
    "3150": {
      "fn": "SushiToken.initToken",
      "offset": [
        340,
        366
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3151": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "POP",
      "path": "29"
    },
    "3152": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "POP",
      "path": "29"
    },
    "3153": {
      "fn": "SushiToken.initToken",
      "offset": [
        207,
        373
      ],
      "op": "POP",
      "path": "29"
    },
    "3154": {
      "fn": "SushiToken.initToken",
      "jump": "o",
      "offset": [
        207,
        373
      ],
      "op": "JUMP",
      "path": "29"
    },
    "3155": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3156": {
      "fn": "Owned.owner",
      "offset": [
        602,
        609
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3158": {
      "fn": "Owned.owner",
      "offset": [
        628,
        634
      ],
      "op": "SLOAD",
      "path": "50",
      "statement": 28
    },
    "3159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3163": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3165": {
      "op": "SHL"
    },
    "3166": {
      "op": "SUB"
    },
    "3167": {
      "fn": "Owned.owner",
      "offset": [
        628,
        634
      ],
      "op": "AND",
      "path": "50"
    },
    "3168": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3169": {
      "fn": "Owned.owner",
      "jump": "o",
      "offset": [
        564,
        641
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3170": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "3171": {
      "fn": "Owned.isOwner",
      "offset": [
        686,
        690
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "3173": {
      "fn": "Owned.isOwner",
      "offset": [
        723,
        729
      ],
      "op": "SLOAD",
      "path": "50",
      "statement": 29
    },
    "3174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3178": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3180": {
      "op": "SHL"
    },
    "3181": {
      "op": "SUB"
    },
    "3182": {
      "fn": "Owned.isOwner",
      "offset": [
        723,
        729
      ],
      "op": "AND",
      "path": "50"
    },
    "3183": {
      "fn": "Owned.isOwner",
      "offset": [
        709,
        719
      ],
      "op": "CALLER",
      "path": "50"
    },
    "3184": {
      "fn": "Owned.isOwner",
      "offset": [
        709,
        729
      ],
      "op": "EQ",
      "path": "50"
    },
    "3185": {
      "fn": "Owned.isOwner",
      "offset": [
        709,
        729
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "3186": {
      "fn": "Owned.isOwner",
      "jump": "o",
      "offset": [
        646,
        736
      ],
      "op": "JUMP",
      "path": "50"
    },
    "3187": {
      "fn": "ERC20.symbol",
      "offset": [
        2650,
        2744
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3188": {
      "fn": "ERC20.symbol",
      "offset": [
        2730,
        2737
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 30,
      "value": "0x6"
    },
    "3190": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3191": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3192": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3194": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3195": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3196": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3198": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1F"
    },
    "3200": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "3202": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3204": {
      "op": "NOT"
    },
    "3205": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x100"
    },
    "3208": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "3210": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP9",
      "path": "24"
    },
    "3211": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "AND",
      "path": "24"
    },
    "3212": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3213": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "MUL",
      "path": "24"
    },
    "3214": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "ADD",
      "path": "24"
    },
    "3215": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3216": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP6",
      "path": "24"
    },
    "3217": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "AND",
      "path": "24"
    },
    "3218": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "3219": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3220": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "3221": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DIV",
      "path": "24"
    },
    "3222": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "3223": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP5",
      "path": "24"
    },
    "3224": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "ADD",
      "path": "24"
    },
    "3225": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3226": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3227": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DIV",
      "path": "24"
    },
    "3228": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3229": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "MUL",
      "path": "24"
    },
    "3230": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3231": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "ADD",
      "path": "24"
    },
    "3232": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3233": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "ADD",
      "path": "24"
    },
    "3234": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3235": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3236": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3237": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3238": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3239": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3240": {
      "fn": "ERC20.symbol",
      "offset": [
        2698,
        2711
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x60"
    },
    "3242": {
      "fn": "ERC20.symbol",
      "offset": [
        2698,
        2711
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "3243": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3244": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3245": {
      "fn": "ERC20.symbol",
      "offset": [
        2730,
        2737
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3246": {
      "fn": "ERC20.symbol",
      "offset": [
        2730,
        2737
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3247": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3248": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "ADD",
      "path": "24"
    },
    "3249": {
      "fn": "ERC20.symbol",
      "offset": [
        2730,
        2737
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3250": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3251": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3252": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3253": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x7D4"
    },
    "3256": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3257": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3258": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1F"
    },
    "3260": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "LT",
      "path": "24"
    },
    "3261": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x7A9"
    },
    "3264": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3265": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x100"
    },
    "3268": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3269": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3270": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3271": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DIV",
      "path": "24"
    },
    "3272": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "MUL",
      "path": "24"
    },
    "3273": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3274": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3275": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3276": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3278": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "ADD",
      "path": "24"
    },
    "3279": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3280": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x7D4"
    },
    "3283": {
      "fn": "ERC20.symbol",
      "offset": [
        2723,
        2737
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3284": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6550,
        6816
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3285": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6643,
        6647
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3287": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6659,
        6788
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 31,
      "value": "0x7F2"
    },
    "3290": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6668,
        6680
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xCE1"
    },
    "3293": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6668,
        6678
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x10E5"
    },
    "3296": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6668,
        6680
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3297": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6668,
        6680
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3298": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6682,
        6689
      ],
      "op": "DUP5",
      "path": "24"
    },
    "3299": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x89E"
    },
    "3302": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6730,
        6745
      ],
      "op": "DUP6",
      "path": "24"
    },
    "3303": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3305": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3306": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3307": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x60"
    },
    "3309": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "ADD",
      "path": "24"
    },
    "3310": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3312": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3313": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3314": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x25"
    },
    "3316": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3317": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3318": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3320": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "ADD",
      "path": "24"
    },
    "3321": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1C6F"
    },
    "3324": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x25"
    },
    "3326": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3327": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "CODECOPY",
      "path": "24"
    },
    "3328": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6702
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "3330": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3332": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6703,
        6715
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xD0B"
    },
    "3335": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6703,
        6713
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x10E5"
    },
    "3338": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6703,
        6715
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3339": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6703,
        6715
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3344": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3346": {
      "op": "SHL"
    },
    "3347": {
      "op": "SUB"
    },
    "3348": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3349": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3350": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "AND",
      "path": "24"
    },
    "3351": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3352": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3353": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3355": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3356": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3357": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "ADD",
      "path": "24"
    },
    "3358": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "3359": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3360": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "3361": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3362": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3364": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3365": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3366": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "ADD",
      "path": "24"
    },
    "3367": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3369": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3370": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3371": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6716
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "3372": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6725
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3373": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6725
      ],
      "op": "DUP14",
      "path": "24"
    },
    "3374": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6725
      ],
      "op": "AND",
      "path": "24"
    },
    "3375": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6725
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3376": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6725
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3377": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6725
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3378": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6725
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3379": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6725
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3380": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6725
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "3381": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6725
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3382": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6725
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3383": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6787
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3384": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6691,
        6729
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1332"
    },
    "3387": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6691,
        6787
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3388": {
      "fn": "ERC20.transfer",
      "offset": [
        3993,
        4165
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3389": {
      "fn": "ERC20.transfer",
      "offset": [
        4079,
        4083
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3391": {
      "fn": "ERC20.transfer",
      "offset": [
        4095,
        4137
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 32,
      "value": "0x7F2"
    },
    "3394": {
      "fn": "ERC20.transfer",
      "offset": [
        4105,
        4117
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xD49"
    },
    "3397": {
      "fn": "ERC20.transfer",
      "offset": [
        4105,
        4115
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x10E5"
    },
    "3400": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        4105,
        4117
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3401": {
      "fn": "ERC20.transfer",
      "offset": [
        4105,
        4117
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3402": {
      "fn": "ERC20.transfer",
      "offset": [
        4119,
        4128
      ],
      "op": "DUP5",
      "path": "24"
    },
    "3403": {
      "fn": "ERC20.transfer",
      "offset": [
        4130,
        4136
      ],
      "op": "DUP5",
      "path": "24"
    },
    "3404": {
      "fn": "ERC20.transfer",
      "offset": [
        4095,
        4104
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x11D5"
    },
    "3407": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        4095,
        4137
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3408": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4734,
        4982
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3415": {
      "op": "SHL"
    },
    "3416": {
      "op": "SUB"
    },
    "3417": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4868,
        4891
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3418": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4868,
        4891
      ],
      "op": "AND",
      "path": "29"
    },
    "3419": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4823,
        4830
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3421": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4868,
        4891
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3422": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4868,
        4891
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3423": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4868,
        4891
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3424": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4868,
        4882
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xA"
    },
    "3426": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4868,
        4891
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "3428": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4868,
        4891
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3429": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4868,
        4891
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3431": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4868,
        4891
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3432": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4868,
        4891
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "3433": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4868,
        4891
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "3434": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4868,
        4891
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "3439": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4868,
        4891
      ],
      "op": "AND",
      "path": "29"
    },
    "3440": {
      "branch": 86,
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4908,
        4924
      ],
      "op": "DUP1",
      "path": "29",
      "statement": 33
    },
    "3441": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4908,
        4975
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xD7B"
    },
    "3444": {
      "branch": 86,
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4908,
        4975
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "3445": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4974,
        4975
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3447": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4908,
        4975
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xDAD"
    },
    "3450": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4908,
        4975
      ],
      "op": "JUMP",
      "path": "29"
    },
    "3451": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4908,
        4975
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3456": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3458": {
      "op": "SHL"
    },
    "3459": {
      "op": "SUB"
    },
    "3460": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4927,
        4947
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3461": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4927,
        4947
      ],
      "op": "AND",
      "path": "29"
    },
    "3462": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4927,
        4947
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3464": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4927,
        4947
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3465": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4927,
        4947
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3466": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4927,
        4947
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3467": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4927,
        4938
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x9"
    },
    "3469": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4927,
        4947
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "3471": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4927,
        4947
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3472": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4927,
        4947
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3473": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4927,
        4947
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3474": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4927,
        4947
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3476": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4927,
        4947
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3477": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4927,
        4947
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3478": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4927,
        4947
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "3479": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4927,
        4965
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "3484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3486": {
      "op": "NOT"
    },
    "3487": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4948,
        4964
      ],
      "op": "DUP7",
      "path": "29"
    },
    "3488": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4948,
        4964
      ],
      "op": "ADD",
      "path": "29"
    },
    "3489": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4927,
        4965
      ],
      "op": "AND",
      "path": "29"
    },
    "3490": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4927,
        4965
      ],
      "op": "DUP5",
      "path": "29"
    },
    "3491": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4927,
        4965
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3492": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4927,
        4965
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3493": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4927,
        4965
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3494": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4927,
        4965
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3495": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4927,
        4965
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3496": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4927,
        4965
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "3497": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4963,
        4964
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "3499": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4927,
        4971
      ],
      "op": "ADD",
      "path": "29"
    },
    "3500": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4927,
        4971
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "3501": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4908,
        4975
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3502": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4901,
        4975
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "3503": {
      "fn": "SushiToken.getCurrentVotes",
      "offset": [
        4734,
        4982
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "3504": {
      "op": "POP"
    },
    "3505": {
      "op": "POP"
    },
    "3506": {
      "op": "POP"
    },
    "3507": {
      "fn": "SushiToken.getCurrentVotes",
      "jump": "o",
      "offset": [
        4734,
        4982
      ],
      "op": "JUMP",
      "path": "29"
    },
    "3508": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3509": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3583,
        3606
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3511": {
      "offset": [
        1671,
        1751
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x8CAD95687BA82C2CE50E74F7B754645E5117C3A5BEC8151C0726D5857980A866"
    },
    "3544": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3709,
        3715
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xDDF"
    },
    "3547": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3709,
        3713
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x748"
    },
    "3550": {
      "fn": "SushiToken.delegateBySig",
      "jump": "i",
      "offset": [
        3709,
        3715
      ],
      "op": "JUMP",
      "path": "29"
    },
    "3551": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3709,
        3715
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3552": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3693,
        3717
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3553": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3693,
        3717
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3554": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3693,
        3717
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3555": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3693,
        3717
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "3557": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3693,
        3717
      ],
      "op": "ADD",
      "path": "29"
    },
    "3558": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3693,
        3717
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "3559": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3735,
        3747
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xDEE"
    },
    "3562": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3735,
        3745
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x17E7"
    },
    "3565": {
      "fn": "SushiToken.delegateBySig",
      "jump": "i",
      "offset": [
        3735,
        3747
      ],
      "op": "JUMP",
      "path": "29"
    },
    "3566": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3735,
        3747
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3567": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3569": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3570": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3571": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "3573": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3574": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3575": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "ADD",
      "path": "29"
    },
    "3576": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "SWAP6",
      "path": "29"
    },
    "3577": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3578": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "SWAP6",
      "path": "29"
    },
    "3579": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3580": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3581": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3582": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "ADD",
      "path": "29"
    },
    "3583": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "3584": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3585": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "3586": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3587": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "3589": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3590": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "ADD",
      "path": "29"
    },
    "3591": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3592": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3593": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3594": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3595": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3773,
        3777
      ],
      "op": "ADDRESS",
      "path": "29"
    },
    "3596": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x80"
    },
    "3598": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3599": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "DUP5",
      "path": "29"
    },
    "3600": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "ADD",
      "path": "29"
    },
    "3601": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3602": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3603": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3604": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3605": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3606": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3607": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3608": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "DUP5",
      "path": "29"
    },
    "3609": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "SUB",
      "path": "29"
    },
    "3610": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3611": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3612": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "ADD",
      "path": "29"
    },
    "3613": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3614": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3615": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xA0"
    },
    "3617": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3618": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "ADD",
      "path": "29"
    },
    "3619": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3620": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3632,
        3792
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3621": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3609,
        3802
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3622": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3609,
        3802
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3623": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3609,
        3802
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3624": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3609,
        3802
      ],
      "op": "DUP5",
      "path": "29"
    },
    "3625": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3609,
        3802
      ],
      "op": "ADD",
      "path": "29"
    },
    "3626": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3609,
        3802
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "3627": {
      "offset": [
        1888,
        1959
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
    },
    "3660": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xC0"
    },
    "3662": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "DUP5",
      "path": "29"
    },
    "3663": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "ADD",
      "path": "29"
    },
    "3664": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3669": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3671": {
      "op": "SHL"
    },
    "3672": {
      "op": "SUB"
    },
    "3673": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "DUP12",
      "path": "29"
    },
    "3674": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "AND",
      "path": "29"
    },
    "3675": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xE0"
    },
    "3677": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "DUP5",
      "path": "29"
    },
    "3678": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "ADD",
      "path": "29"
    },
    "3679": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3680": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x100"
    },
    "3683": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3684": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "ADD",
      "path": "29"
    },
    "3685": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "DUP11",
      "path": "29"
    },
    "3686": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3687": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3688": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x120"
    },
    "3691": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3692": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "DUP5",
      "path": "29"
    },
    "3693": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "ADD",
      "path": "29"
    },
    "3694": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "DUP11",
      "path": "29"
    },
    "3695": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3696": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3697": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3698": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3699": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3700": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "DUP6",
      "path": "29"
    },
    "3701": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "SUB",
      "path": "29"
    },
    "3702": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3703": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3704": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "ADD",
      "path": "29"
    },
    "3705": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3706": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3707": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x140"
    },
    "3710": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "DUP5",
      "path": "29"
    },
    "3711": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "ADD",
      "path": "29"
    },
    "3712": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3713": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3857,
        3992
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3714": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3834,
        4002
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3715": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3834,
        4002
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3716": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3834,
        4002
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3717": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3834,
        4002
      ],
      "op": "DUP6",
      "path": "29"
    },
    "3718": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3834,
        4002
      ],
      "op": "ADD",
      "path": "29"
    },
    "3719": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3834,
        4002
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "3720": {
      "op": "PUSH2",
      "value": "0x1901"
    },
    "3723": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "3725": {
      "op": "SHL"
    },
    "3726": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4053,
        4172
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x160"
    },
    "3729": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4053,
        4172
      ],
      "op": "DUP6",
      "path": "29"
    },
    "3730": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4053,
        4172
      ],
      "op": "ADD",
      "path": "29"
    },
    "3731": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4053,
        4172
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3732": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4053,
        4172
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x162"
    },
    "3735": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4053,
        4172
      ],
      "op": "DUP5",
      "path": "29"
    },
    "3736": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4053,
        4172
      ],
      "op": "ADD",
      "path": "29"
    },
    "3737": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4053,
        4172
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3738": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4053,
        4172
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3739": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4053,
        4172
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3740": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4053,
        4172
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x182"
    },
    "3743": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4053,
        4172
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3744": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4053,
        4172
      ],
      "op": "DUP6",
      "path": "29"
    },
    "3745": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4053,
        4172
      ],
      "op": "ADD",
      "path": "29"
    },
    "3746": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4053,
        4172
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3747": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4053,
        4172
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3748": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4053,
        4172
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3749": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4053,
        4172
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3750": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4053,
        4172
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3751": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4053,
        4172
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3752": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4053,
        4172
      ],
      "op": "DUP7",
      "path": "29"
    },
    "3753": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4053,
        4172
      ],
      "op": "SUB",
      "path": "29"
    },
    "3754": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4053,
        4172
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3755": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4053,
        4172
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3756": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4053,
        4172
      ],
      "op": "ADD",
      "path": "29"
    },
    "3757": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4053,
        4172
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3758": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4053,
        4172
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3759": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4053,
        4172
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1A2"
    },
    "3762": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4053,
        4172
      ],
      "op": "DUP6",
      "path": "29"
    },
    "3763": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4053,
        4172
      ],
      "op": "ADD",
      "path": "29"
    },
    "3764": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4053,
        4172
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3765": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4053,
        4172
      ],
      "op": "DUP6",
      "path": "29"
    },
    "3766": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4053,
        4172
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3767": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4030,
        4182
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3768": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4030,
        4182
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3769": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4030,
        4182
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3770": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4030,
        4182
      ],
      "op": "DUP8",
      "path": "29"
    },
    "3771": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4030,
        4182
      ],
      "op": "ADD",
      "path": "29"
    },
    "3772": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4030,
        4182
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3773": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4030,
        4182
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3774": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4030,
        4182
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3775": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4030,
        4182
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "3776": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3778": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3779": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3780": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3781": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3782": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1C2"
    },
    "3785": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "DUP7",
      "path": "29"
    },
    "3786": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "ADD",
      "path": "29"
    },
    "3787": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3788": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "DUP7",
      "path": "29"
    },
    "3789": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3790": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3791": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3792": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3793": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xFF"
    },
    "3795": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "DUP12",
      "path": "29"
    },
    "3796": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "AND",
      "path": "29"
    },
    "3797": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1E2"
    },
    "3800": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "DUP8",
      "path": "29"
    },
    "3801": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "ADD",
      "path": "29"
    },
    "3802": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3803": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x202"
    },
    "3806": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "DUP7",
      "path": "29"
    },
    "3807": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "ADD",
      "path": "29"
    },
    "3808": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "DUP11",
      "path": "29"
    },
    "3809": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3810": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3811": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x222"
    },
    "3814": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "DUP7",
      "path": "29"
    },
    "3815": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "ADD",
      "path": "29"
    },
    "3816": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "DUP10",
      "path": "29"
    },
    "3817": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3818": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3819": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "3820": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3821": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3609,
        3802
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "3822": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3609,
        3802
      ],
      "op": "SWAP7",
      "path": "29"
    },
    "3823": {
      "op": "POP"
    },
    "3824": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3834,
        4002
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3825": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3834,
        4002
      ],
      "op": "SWAP5",
      "path": "29"
    },
    "3826": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4030,
        4182
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "3827": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4030,
        4182
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "3828": {
      "op": "SWAP1"
    },
    "3829": {
      "op": "SWAP3"
    },
    "3830": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "3832": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "3833": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x242"
    },
    "3836": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3837": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "DUP5",
      "path": "29"
    },
    "3838": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "ADD",
      "path": "29"
    },
    "3839": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "3840": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3842": {
      "op": "NOT"
    },
    "3843": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3844": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "ADD",
      "path": "29"
    },
    "3845": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "3846": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3847": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3848": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3849": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "SUB",
      "path": "29"
    },
    "3850": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3851": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3852": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "ADD",
      "path": "29"
    },
    "3853": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3854": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "DUP6",
      "path": "29"
    },
    "3855": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "GAS",
      "path": "29"
    },
    "3856": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "STATICCALL",
      "path": "29"
    },
    "3857": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "3858": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3859": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "3860": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xF21"
    },
    "3863": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "3864": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "3865": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3867": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3868": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "RETURNDATACOPY",
      "path": "29"
    },
    "3869": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "3870": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3872": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "REVERT",
      "path": "29"
    },
    "3873": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3874": {
      "op": "POP"
    },
    "3875": {
      "op": "POP"
    },
    "3876": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3878": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3879": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3881": {
      "op": "NOT"
    },
    "3882": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "ADD",
      "path": "29"
    },
    "3883": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3884": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4213,
        4239
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3885": {
      "op": "POP"
    },
    "3886": {
      "op": "POP"
    },
    "3887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3891": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3893": {
      "op": "SHL"
    },
    "3894": {
      "op": "SUB"
    },
    "3895": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4257,
        4280
      ],
      "op": "DUP2",
      "path": "29",
      "statement": 34
    },
    "3896": {
      "branch": 87,
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4257,
        4280
      ],
      "op": "AND",
      "path": "29"
    },
    "3897": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xF73"
    },
    "3900": {
      "branch": 87,
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "3901": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3903": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3904": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3910": {
      "op": "SHL"
    },
    "3911": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3912": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3913": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "3915": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "ADD",
      "path": "29"
    },
    "3916": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3917": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3918": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "3920": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "ADD",
      "path": "29"
    },
    "3921": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3922": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3923": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "SUB",
      "path": "29"
    },
    "3924": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3925": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3926": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x27"
    },
    "3928": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3929": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3930": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "3932": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "ADD",
      "path": "29"
    },
    "3933": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3934": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1BFF"
    },
    "3937": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x27"
    },
    "3939": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3940": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "CODECOPY",
      "path": "29"
    },
    "3941": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3943": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "ADD",
      "path": "29"
    },
    "3944": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3945": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "POP",
      "path": "29"
    },
    "3946": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "POP",
      "path": "29"
    },
    "3947": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3949": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3950": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3951": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3952": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "SUB",
      "path": "29"
    },
    "3953": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3954": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "REVERT",
      "path": "29"
    },
    "3955": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4249,
        4324
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3960": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3962": {
      "op": "SHL"
    },
    "3963": {
      "op": "SUB"
    },
    "3964": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4351,
        4368
      ],
      "op": "DUP2",
      "path": "29",
      "statement": 35
    },
    "3965": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4351,
        4368
      ],
      "op": "AND",
      "path": "29"
    },
    "3966": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4351,
        4368
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3968": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4351,
        4368
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3969": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4351,
        4368
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3970": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4351,
        4368
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3971": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4351,
        4357
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xB"
    },
    "3973": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4351,
        4368
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "3975": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4351,
        4368
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3976": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4351,
        4368
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3978": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4351,
        4368
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3979": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4351,
        4368
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "3980": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4351,
        4370
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3981": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4351,
        4370
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "3982": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4351,
        4370
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "3984": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4351,
        4370
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3985": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4351,
        4370
      ],
      "op": "ADD",
      "path": "29"
    },
    "3986": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4351,
        4370
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3987": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4351,
        4370
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3988": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4351,
        4370
      ],
      "op": "SSTORE",
      "path": "29"
    },
    "3989": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4342,
        4370
      ],
      "op": "DUP10",
      "path": "29"
    },
    "3990": {
      "branch": 88,
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4342,
        4370
      ],
      "op": "EQ",
      "path": "29"
    },
    "3991": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xFD1"
    },
    "3994": {
      "branch": 88,
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "3995": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3997": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3998": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4002": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4004": {
      "op": "SHL"
    },
    "4005": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4006": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4007": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "4009": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "ADD",
      "path": "29"
    },
    "4010": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4011": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4012": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "4014": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "ADD",
      "path": "29"
    },
    "4015": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "DUP3",
      "path": "29"
    },
    "4016": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4017": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "SUB",
      "path": "29"
    },
    "4018": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "DUP3",
      "path": "29"
    },
    "4019": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4020": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x23"
    },
    "4022": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4023": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4024": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "4026": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "ADD",
      "path": "29"
    },
    "4027": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4028": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1BDC"
    },
    "4031": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x23"
    },
    "4033": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4034": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "CODECOPY",
      "path": "29"
    },
    "4035": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "4037": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "ADD",
      "path": "29"
    },
    "4038": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4039": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "POP",
      "path": "29"
    },
    "4040": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "POP",
      "path": "29"
    },
    "4041": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "4043": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "4044": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4045": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4046": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "SUB",
      "path": "29"
    },
    "4047": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4048": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "REVERT",
      "path": "29"
    },
    "4049": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4334,
        4410
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "4050": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4435,
        4441
      ],
      "op": "DUP8",
      "path": "29",
      "statement": 36
    },
    "4051": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4428,
        4431
      ],
      "op": "TIMESTAMP",
      "path": "29"
    },
    "4052": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4428,
        4441
      ],
      "op": "GT",
      "path": "29"
    },
    "4053": {
      "branch": 89,
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4428,
        4441
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "4054": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1010"
    },
    "4057": {
      "branch": 89,
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "4058": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "4060": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "4061": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4065": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4067": {
      "op": "SHL"
    },
    "4068": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4069": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4070": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "4072": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "ADD",
      "path": "29"
    },
    "4073": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4074": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4075": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "4077": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "ADD",
      "path": "29"
    },
    "4078": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "DUP3",
      "path": "29"
    },
    "4079": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4080": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "SUB",
      "path": "29"
    },
    "4081": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "DUP3",
      "path": "29"
    },
    "4082": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4083": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x27"
    },
    "4085": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4086": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4087": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "4089": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "ADD",
      "path": "29"
    },
    "4090": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4091": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1ABE"
    },
    "4094": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x27"
    },
    "4096": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4097": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "CODECOPY",
      "path": "29"
    },
    "4098": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "4100": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "ADD",
      "path": "29"
    },
    "4101": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4102": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "POP",
      "path": "29"
    },
    "4103": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "POP",
      "path": "29"
    },
    "4104": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "4106": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "4107": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4108": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4109": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "SUB",
      "path": "29"
    },
    "4110": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4111": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "REVERT",
      "path": "29"
    },
    "4112": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4420,
        4485
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "4113": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4502,
        4533
      ],
      "op": "PUSH2",
      "path": "29",
      "statement": 37,
      "value": "0x101A"
    },
    "4116": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4512,
        4521
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4117": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4523,
        4532
      ],
      "op": "DUP12",
      "path": "29"
    },
    "4118": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4502,
        4511
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1652"
    },
    "4121": {
      "fn": "SushiToken.delegateBySig",
      "jump": "i",
      "offset": [
        4502,
        4533
      ],
      "op": "JUMP",
      "path": "29"
    },
    "4122": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4502,
        4533
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "4123": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4495,
        4533
      ],
      "op": "POP",
      "path": "29"
    },
    "4124": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4495,
        4533
      ],
      "op": "POP",
      "path": "29"
    },
    "4125": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4495,
        4533
      ],
      "op": "POP",
      "path": "29"
    },
    "4126": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        4495,
        4533
      ],
      "op": "POP",
      "path": "29"
    },
    "4127": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "4128": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "POP",
      "path": "29"
    },
    "4129": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "POP",
      "path": "29"
    },
    "4130": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "POP",
      "path": "29"
    },
    "4131": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "POP",
      "path": "29"
    },
    "4132": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "POP",
      "path": "29"
    },
    "4133": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        3400,
        4540
      ],
      "op": "POP",
      "path": "29"
    },
    "4134": {
      "fn": "SushiToken.delegateBySig",
      "jump": "o",
      "offset": [
        3400,
        4540
      ],
      "op": "JUMP",
      "path": "29"
    },
    "4135": {
      "offset": [
        156,
        179
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4136": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        156,
        179
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x1"
    },
    "4138": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        156,
        179
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "4139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4145": {
      "op": "SHL"
    },
    "4146": {
      "op": "SUB"
    },
    "4147": {
      "offset": [
        156,
        179
      ],
      "op": "AND",
      "path": "50"
    },
    "4148": {
      "fn": "SushiToken.delegateBySig",
      "offset": [
        156,
        179
      ],
      "op": "DUP2",
      "path": "50"
    },
    "4149": {
      "fn": "SushiToken.delegateBySig",
      "jump": "o",
      "offset": [
        156,
        179
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4150": {
      "fn": "ERC20.allowance",
      "offset": [
        4223,
        4372
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4155": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4157": {
      "op": "SHL"
    },
    "4158": {
      "op": "SUB"
    },
    "4159": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "SWAP2",
      "path": "24",
      "statement": 38
    },
    "4160": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4161": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "AND",
      "path": "24"
    },
    "4162": {
      "fn": "ERC20.allowance",
      "offset": [
        4312,
        4319
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4164": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4165": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4166": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4167": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4349
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "4169": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4171": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4172": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4173": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4174": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4176": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4177": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4178": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4356
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "4179": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "4180": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4181": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "4182": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "AND",
      "path": "24"
    },
    "4183": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4184": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4185": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4186": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4187": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4188": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4189": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "4190": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4191": {
      "fn": "ERC20.allowance",
      "offset": [
        4338,
        4365
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4192": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        4223,
        4372
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4193": {
      "offset": [
        1842,
        1959
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "4194": {
      "offset": [
        1888,
        1959
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF"
    },
    "4227": {
      "offset": [
        1842,
        1959
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4228": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        1842,
        1959
      ],
      "op": "JUMP",
      "path": "29"
    },
    "4229": {
      "offset": [
        1374,
        1444
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "4230": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x9"
    },
    "4232": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "4234": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4235": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4236": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4237": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "4239": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "4240": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "DUP4",
      "path": "29"
    },
    "4241": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4242": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "4244": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4245": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "DUP5",
      "path": "29"
    },
    "4246": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "4247": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4248": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4249": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4250": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4251": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "DUP3",
      "path": "29"
    },
    "4252": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4253": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4254": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "4255": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4256": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "4257": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "4259": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4260": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4261": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "ADD",
      "path": "29"
    },
    "4262": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "4263": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "4268": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4269": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4270": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "AND",
      "path": "29"
    },
    "4271": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4272": {
      "fn": "ERC20.allowance",
      "offset": [
        1374,
        1444
      ],
      "op": "DUP3",
      "path": "29"
    },
    "4273": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        1374,
        1444
      ],
      "op": "JUMP",
      "path": "29"
    },
    "4274": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4275": {
      "fn": "Owned.transferOwnership",
      "offset": [
        813,
        822
      ],
      "op": "PUSH2",
      "path": "50",
      "statement": 39,
      "value": "0x10BA"
    },
    "4278": {
      "fn": "Owned.transferOwnership",
      "offset": [
        813,
        820
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xC62"
    },
    "4281": {
      "fn": "Owned.transferOwnership",
      "jump": "i",
      "offset": [
        813,
        822
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4282": {
      "branch": 107,
      "fn": "Owned.transferOwnership",
      "offset": [
        813,
        822
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4283": {
      "fn": "Owned.transferOwnership",
      "offset": [
        805,
        823
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x10C3"
    },
    "4286": {
      "branch": 107,
      "fn": "Owned.transferOwnership",
      "offset": [
        805,
        823
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "4287": {
      "fn": "Owned.transferOwnership",
      "offset": [
        805,
        823
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "4289": {
      "fn": "Owned.transferOwnership",
      "offset": [
        805,
        823
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4290": {
      "fn": "Owned.transferOwnership",
      "offset": [
        805,
        823
      ],
      "op": "REVERT",
      "path": "50"
    },
    "4291": {
      "fn": "Owned.transferOwnership",
      "offset": [
        805,
        823
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "4292": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        841
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 40,
      "value": "0x1"
    },
    "4294": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "DUP1",
      "path": "50"
    },
    "4295": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "4296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4302": {
      "op": "SHL"
    },
    "4303": {
      "op": "SUB"
    },
    "4304": {
      "op": "NOT"
    },
    "4305": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "AND",
      "path": "50"
    },
    "4306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4310": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4312": {
      "op": "SHL"
    },
    "4313": {
      "op": "SUB"
    },
    "4314": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "4315": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4316": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "4317": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "AND",
      "path": "50"
    },
    "4318": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4319": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4320": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "4321": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "OR",
      "path": "50"
    },
    "4322": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "4323": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SSTORE",
      "path": "50"
    },
    "4324": {
      "fn": "Owned.transferOwnership",
      "jump": "o",
      "offset": [
        742,
        860
      ],
      "op": "JUMP",
      "path": "50"
    },
    "4325": {
      "fn": "Context._msgSender",
      "offset": [
        590,
        694
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4326": {
      "fn": "Context._msgSender",
      "offset": [
        677,
        687
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 41
    },
    "4327": {
      "fn": "Context._msgSender",
      "offset": [
        590,
        694
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4328": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        590,
        694
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4329": {
      "fn": "ERC20._approve",
      "offset": [
        9612,
        9952
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4334": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4336": {
      "op": "SHL"
    },
    "4337": {
      "op": "SUB"
    },
    "4338": {
      "fn": "ERC20._approve",
      "offset": [
        9713,
        9732
      ],
      "op": "DUP4",
      "path": "24",
      "statement": 42
    },
    "4339": {
      "branch": 99,
      "fn": "ERC20._approve",
      "offset": [
        9713,
        9732
      ],
      "op": "AND",
      "path": "24"
    },
    "4340": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x112E"
    },
    "4343": {
      "branch": 99,
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4344": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4346": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4347": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4351": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4353": {
      "op": "SHL"
    },
    "4354": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4355": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4356": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "4358": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "ADD",
      "path": "24"
    },
    "4359": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4360": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4361": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4363": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "ADD",
      "path": "24"
    },
    "4364": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4365": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4366": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "SUB",
      "path": "24"
    },
    "4367": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4368": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4369": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x24"
    },
    "4371": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4372": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4373": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4375": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "ADD",
      "path": "24"
    },
    "4376": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4377": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1C4B"
    },
    "4380": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x24"
    },
    "4382": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4383": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "CODECOPY",
      "path": "24"
    },
    "4384": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4386": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "ADD",
      "path": "24"
    },
    "4387": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4388": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "POP",
      "path": "24"
    },
    "4389": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "POP",
      "path": "24"
    },
    "4390": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4392": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4393": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4394": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4395": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "SUB",
      "path": "24"
    },
    "4396": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4397": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "REVERT",
      "path": "24"
    },
    "4398": {
      "fn": "ERC20._approve",
      "offset": [
        9705,
        9773
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4405": {
      "op": "SHL"
    },
    "4406": {
      "op": "SUB"
    },
    "4407": {
      "fn": "ERC20._approve",
      "offset": [
        9791,
        9812
      ],
      "op": "DUP3",
      "path": "24",
      "statement": 43
    },
    "4408": {
      "branch": 100,
      "fn": "ERC20._approve",
      "offset": [
        9791,
        9812
      ],
      "op": "AND",
      "path": "24"
    },
    "4409": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1173"
    },
    "4412": {
      "branch": 100,
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4413": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4415": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4416": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4420": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4422": {
      "op": "SHL"
    },
    "4423": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4424": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4425": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "4427": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "ADD",
      "path": "24"
    },
    "4428": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4429": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4430": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4432": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "ADD",
      "path": "24"
    },
    "4433": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4434": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4435": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "SUB",
      "path": "24"
    },
    "4436": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4437": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4438": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x22"
    },
    "4440": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4441": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4442": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4444": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "ADD",
      "path": "24"
    },
    "4445": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4446": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1AE5"
    },
    "4449": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x22"
    },
    "4451": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4452": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "CODECOPY",
      "path": "24"
    },
    "4453": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4455": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "ADD",
      "path": "24"
    },
    "4456": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4457": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "POP",
      "path": "24"
    },
    "4458": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "POP",
      "path": "24"
    },
    "4459": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4461": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4462": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4463": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4464": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "SUB",
      "path": "24"
    },
    "4465": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4466": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "REVERT",
      "path": "24"
    },
    "4467": {
      "fn": "ERC20._approve",
      "offset": [
        9783,
        9851
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4472": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4474": {
      "op": "SHL"
    },
    "4475": {
      "op": "SUB"
    },
    "4476": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "DUP1",
      "path": "24",
      "statement": 44
    },
    "4477": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "DUP5",
      "path": "24"
    },
    "4478": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "AND",
      "path": "24"
    },
    "4479": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4481": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4482": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4483": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4484": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9873
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "4486": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4488": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4489": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4490": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4491": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4493": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4494": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4495": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9880
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "4496": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "4497": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "DUP8",
      "path": "24"
    },
    "4498": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "AND",
      "path": "24"
    },
    "4499": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4500": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "DUP5",
      "path": "24"
    },
    "4501": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4502": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "4503": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4504": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4505": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4506": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4507": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4508": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9889
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "4509": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9898
      ],
      "op": "DUP6",
      "path": "24"
    },
    "4510": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9898
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4511": {
      "fn": "ERC20._approve",
      "offset": [
        9862,
        9898
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4512": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "DUP2",
      "path": "24",
      "statement": 45
    },
    "4513": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4514": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "DUP6",
      "path": "24"
    },
    "4515": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4516": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4517": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4518": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4519": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "4552": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "4553": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4554": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4555": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "SUB",
      "path": "24"
    },
    "4556": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4557": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4558": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "ADD",
      "path": "24"
    },
    "4559": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4560": {
      "fn": "ERC20._approve",
      "offset": [
        9913,
        9945
      ],
      "op": "LOG3",
      "path": "24"
    },
    "4561": {
      "fn": "ERC20._approve",
      "offset": [
        9612,
        9952
      ],
      "op": "POP",
      "path": "24"
    },
    "4562": {
      "fn": "ERC20._approve",
      "offset": [
        9612,
        9952
      ],
      "op": "POP",
      "path": "24"
    },
    "4563": {
      "fn": "ERC20._approve",
      "offset": [
        9612,
        9952
      ],
      "op": "POP",
      "path": "24"
    },
    "4564": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        9612,
        9952
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4565": {
      "fn": "ERC20._transfer",
      "offset": [
        7290,
        7820
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4570": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4572": {
      "op": "SHL"
    },
    "4573": {
      "op": "SUB"
    },
    "4574": {
      "fn": "ERC20._transfer",
      "offset": [
        7395,
        7415
      ],
      "op": "DUP4",
      "path": "24",
      "statement": 46
    },
    "4575": {
      "branch": 101,
      "fn": "ERC20._transfer",
      "offset": [
        7395,
        7415
      ],
      "op": "AND",
      "path": "24"
    },
    "4576": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x121A"
    },
    "4579": {
      "branch": 101,
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4580": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4582": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4583": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4587": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4589": {
      "op": "SHL"
    },
    "4590": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4591": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4592": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "4594": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "ADD",
      "path": "24"
    },
    "4595": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4596": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4597": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4599": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "ADD",
      "path": "24"
    },
    "4600": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4601": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4602": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "SUB",
      "path": "24"
    },
    "4603": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4604": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4605": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x25"
    },
    "4607": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4608": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4609": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4611": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "ADD",
      "path": "24"
    },
    "4612": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4613": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1C26"
    },
    "4616": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x25"
    },
    "4618": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4619": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "CODECOPY",
      "path": "24"
    },
    "4620": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4622": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "ADD",
      "path": "24"
    },
    "4623": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4624": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "POP",
      "path": "24"
    },
    "4625": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "POP",
      "path": "24"
    },
    "4626": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4628": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4629": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4630": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4631": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "SUB",
      "path": "24"
    },
    "4632": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4633": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "REVERT",
      "path": "24"
    },
    "4634": {
      "fn": "ERC20._transfer",
      "offset": [
        7387,
        7457
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4639": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4641": {
      "op": "SHL"
    },
    "4642": {
      "op": "SUB"
    },
    "4643": {
      "fn": "ERC20._transfer",
      "offset": [
        7475,
        7498
      ],
      "op": "DUP3",
      "path": "24",
      "statement": 47
    },
    "4644": {
      "branch": 102,
      "fn": "ERC20._transfer",
      "offset": [
        7475,
        7498
      ],
      "op": "AND",
      "path": "24"
    },
    "4645": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x125F"
    },
    "4648": {
      "branch": 102,
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4649": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4651": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4652": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4656": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4658": {
      "op": "SHL"
    },
    "4659": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4660": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4661": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "4663": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "ADD",
      "path": "24"
    },
    "4664": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4665": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4666": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4668": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "ADD",
      "path": "24"
    },
    "4669": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4670": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4671": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "SUB",
      "path": "24"
    },
    "4672": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4673": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4674": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x23"
    },
    "4676": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4677": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4678": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4680": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "ADD",
      "path": "24"
    },
    "4681": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4682": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1A9B"
    },
    "4685": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x23"
    },
    "4687": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4688": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "CODECOPY",
      "path": "24"
    },
    "4689": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4691": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "ADD",
      "path": "24"
    },
    "4692": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4693": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "POP",
      "path": "24"
    },
    "4694": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "POP",
      "path": "24"
    },
    "4695": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4697": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4698": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4699": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4700": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "SUB",
      "path": "24"
    },
    "4701": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4702": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "REVERT",
      "path": "24"
    },
    "4703": {
      "fn": "ERC20._transfer",
      "offset": [
        7467,
        7538
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4704": {
      "fn": "ERC20._transfer",
      "offset": [
        7549,
        7596
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 48,
      "value": "0x126A"
    },
    "4707": {
      "fn": "ERC20._transfer",
      "offset": [
        7570,
        7576
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4708": {
      "fn": "ERC20._transfer",
      "offset": [
        7578,
        7587
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4709": {
      "fn": "ERC20._transfer",
      "offset": [
        7589,
        7595
      ],
      "op": "DUP4",
      "path": "24"
    },
    "4710": {
      "fn": "ERC20._transfer",
      "offset": [
        7549,
        7569
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xC4E"
    },
    "4713": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7549,
        7596
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4714": {
      "fn": "ERC20._transfer",
      "offset": [
        7549,
        7596
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4715": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 49,
      "value": "0x12A7"
    },
    "4718": {
      "fn": "ERC20._transfer",
      "offset": [
        7649,
        7655
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4719": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4721": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4722": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4723": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x60"
    },
    "4725": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "ADD",
      "path": "24"
    },
    "4726": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4728": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4729": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4730": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x26"
    },
    "4732": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4733": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4734": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4736": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "ADD",
      "path": "24"
    },
    "4737": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1B07"
    },
    "4740": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x26"
    },
    "4742": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4743": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "CODECOPY",
      "path": "24"
    },
    "4744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4748": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4750": {
      "op": "SHL"
    },
    "4751": {
      "op": "SUB"
    },
    "4752": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "DUP7",
      "path": "24"
    },
    "4753": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "AND",
      "path": "24"
    },
    "4754": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4756": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4757": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4758": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4759": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7636
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "4761": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4763": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4764": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4766": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4767": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "4768": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4769": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7644
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4770": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4771": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7648
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1332"
    },
    "4774": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7627,
        7698
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4775": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7698
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4780": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4782": {
      "op": "SHL"
    },
    "4783": {
      "op": "SUB"
    },
    "4784": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4785": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "DUP6",
      "path": "24"
    },
    "4786": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "AND",
      "path": "24"
    },
    "4787": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4789": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4790": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4791": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4792": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7616
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "4794": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4796": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4797": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4799": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4800": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4801": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7624
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "4802": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7698
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "4803": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7698
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4804": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7698
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "4805": {
      "fn": "ERC20._transfer",
      "offset": [
        7607,
        7698
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4806": {
      "fn": "ERC20._transfer",
      "offset": [
        7731,
        7751
      ],
      "op": "SWAP1",
      "path": "24",
      "statement": 50
    },
    "4807": {
      "fn": "ERC20._transfer",
      "offset": [
        7731,
        7751
      ],
      "op": "DUP5",
      "path": "24"
    },
    "4808": {
      "fn": "ERC20._transfer",
      "offset": [
        7731,
        7751
      ],
      "op": "AND",
      "path": "24"
    },
    "4809": {
      "fn": "ERC20._transfer",
      "offset": [
        7731,
        7751
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4810": {
      "fn": "ERC20._transfer",
      "offset": [
        7731,
        7751
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4811": {
      "fn": "ERC20._transfer",
      "offset": [
        7731,
        7751
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "4812": {
      "fn": "ERC20._transfer",
      "offset": [
        7731,
        7751
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "4813": {
      "fn": "ERC20._transfer",
      "offset": [
        7731,
        7763
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x12D6"
    },
    "4816": {
      "fn": "ERC20._transfer",
      "offset": [
        7731,
        7763
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4817": {
      "fn": "ERC20._transfer",
      "offset": [
        7756,
        7762
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4818": {
      "fn": "ERC20._transfer",
      "offset": [
        7731,
        7755
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x13C9"
    },
    "4821": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7731,
        7763
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4822": {
      "fn": "ERC20._transfer",
      "offset": [
        7731,
        7763
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4827": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4829": {
      "op": "SHL"
    },
    "4830": {
      "op": "SUB"
    },
    "4831": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4832": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "DUP5",
      "path": "24"
    },
    "4833": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "AND",
      "path": "24"
    },
    "4834": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "4836": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4837": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4838": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4839": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7717
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "4841": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4843": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4844": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4845": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4846": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4848": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4849": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4850": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4851": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "4852": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7763
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "4853": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7763
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4854": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7763
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "4855": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7763
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "4856": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "DUP1",
      "path": "24",
      "statement": 51
    },
    "4857": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4858": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "DUP6",
      "path": "24"
    },
    "4859": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4860": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4861": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4862": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4863": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4864": {
      "fn": "ERC20._transfer",
      "offset": [
        7708,
        7728
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "4865": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "4866": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "DUP8",
      "path": "24"
    },
    "4867": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "AND",
      "path": "24"
    },
    "4868": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "4869": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "4902": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "4903": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "4904": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4905": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4906": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "SUB",
      "path": "24"
    },
    "4907": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "ADD",
      "path": "24"
    },
    "4908": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4909": {
      "fn": "ERC20._transfer",
      "offset": [
        7778,
        7813
      ],
      "op": "LOG3",
      "path": "24"
    },
    "4910": {
      "fn": "ERC20._transfer",
      "offset": [
        7290,
        7820
      ],
      "op": "POP",
      "path": "24"
    },
    "4911": {
      "fn": "ERC20._transfer",
      "offset": [
        7290,
        7820
      ],
      "op": "POP",
      "path": "24"
    },
    "4912": {
      "fn": "ERC20._transfer",
      "offset": [
        7290,
        7820
      ],
      "op": "POP",
      "path": "24"
    },
    "4913": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        7290,
        7820
      ],
      "op": "JUMP",
      "path": "24"
    },
    "4914": {
      "fn": "SafeMath.sub",
      "offset": [
        1746,
        1933
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4915": {
      "fn": "SafeMath.sub",
      "offset": [
        1832,
        1839
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4917": {
      "fn": "SafeMath.sub",
      "offset": [
        1867,
        1879
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 52
    },
    "4918": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4919": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4920": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "GT",
      "path": "3"
    },
    "4921": {
      "branch": 109,
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4922": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13C1"
    },
    "4925": {
      "branch": 109,
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4926": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4928": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4929": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4933": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4935": {
      "op": "SHL"
    },
    "4936": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4937": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4938": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4940": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "4941": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4942": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4943": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4945": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "4946": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4947": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4948": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SUB",
      "path": "3"
    },
    "4949": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4950": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4951": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4952": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4953": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4954": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4955": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4956": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4957": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4959": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "4960": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4961": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "3"
    },
    "4962": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4963": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4964": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4965": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4967": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "4968": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4969": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4970": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4971": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4972": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4974": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4975": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4976": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4977": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "LT",
      "path": "3"
    },
    "4978": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4979": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1386"
    },
    "4982": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4983": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4984": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4985": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "4986": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4987": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4988": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4989": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "4990": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4991": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4993": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "4994": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x136E"
    },
    "4997": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4998": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4999": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "3"
    },
    "5000": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "3"
    },
    "5001": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "3"
    },
    "5002": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "3"
    },
    "5003": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5004": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "3"
    },
    "5005": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5006": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5007": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "5008": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5009": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5011": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "AND",
      "path": "3"
    },
    "5012": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5013": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5014": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13B3"
    },
    "5017": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5018": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5019": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5020": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SUB",
      "path": "3"
    },
    "5021": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5022": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5023": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "5025": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5026": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5028": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SUB",
      "path": "3"
    },
    "5029": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "5032": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "EXP",
      "path": "3"
    },
    "5033": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SUB",
      "path": "3"
    },
    "5034": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "NOT",
      "path": "3"
    },
    "5035": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "AND",
      "path": "3"
    },
    "5036": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5037": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5038": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5040": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "3"
    },
    "5041": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5042": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "3"
    },
    "5043": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5044": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "3"
    },
    "5045": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5046": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "3"
    },
    "5047": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "3"
    },
    "5048": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "3"
    },
    "5049": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5051": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5052": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5053": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5054": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SUB",
      "path": "3"
    },
    "5055": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5056": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "REVERT",
      "path": "3"
    },
    "5057": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5058": {
      "op": "POP"
    },
    "5059": {
      "op": "POP"
    },
    "5060": {
      "op": "POP"
    },
    "5061": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5062": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SUB",
      "path": "3"
    },
    "5063": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5064": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1746,
        1933
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5065": {
      "fn": "SafeMath.add",
      "offset": [
        874,
        1050
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5066": {
      "fn": "SafeMath.add",
      "offset": [
        932,
        939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5068": {
      "fn": "SafeMath.add",
      "offset": [
        963,
        968
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5069": {
      "fn": "SafeMath.add",
      "offset": [
        963,
        968
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5070": {
      "fn": "SafeMath.add",
      "offset": [
        963,
        968
      ],
      "op": "ADD",
      "path": "3"
    },
    "5071": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 53
    },
    "5072": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5073": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "LT",
      "path": "3"
    },
    "5074": {
      "branch": 110,
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5075": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDAD"
    },
    "5078": {
      "branch": 110,
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5079": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5081": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5082": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5083": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5087": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5089": {
      "op": "SHL"
    },
    "5090": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5091": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5092": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5094": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5096": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5097": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "3"
    },
    "5098": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5099": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1B"
    },
    "5101": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "5103": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5104": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "3"
    },
    "5105": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5106": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "5139": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "5141": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5142": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "3"
    },
    "5143": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5144": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5145": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5146": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5147": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5148": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5149": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SUB",
      "path": "3"
    },
    "5150": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "5152": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "3"
    },
    "5153": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5154": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "REVERT",
      "path": "3"
    },
    "5155": {
      "fn": "ERC20._mint",
      "offset": [
        8090,
        8460
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5160": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5162": {
      "op": "SHL"
    },
    "5163": {
      "op": "SUB"
    },
    "5164": {
      "fn": "ERC20._mint",
      "offset": [
        8173,
        8194
      ],
      "op": "DUP3",
      "path": "24",
      "statement": 54
    },
    "5165": {
      "branch": 103,
      "fn": "ERC20._mint",
      "offset": [
        8173,
        8194
      ],
      "op": "AND",
      "path": "24"
    },
    "5166": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x147E"
    },
    "5169": {
      "branch": 103,
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "5170": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "5172": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5173": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5174": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5178": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5180": {
      "op": "SHL"
    },
    "5181": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5182": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5183": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "5185": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "5187": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5188": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "ADD",
      "path": "24"
    },
    "5189": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5190": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1F"
    },
    "5192": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x24"
    },
    "5194": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5195": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "ADD",
      "path": "24"
    },
    "5196": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5197": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "5230": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x44"
    },
    "5232": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5233": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "ADD",
      "path": "24"
    },
    "5234": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5235": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5236": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5237": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5238": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5239": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5240": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "SUB",
      "path": "24"
    },
    "5241": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x64"
    },
    "5243": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "ADD",
      "path": "24"
    },
    "5244": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5245": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "REVERT",
      "path": "24"
    },
    "5246": {
      "fn": "ERC20._mint",
      "offset": [
        8165,
        8230
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5247": {
      "fn": "ERC20._mint",
      "offset": [
        8241,
        8290
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 55,
      "value": "0x148A"
    },
    "5250": {
      "fn": "ERC20._mint",
      "offset": [
        8270,
        8271
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5252": {
      "fn": "ERC20._mint",
      "offset": [
        8274,
        8281
      ],
      "op": "DUP4",
      "path": "24"
    },
    "5253": {
      "fn": "ERC20._mint",
      "offset": [
        8283,
        8289
      ],
      "op": "DUP4",
      "path": "24"
    },
    "5254": {
      "fn": "ERC20._mint",
      "offset": [
        8241,
        8261
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xC4E"
    },
    "5257": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8241,
        8290
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5258": {
      "fn": "ERC20._mint",
      "offset": [
        8241,
        8290
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5259": {
      "fn": "ERC20._mint",
      "offset": [
        8316,
        8328
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 56,
      "value": "0x4"
    },
    "5261": {
      "fn": "ERC20._mint",
      "offset": [
        8316,
        8328
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5262": {
      "fn": "ERC20._mint",
      "offset": [
        8316,
        8340
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1497"
    },
    "5265": {
      "fn": "ERC20._mint",
      "offset": [
        8316,
        8340
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5266": {
      "fn": "ERC20._mint",
      "offset": [
        8333,
        8339
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5267": {
      "fn": "ERC20._mint",
      "offset": [
        8316,
        8332
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x13C9"
    },
    "5270": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8316,
        8340
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5271": {
      "fn": "ERC20._mint",
      "offset": [
        8316,
        8340
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5272": {
      "fn": "ERC20._mint",
      "offset": [
        8301,
        8313
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "5274": {
      "fn": "ERC20._mint",
      "offset": [
        8301,
        8340
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "5275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5279": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5281": {
      "op": "SHL"
    },
    "5282": {
      "op": "SUB"
    },
    "5283": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "DUP3",
      "path": "24",
      "statement": 57
    },
    "5284": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "AND",
      "path": "24"
    },
    "5285": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5287": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5288": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5289": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5290": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8380
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "5292": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "5294": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5295": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "5297": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5298": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "5299": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8389
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5300": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8401
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x14BD"
    },
    "5303": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8401
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5304": {
      "fn": "ERC20._mint",
      "offset": [
        8394,
        8400
      ],
      "op": "DUP3",
      "path": "24"
    },
    "5305": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8393
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x13C9"
    },
    "5308": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8371,
        8401
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5309": {
      "fn": "ERC20._mint",
      "offset": [
        8371,
        8401
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5314": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5316": {
      "op": "SHL"
    },
    "5317": {
      "op": "SUB"
    },
    "5318": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "DUP4",
      "path": "24"
    },
    "5319": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "AND",
      "path": "24"
    },
    "5320": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "5322": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5323": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5324": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5325": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8359
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "5327": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "5329": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5330": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5331": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5332": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "5334": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "DUP1",
      "path": "24"
    },
    "5335": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "DUP4",
      "path": "24"
    },
    "5336": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "5337": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8401
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "5338": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8401
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5339": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8401
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "5340": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8401
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "5341": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "DUP4",
      "path": "24",
      "statement": 58
    },
    "5342": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5343": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "DUP6",
      "path": "24"
    },
    "5344": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5345": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5346": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "5347": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "5348": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "5349": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "5350": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5351": {
      "fn": "ERC20._mint",
      "offset": [
        8350,
        8368
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "5352": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "5385": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "5386": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "DUP2",
      "path": "24"
    },
    "5387": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5388": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "SUB",
      "path": "24"
    },
    "5389": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5390": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "5391": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "ADD",
      "path": "24"
    },
    "5392": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5393": {
      "fn": "ERC20._mint",
      "offset": [
        8416,
        8453
      ],
      "op": "LOG3",
      "path": "24"
    },
    "5394": {
      "fn": "ERC20._mint",
      "offset": [
        8090,
        8460
      ],
      "op": "POP",
      "path": "24"
    },
    "5395": {
      "fn": "ERC20._mint",
      "offset": [
        8090,
        8460
      ],
      "op": "POP",
      "path": "24"
    },
    "5396": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        8090,
        8460
      ],
      "op": "JUMP",
      "path": "24"
    },
    "5397": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7063,
        7992
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "5398": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7168,
        7174
      ],
      "op": "DUP2",
      "path": "29"
    },
    "5399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5405": {
      "op": "SHL"
    },
    "5406": {
      "op": "SUB"
    },
    "5407": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7158,
        7174
      ],
      "op": "AND",
      "path": "29"
    },
    "5408": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7158,
        7164
      ],
      "op": "DUP4",
      "path": "29"
    },
    "5409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5413": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5415": {
      "op": "SHL"
    },
    "5416": {
      "op": "SUB"
    },
    "5417": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7158,
        7174
      ],
      "op": "AND",
      "path": "29"
    },
    "5418": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7158,
        7174
      ],
      "op": "EQ",
      "path": "29"
    },
    "5419": {
      "branch": 90,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7158,
        7174
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "5420": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7158,
        7188
      ],
      "op": "DUP1",
      "path": "29"
    },
    "5421": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7158,
        7188
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "5422": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7158,
        7188
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1537"
    },
    "5425": {
      "branch": 90,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7158,
        7188
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "5426": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7158,
        7188
      ],
      "op": "POP",
      "path": "29"
    },
    "5427": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7187,
        7188
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "5429": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7178,
        7184
      ],
      "op": "DUP2",
      "path": "29"
    },
    "5430": {
      "branch": 91,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7178,
        7188
      ],
      "op": "GT",
      "path": "29"
    },
    "5431": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7158,
        7188
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "5432": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7154,
        7986
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "5433": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7154,
        7986
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xC4E"
    },
    "5436": {
      "branch": 91,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7154,
        7986
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "5437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5443": {
      "op": "SHL"
    },
    "5444": {
      "op": "SUB"
    },
    "5445": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7208,
        7228
      ],
      "op": "DUP4",
      "path": "29"
    },
    "5446": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7208,
        7228
      ],
      "op": "AND",
      "path": "29"
    },
    "5447": {
      "branch": 92,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7208,
        7228
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "5448": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7204,
        7583
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x15C9"
    },
    "5451": {
      "branch": 92,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7204,
        7583
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "5452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5456": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5458": {
      "op": "SHL"
    },
    "5459": {
      "op": "SUB"
    },
    "5460": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7314,
        7336
      ],
      "op": "DUP4",
      "path": "29"
    },
    "5461": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7314,
        7336
      ],
      "op": "AND",
      "path": "29"
    },
    "5462": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7295,
        7311
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "5464": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7314,
        7336
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "5465": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7314,
        7336
      ],
      "op": "DUP2",
      "path": "29"
    },
    "5466": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7314,
        7336
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "5467": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7314,
        7328
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xA"
    },
    "5469": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7314,
        7336
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "5471": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7314,
        7336
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "5472": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7314,
        7336
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "5474": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7314,
        7336
      ],
      "op": "DUP2",
      "path": "29"
    },
    "5475": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7314,
        7336
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "5476": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7314,
        7336
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "5477": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7314,
        7336
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "5482": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7314,
        7336
      ],
      "op": "AND",
      "path": "29"
    },
    "5483": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7314,
        7336
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "5484": {
      "branch": 93,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7374,
        7387
      ],
      "op": "DUP2",
      "path": "29"
    },
    "5485": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7374,
        7434
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1577"
    },
    "5488": {
      "branch": 93,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7374,
        7434
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "5489": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7433,
        7434
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "5491": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7374,
        7434
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x15A9"
    },
    "5494": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7374,
        7434
      ],
      "op": "JUMP",
      "path": "29"
    },
    "5495": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7374,
        7434
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "5496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5500": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5502": {
      "op": "SHL"
    },
    "5503": {
      "op": "SUB"
    },
    "5504": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7390,
        7409
      ],
      "op": "DUP6",
      "path": "29"
    },
    "5505": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7390,
        7409
      ],
      "op": "AND",
      "path": "29"
    },
    "5506": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7390,
        7409
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "5508": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7390,
        7409
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "5509": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7390,
        7409
      ],
      "op": "DUP2",
      "path": "29"
    },
    "5510": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7390,
        7409
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "5511": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7390,
        7401
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x9"
    },
    "5513": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7390,
        7409
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "5515": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7390,
        7409
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "5516": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7390,
        7409
      ],
      "op": "DUP2",
      "path": "29"
    },
    "5517": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7390,
        7409
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "5518": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7390,
        7409
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "5520": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7390,
        7409
      ],
      "op": "DUP1",
      "path": "29"
    },
    "5521": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7390,
        7409
      ],
      "op": "DUP4",
      "path": "29"
    },
    "5522": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7390,
        7409
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "5523": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7390,
        7424
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "5528": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5530": {
      "op": "NOT"
    },
    "5531": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7410,
        7423
      ],
      "op": "DUP8",
      "path": "29"
    },
    "5532": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7410,
        7423
      ],
      "op": "ADD",
      "path": "29"
    },
    "5533": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7390,
        7424
      ],
      "op": "AND",
      "path": "29"
    },
    "5534": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7390,
        7424
      ],
      "op": "DUP5",
      "path": "29"
    },
    "5535": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7390,
        7424
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "5536": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7390,
        7424
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "5537": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7390,
        7424
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "5538": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7390,
        7424
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "5539": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7390,
        7424
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "5540": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7390,
        7424
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "5541": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7422,
        7423
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "5543": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7390,
        7430
      ],
      "op": "ADD",
      "path": "29"
    },
    "5544": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7390,
        7430
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "5545": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7374,
        7434
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "5546": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7354,
        7434
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "5547": {
      "op": "POP"
    },
    "5548": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7452,
        7469
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "5550": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7472,
        7493
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x15B7"
    },
    "5553": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7354,
        7434
      ],
      "op": "DUP3",
      "path": "29"
    },
    "5554": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7486,
        7492
      ],
      "op": "DUP6",
      "path": "29"
    },
    "5555": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7472,
        7485
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x17EB"
    },
    "5558": {
      "fn": "SushiToken._moveDelegates",
      "jump": "i",
      "offset": [
        7472,
        7493
      ],
      "op": "JUMP",
      "path": "29"
    },
    "5559": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7472,
        7493
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "5560": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7452,
        7493
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "5561": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7452,
        7493
      ],
      "op": "POP",
      "path": "29"
    },
    "5562": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7511,
        7568
      ],
      "op": "PUSH2",
      "path": "29",
      "statement": 59,
      "value": "0x15C5"
    },
    "5565": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7528,
        7534
      ],
      "op": "DUP7",
      "path": "29"
    },
    "5566": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7536,
        7545
      ],
      "op": "DUP5",
      "path": "29"
    },
    "5567": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7547,
        7556
      ],
      "op": "DUP5",
      "path": "29"
    },
    "5568": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7558,
        7567
      ],
      "op": "DUP5",
      "path": "29"
    },
    "5569": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7511,
        7527
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x182D"
    },
    "5572": {
      "fn": "SushiToken._moveDelegates",
      "jump": "i",
      "offset": [
        7511,
        7568
      ],
      "op": "JUMP",
      "path": "29"
    },
    "5573": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7511,
        7568
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "5574": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7204,
        7583
      ],
      "op": "POP",
      "path": "29"
    },
    "5575": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7204,
        7583
      ],
      "op": "POP",
      "path": "29"
    },
    "5576": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7204,
        7583
      ],
      "op": "POP",
      "path": "29"
    },
    "5577": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7204,
        7583
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "5578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5582": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5584": {
      "op": "SHL"
    },
    "5585": {
      "op": "SUB"
    },
    "5586": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7601,
        7621
      ],
      "op": "DUP3",
      "path": "29"
    },
    "5587": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7601,
        7621
      ],
      "op": "AND",
      "path": "29"
    },
    "5588": {
      "branch": 94,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7601,
        7621
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "5589": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7597,
        7976
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xC4E"
    },
    "5592": {
      "branch": 94,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7597,
        7976
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "5593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5597": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5599": {
      "op": "SHL"
    },
    "5600": {
      "op": "SUB"
    },
    "5601": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7707,
        7729
      ],
      "op": "DUP3",
      "path": "29"
    },
    "5602": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7707,
        7729
      ],
      "op": "AND",
      "path": "29"
    },
    "5603": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7688,
        7704
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "5605": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7707,
        7729
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "5606": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7707,
        7729
      ],
      "op": "DUP2",
      "path": "29"
    },
    "5607": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7707,
        7729
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "5608": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7707,
        7721
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xA"
    },
    "5610": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7707,
        7729
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "5612": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7707,
        7729
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "5613": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7707,
        7729
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "5615": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7707,
        7729
      ],
      "op": "DUP2",
      "path": "29"
    },
    "5616": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7707,
        7729
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "5617": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7707,
        7729
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "5618": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7707,
        7729
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "5623": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7707,
        7729
      ],
      "op": "AND",
      "path": "29"
    },
    "5624": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7707,
        7729
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "5625": {
      "branch": 95,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7767,
        7780
      ],
      "op": "DUP2",
      "path": "29"
    },
    "5626": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7767,
        7827
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1604"
    },
    "5629": {
      "branch": 95,
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7767,
        7827
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "5630": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7826,
        7827
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "5632": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7767,
        7827
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1636"
    },
    "5635": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7767,
        7827
      ],
      "op": "JUMP",
      "path": "29"
    },
    "5636": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7767,
        7827
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "5637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5641": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5643": {
      "op": "SHL"
    },
    "5644": {
      "op": "SUB"
    },
    "5645": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7783,
        7802
      ],
      "op": "DUP5",
      "path": "29"
    },
    "5646": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7783,
        7802
      ],
      "op": "AND",
      "path": "29"
    },
    "5647": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7783,
        7802
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "5649": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7783,
        7802
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "5650": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7783,
        7802
      ],
      "op": "DUP2",
      "path": "29"
    },
    "5651": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7783,
        7802
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "5652": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7783,
        7794
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x9"
    },
    "5654": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7783,
        7802
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "5656": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7783,
        7802
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "5657": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7783,
        7802
      ],
      "op": "DUP2",
      "path": "29"
    },
    "5658": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7783,
        7802
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "5659": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7783,
        7802
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "5661": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7783,
        7802
      ],
      "op": "DUP1",
      "path": "29"
    },
    "5662": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7783,
        7802
      ],
      "op": "DUP4",
      "path": "29"
    },
    "5663": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7783,
        7802
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "5664": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7783,
        7817
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "5669": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5671": {
      "op": "NOT"
    },
    "5672": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7803,
        7816
      ],
      "op": "DUP8",
      "path": "29"
    },
    "5673": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7803,
        7816
      ],
      "op": "ADD",
      "path": "29"
    },
    "5674": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7783,
        7817
      ],
      "op": "AND",
      "path": "29"
    },
    "5675": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7783,
        7817
      ],
      "op": "DUP5",
      "path": "29"
    },
    "5676": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7783,
        7817
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "5677": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7783,
        7817
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "5678": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7783,
        7817
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "5679": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7783,
        7817
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "5680": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7783,
        7817
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "5681": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7783,
        7817
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "5682": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7815,
        7816
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "5684": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7783,
        7823
      ],
      "op": "ADD",
      "path": "29"
    },
    "5685": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7783,
        7823
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "5686": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7767,
        7827
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "5687": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7747,
        7827
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "5688": {
      "op": "POP"
    },
    "5689": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7845,
        7862
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "5691": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7865,
        7886
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1644"
    },
    "5694": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7747,
        7827
      ],
      "op": "DUP3",
      "path": "29"
    },
    "5695": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7879,
        7885
      ],
      "op": "DUP6",
      "path": "29"
    },
    "5696": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7865,
        7878
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x13C9"
    },
    "5699": {
      "fn": "SushiToken._moveDelegates",
      "jump": "i",
      "offset": [
        7865,
        7886
      ],
      "op": "JUMP",
      "path": "29"
    },
    "5700": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7865,
        7886
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "5701": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7845,
        7886
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "5702": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7845,
        7886
      ],
      "op": "POP",
      "path": "29"
    },
    "5703": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7904,
        7961
      ],
      "op": "PUSH2",
      "path": "29",
      "statement": 60,
      "value": "0x101F"
    },
    "5706": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7921,
        7927
      ],
      "op": "DUP6",
      "path": "29"
    },
    "5707": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7929,
        7938
      ],
      "op": "DUP5",
      "path": "29"
    },
    "5708": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7940,
        7949
      ],
      "op": "DUP5",
      "path": "29"
    },
    "5709": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7951,
        7960
      ],
      "op": "DUP5",
      "path": "29"
    },
    "5710": {
      "fn": "SushiToken._moveDelegates",
      "offset": [
        7904,
        7920
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x182D"
    },
    "5713": {
      "fn": "SushiToken._moveDelegates",
      "jump": "i",
      "offset": [
        7904,
        7961
      ],
      "op": "JUMP",
      "path": "29"
    },
    "5714": {
      "fn": "SushiToken._delegate",
      "offset": [
        6628,
        7057
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "5715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5719": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5721": {
      "op": "SHL"
    },
    "5722": {
      "op": "SUB"
    },
    "5723": {
      "fn": "SushiToken._delegate",
      "offset": [
        6742,
        6763
      ],
      "op": "DUP1",
      "path": "29"
    },
    "5724": {
      "fn": "SushiToken._delegate",
      "offset": [
        6742,
        6763
      ],
      "op": "DUP4",
      "path": "29"
    },
    "5725": {
      "fn": "SushiToken._delegate",
      "offset": [
        6742,
        6763
      ],
      "op": "AND",
      "path": "29"
    },
    "5726": {
      "fn": "SushiToken._delegate",
      "offset": [
        6716,
        6739
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "5728": {
      "fn": "SushiToken._delegate",
      "offset": [
        6742,
        6763
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "5729": {
      "fn": "SushiToken._delegate",
      "offset": [
        6742,
        6763
      ],
      "op": "DUP2",
      "path": "29"
    },
    "5730": {
      "fn": "SushiToken._delegate",
      "offset": [
        6742,
        6763
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "5731": {
      "fn": "SushiToken._delegate",
      "offset": [
        6742,
        6752
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x8"
    },
    "5733": {
      "fn": "SushiToken._delegate",
      "offset": [
        6742,
        6763
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "5735": {
      "fn": "SushiToken._delegate",
      "offset": [
        6742,
        6763
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "5736": {
      "fn": "SushiToken._delegate",
      "offset": [
        6742,
        6763
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "5738": {
      "fn": "SushiToken._delegate",
      "offset": [
        6742,
        6763
      ],
      "op": "DUP2",
      "path": "29"
    },
    "5739": {
      "fn": "SushiToken._delegate",
      "offset": [
        6742,
        6763
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "5740": {
      "fn": "SushiToken._delegate",
      "offset": [
        6742,
        6763
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "5741": {
      "fn": "SushiToken._delegate",
      "offset": [
        6742,
        6763
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "5742": {
      "fn": "SushiToken._delegate",
      "offset": [
        6742,
        6763
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "5743": {
      "fn": "SushiToken._delegate",
      "offset": [
        6742,
        6763
      ],
      "op": "AND",
      "path": "29"
    },
    "5744": {
      "fn": "SushiToken._delegate",
      "offset": [
        6742,
        6763
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "5745": {
      "fn": "SushiToken._delegate",
      "offset": [
        6800,
        6820
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1679"
    },
    "5748": {
      "fn": "SushiToken._delegate",
      "offset": [
        6753,
        6762
      ],
      "op": "DUP5",
      "path": "29"
    },
    "5749": {
      "fn": "SushiToken._delegate",
      "offset": [
        6800,
        6809
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x98B"
    },
    "5752": {
      "fn": "SushiToken._delegate",
      "jump": "i",
      "offset": [
        6800,
        6820
      ],
      "op": "JUMP",
      "path": "29"
    },
    "5753": {
      "fn": "SushiToken._delegate",
      "offset": [
        6800,
        6820
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "5754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5758": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5760": {
      "op": "SHL"
    },
    "5761": {
      "op": "SUB"
    },
    "5762": {
      "fn": "SushiToken._delegate",
      "offset": [
        6876,
        6897
      ],
      "op": "DUP6",
      "path": "29",
      "statement": 61
    },
    "5763": {
      "fn": "SushiToken._delegate",
      "offset": [
        6876,
        6897
      ],
      "op": "DUP2",
      "path": "29"
    },
    "5764": {
      "fn": "SushiToken._delegate",
      "offset": [
        6876,
        6897
      ],
      "op": "AND",
      "path": "29"
    },
    "5765": {
      "fn": "SushiToken._delegate",
      "offset": [
        6876,
        6897
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "5767": {
      "fn": "SushiToken._delegate",
      "offset": [
        6876,
        6897
      ],
      "op": "DUP2",
      "path": "29"
    },
    "5768": {
      "fn": "SushiToken._delegate",
      "offset": [
        6876,
        6897
      ],
      "op": "DUP2",
      "path": "29"
    },
    "5769": {
      "fn": "SushiToken._delegate",
      "offset": [
        6876,
        6897
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "5770": {
      "fn": "SushiToken._delegate",
      "offset": [
        6876,
        6886
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x8"
    },
    "5772": {
      "fn": "SushiToken._delegate",
      "offset": [
        6876,
        6897
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "5774": {
      "fn": "SushiToken._delegate",
      "offset": [
        6876,
        6897
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "5775": {
      "fn": "SushiToken._delegate",
      "offset": [
        6876,
        6897
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "5777": {
      "fn": "SushiToken._delegate",
      "offset": [
        6876,
        6897
      ],
      "op": "DUP1",
      "path": "29"
    },
    "5778": {
      "fn": "SushiToken._delegate",
      "offset": [
        6876,
        6897
      ],
      "op": "DUP3",
      "path": "29"
    },
    "5779": {
      "fn": "SushiToken._delegate",
      "offset": [
        6876,
        6897
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "5780": {
      "fn": "SushiToken._delegate",
      "offset": [
        6876,
        6909
      ],
      "op": "DUP1",
      "path": "29"
    },
    "5781": {
      "fn": "SushiToken._delegate",
      "offset": [
        6876,
        6909
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "5782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5786": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5788": {
      "op": "SHL"
    },
    "5789": {
      "op": "SUB"
    },
    "5790": {
      "op": "NOT"
    },
    "5791": {
      "fn": "SushiToken._delegate",
      "offset": [
        6876,
        6909
      ],
      "op": "AND",
      "path": "29"
    },
    "5792": {
      "fn": "SushiToken._delegate",
      "offset": [
        6876,
        6909
      ],
      "op": "DUP10",
      "path": "29"
    },
    "5793": {
      "fn": "SushiToken._delegate",
      "offset": [
        6876,
        6909
      ],
      "op": "DUP7",
      "path": "29"
    },
    "5794": {
      "fn": "SushiToken._delegate",
      "offset": [
        6876,
        6909
      ],
      "op": "AND",
      "path": "29"
    },
    "5795": {
      "fn": "SushiToken._delegate",
      "offset": [
        6876,
        6909
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "5796": {
      "fn": "SushiToken._delegate",
      "offset": [
        6876,
        6909
      ],
      "op": "DUP2",
      "path": "29"
    },
    "5797": {
      "fn": "SushiToken._delegate",
      "offset": [
        6876,
        6909
      ],
      "op": "OR",
      "path": "29"
    },
    "5798": {
      "fn": "SushiToken._delegate",
      "offset": [
        6876,
        6909
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "5799": {
      "fn": "SushiToken._delegate",
      "offset": [
        6876,
        6909
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "5800": {
      "fn": "SushiToken._delegate",
      "offset": [
        6876,
        6909
      ],
      "op": "SSTORE",
      "path": "29"
    },
    "5801": {
      "fn": "SushiToken._delegate",
      "offset": [
        6925,
        6979
      ],
      "op": "SWAP1",
      "path": "29",
      "statement": 62
    },
    "5802": {
      "fn": "SushiToken._delegate",
      "offset": [
        6925,
        6979
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "5803": {
      "fn": "SushiToken._delegate",
      "offset": [
        6773,
        6820
      ],
      "op": "SWAP5",
      "path": "29"
    },
    "5804": {
      "fn": "SushiToken._delegate",
      "offset": [
        6773,
        6820
      ],
      "op": "SWAP6",
      "path": "29"
    },
    "5805": {
      "op": "POP"
    },
    "5806": {
      "fn": "SushiToken._delegate",
      "offset": [
        6876,
        6909
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "5807": {
      "fn": "SushiToken._delegate",
      "offset": [
        6925,
        6979
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "5808": {
      "fn": "SushiToken._delegate",
      "offset": [
        6925,
        6979
      ],
      "op": "DUP7",
      "path": "29"
    },
    "5809": {
      "fn": "SushiToken._delegate",
      "offset": [
        6925,
        6979
      ],
      "op": "AND",
      "path": "29"
    },
    "5810": {
      "fn": "SushiToken._delegate",
      "offset": [
        6925,
        6979
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "5811": {
      "fn": "SushiToken._delegate",
      "offset": [
        6925,
        6979
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F"
    },
    "5844": {
      "fn": "SushiToken._delegate",
      "offset": [
        6925,
        6979
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "5845": {
      "fn": "SushiToken._delegate",
      "offset": [
        6876,
        6897
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "5846": {
      "fn": "SushiToken._delegate",
      "offset": [
        6925,
        6979
      ],
      "op": "LOG4",
      "path": "29"
    },
    "5847": {
      "fn": "SushiToken._delegate",
      "offset": [
        6990,
        7050
      ],
      "op": "PUSH2",
      "path": "29",
      "statement": 63,
      "value": "0x16E1"
    },
    "5850": {
      "fn": "SushiToken._delegate",
      "offset": [
        7005,
        7020
      ],
      "op": "DUP3",
      "path": "29"
    },
    "5851": {
      "fn": "SushiToken._delegate",
      "offset": [
        7022,
        7031
      ],
      "op": "DUP5",
      "path": "29"
    },
    "5852": {
      "fn": "SushiToken._delegate",
      "offset": [
        7033,
        7049
      ],
      "op": "DUP4",
      "path": "29"
    },
    "5853": {
      "fn": "SushiToken._delegate",
      "offset": [
        6990,
        7004
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1515"
    },
    "5856": {
      "fn": "SushiToken._delegate",
      "jump": "i",
      "offset": [
        6990,
        7050
      ],
      "op": "JUMP",
      "path": "29"
    },
    "5857": {
      "fn": "SushiToken._delegate",
      "offset": [
        6990,
        7050
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "5858": {
      "fn": "SushiToken._delegate",
      "offset": [
        6628,
        7057
      ],
      "op": "POP",
      "path": "29"
    },
    "5859": {
      "fn": "SushiToken._delegate",
      "offset": [
        6628,
        7057
      ],
      "op": "POP",
      "path": "29"
    },
    "5860": {
      "fn": "SushiToken._delegate",
      "offset": [
        6628,
        7057
      ],
      "op": "POP",
      "path": "29"
    },
    "5861": {
      "fn": "SushiToken._delegate",
      "offset": [
        6628,
        7057
      ],
      "op": "POP",
      "path": "29"
    },
    "5862": {
      "fn": "SushiToken._delegate",
      "jump": "o",
      "offset": [
        6628,
        7057
      ],
      "op": "JUMP",
      "path": "29"
    },
    "5863": {
      "fn": "Owned._initOwned",
      "offset": [
        349,
        558
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5864": {
      "fn": "Owned._initOwned",
      "offset": [
        413,
        424
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 64,
      "value": "0x0"
    },
    "5866": {
      "fn": "Owned._initOwned",
      "offset": [
        413,
        424
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "5867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5869": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5871": {
      "op": "SHL"
    },
    "5872": {
      "fn": "Owned._initOwned",
      "offset": [
        413,
        424
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5873": {
      "fn": "Owned._initOwned",
      "offset": [
        413,
        424
      ],
      "op": "DIV",
      "path": "50"
    },
    "5874": {
      "fn": "Owned._initOwned",
      "offset": [
        413,
        424
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0xFF"
    },
    "5876": {
      "fn": "Owned._initOwned",
      "offset": [
        413,
        424
      ],
      "op": "AND",
      "path": "50"
    },
    "5877": {
      "branch": 108,
      "fn": "Owned._initOwned",
      "offset": [
        412,
        424
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "5878": {
      "fn": "Owned._initOwned",
      "offset": [
        404,
        425
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x16FE"
    },
    "5881": {
      "branch": 108,
      "fn": "Owned._initOwned",
      "offset": [
        404,
        425
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "5882": {
      "fn": "Owned._initOwned",
      "offset": [
        404,
        425
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "5884": {
      "fn": "Owned._initOwned",
      "offset": [
        404,
        425
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5885": {
      "fn": "Owned._initOwned",
      "offset": [
        404,
        425
      ],
      "op": "REVERT",
      "path": "50"
    },
    "5886": {
      "fn": "Owned._initOwned",
      "offset": [
        404,
        425
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "5887": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        441
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 65,
      "value": "0x0"
    },
    "5889": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5890": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "SLOAD",
      "path": "50"
    },
    "5891": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5893": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5895": {
      "op": "SHL"
    },
    "5896": {
      "op": "NOT"
    },
    "5897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5901": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5903": {
      "op": "SHL"
    },
    "5904": {
      "op": "SUB"
    },
    "5905": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5906": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "DUP6",
      "path": "50"
    },
    "5907": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "AND",
      "path": "50"
    },
    "5908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5914": {
      "op": "SHL"
    },
    "5915": {
      "op": "SUB"
    },
    "5916": {
      "op": "NOT"
    },
    "5917": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5918": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "5919": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "AND",
      "path": "50"
    },
    "5920": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5921": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5922": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "5923": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "OR",
      "path": "50"
    },
    "5924": {
      "fn": "Owned._initOwned",
      "offset": [
        478,
        496
      ],
      "op": "AND",
      "path": "50",
      "statement": 66
    },
    "5925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5929": {
      "op": "SHL"
    },
    "5930": {
      "fn": "Owned._initOwned",
      "offset": [
        478,
        496
      ],
      "op": "OR",
      "path": "50"
    },
    "5931": {
      "fn": "Owned._initOwned",
      "offset": [
        478,
        496
      ],
      "op": "DUP1",
      "path": "50"
    },
    "5932": {
      "fn": "Owned._initOwned",
      "offset": [
        478,
        496
      ],
      "op": "DUP4",
      "path": "50"
    },
    "5933": {
      "fn": "Owned._initOwned",
      "offset": [
        478,
        496
      ],
      "op": "SSTORE",
      "path": "50"
    },
    "5934": {
      "fn": "Owned._initOwned",
      "offset": [
        511,
        551
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 67,
      "value": "0x40"
    },
    "5936": {
      "fn": "Owned._initOwned",
      "offset": [
        511,
        551
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "5937": {
      "fn": "Owned._initOwned",
      "offset": [
        544,
        550
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5938": {
      "fn": "Owned._initOwned",
      "offset": [
        544,
        550
      ],
      "op": "AND",
      "path": "50"
    },
    "5939": {
      "fn": "Owned._initOwned",
      "offset": [
        544,
        550
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "5940": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        441
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5941": {
      "fn": "Owned._initOwned",
      "offset": [
        511,
        551
      ],
      "op": "PUSH32",
      "path": "50",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "5974": {
      "fn": "Owned._initOwned",
      "offset": [
        511,
        551
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5975": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        441
      ],
      "op": "DUP3",
      "path": "50"
    },
    "5976": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        441
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "5977": {
      "fn": "Owned._initOwned",
      "offset": [
        511,
        551
      ],
      "op": "LOG3",
      "path": "50"
    },
    "5978": {
      "fn": "Owned._initOwned",
      "offset": [
        349,
        558
      ],
      "op": "POP",
      "path": "50"
    },
    "5979": {
      "fn": "Owned._initOwned",
      "jump": "o",
      "offset": [
        349,
        558
      ],
      "op": "JUMP",
      "path": "50"
    },
    "5980": {
      "fn": "ERC20._initERC20",
      "offset": [
        2125,
        2382
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "5981": {
      "fn": "ERC20._initERC20",
      "offset": [
        2215,
        2227
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 68,
      "value": "0x7"
    },
    "5983": {
      "fn": "ERC20._initERC20",
      "offset": [
        2215,
        2227
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "5984": {
      "fn": "ERC20._initERC20",
      "offset": [
        2215,
        2227
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x100"
    },
    "5987": {
      "fn": "ERC20._initERC20",
      "offset": [
        2215,
        2227
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "5988": {
      "fn": "ERC20._initERC20",
      "offset": [
        2215,
        2227
      ],
      "op": "DIV",
      "path": "24"
    },
    "5989": {
      "fn": "ERC20._initERC20",
      "offset": [
        2215,
        2227
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xFF"
    },
    "5991": {
      "fn": "ERC20._initERC20",
      "offset": [
        2215,
        2227
      ],
      "op": "AND",
      "path": "24"
    },
    "5992": {
      "branch": 104,
      "fn": "ERC20._initERC20",
      "offset": [
        2214,
        2227
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "5993": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x17A3"
    },
    "5996": {
      "branch": 104,
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "5997": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "5999": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6000": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6004": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6006": {
      "op": "SHL"
    },
    "6007": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6008": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6009": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "6011": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "ADD",
      "path": "24"
    },
    "6012": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6013": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6014": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6016": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "ADD",
      "path": "24"
    },
    "6017": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6018": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6019": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "SUB",
      "path": "24"
    },
    "6020": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "DUP3",
      "path": "24"
    },
    "6021": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6022": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2A"
    },
    "6024": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "DUP2",
      "path": "24"
    },
    "6025": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "6026": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6028": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "ADD",
      "path": "24"
    },
    "6029": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6030": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1B2D"
    },
    "6033": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2A"
    },
    "6035": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6036": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "CODECOPY",
      "path": "24"
    },
    "6037": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6039": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "ADD",
      "path": "24"
    },
    "6040": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6041": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "POP",
      "path": "24"
    },
    "6042": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "POP",
      "path": "24"
    },
    "6043": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "6045": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6046": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6047": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6048": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "SUB",
      "path": "24"
    },
    "6049": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6050": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "REVERT",
      "path": "24"
    },
    "6051": {
      "fn": "ERC20._initERC20",
      "offset": [
        2206,
        2274
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6052": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2296
      ],
      "op": "DUP2",
      "path": "24",
      "statement": 69
    },
    "6053": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2296
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6054": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2296
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x17B6"
    },
    "6057": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2296
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6058": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2289
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x5"
    },
    "6060": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2289
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6061": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2296
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6063": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2296
      ],
      "op": "DUP6",
      "path": "24"
    },
    "6064": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2296
      ],
      "op": "ADD",
      "path": "24"
    },
    "6065": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2296
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6066": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2296
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1A07"
    },
    "6069": {
      "fn": "ERC20._initERC20",
      "jump": "i",
      "offset": [
        2284,
        2296
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6070": {
      "fn": "ERC20._initERC20",
      "offset": [
        2284,
        2296
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6071": {
      "op": "POP"
    },
    "6072": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2322
      ],
      "op": "DUP1",
      "path": "24",
      "statement": 70
    },
    "6073": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2322
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "6074": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2322
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x17CA"
    },
    "6077": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2322
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6078": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2313
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6"
    },
    "6080": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2313
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6081": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2322
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "6083": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2322
      ],
      "op": "DUP5",
      "path": "24"
    },
    "6084": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2322
      ],
      "op": "ADD",
      "path": "24"
    },
    "6085": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2322
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6086": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2322
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1A07"
    },
    "6089": {
      "fn": "ERC20._initERC20",
      "jump": "i",
      "offset": [
        2306,
        2322
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6090": {
      "fn": "ERC20._initERC20",
      "offset": [
        2306,
        2322
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "6091": {
      "op": "POP"
    },
    "6092": {
      "op": "POP"
    },
    "6093": {
      "fn": "ERC20._initERC20",
      "offset": [
        2332,
        2341
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 71,
      "value": "0x7"
    },
    "6095": {
      "fn": "ERC20._initERC20",
      "offset": [
        2332,
        2346
      ],
      "op": "DUP1",
      "path": "24"
    },
    "6096": {
      "fn": "ERC20._initERC20",
      "offset": [
        2332,
        2346
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "6097": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "6100": {
      "op": "NOT"
    },
    "6101": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6103": {
      "op": "NOT"
    },
    "6104": {
      "fn": "ERC20._initERC20",
      "offset": [
        2332,
        2346
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6105": {
      "fn": "ERC20._initERC20",
      "offset": [
        2332,
        2346
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "6106": {
      "fn": "ERC20._initERC20",
      "offset": [
        2332,
        2346
      ],
      "op": "AND",
      "path": "24"
    },
    "6107": {
      "fn": "ERC20._initERC20",
      "offset": [
        2344,
        2346
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x12"
    },
    "6109": {
      "fn": "ERC20._initERC20",
      "offset": [
        2332,
        2346
      ],
      "op": "OR",
      "path": "24"
    },
    "6110": {
      "fn": "ERC20._initERC20",
      "offset": [
        2356,
        2375
      ],
      "op": "AND",
      "path": "24",
      "statement": 72
    },
    "6111": {
      "fn": "ERC20._initERC20",
      "offset": [
        2332,
        2346
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x100"
    },
    "6114": {
      "fn": "ERC20._initERC20",
      "offset": [
        2356,
        2375
      ],
      "op": "OR",
      "path": "24"
    },
    "6115": {
      "fn": "ERC20._initERC20",
      "offset": [
        2356,
        2375
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "6116": {
      "fn": "ERC20._initERC20",
      "offset": [
        2356,
        2375
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "6117": {
      "op": "POP"
    },
    "6118": {
      "fn": "ERC20._initERC20",
      "jump": "o",
      "offset": [
        2125,
        2382
      ],
      "op": "JUMP",
      "path": "24"
    },
    "6119": {
      "fn": "SushiToken.getChainId",
      "offset": [
        8855,
        9004
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "6120": {
      "fn": "SushiToken.getChainId",
      "offset": [
        8963,
        8972
      ],
      "op": "CHAINID",
      "path": "29"
    },
    "6121": {
      "fn": "SushiToken.getChainId",
      "offset": [
        8855,
        9004
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "6122": {
      "fn": "SushiToken.getChainId",
      "jump": "o",
      "offset": [
        8855,
        9004
      ],
      "op": "JUMP",
      "path": "29"
    },
    "6123": {
      "fn": "SafeMath.sub",
      "offset": [
        1321,
        1455
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6124": {
      "fn": "SafeMath.sub",
      "offset": [
        1379,
        1386
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6126": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 73,
      "value": "0xDAD"
    },
    "6129": {
      "fn": "SafeMath.sub",
      "offset": [
        1409,
        1410
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6130": {
      "fn": "SafeMath.sub",
      "offset": [
        1412,
        1413
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6131": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6133": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6134": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6135": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6137": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "ADD",
      "path": "3"
    },
    "6138": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6140": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6141": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6142": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1E"
    },
    "6144": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6145": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6146": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6148": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "ADD",
      "path": "3"
    },
    "6149": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "6182": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6183": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6184": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "POP",
      "path": "3"
    },
    "6185": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1408
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1332"
    },
    "6188": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        1405,
        1448
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6189": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        7998,
        8685
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "6190": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8169,
        8187
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "6192": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8190,
        8267
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1851"
    },
    "6195": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8197,
        8209
      ],
      "op": "NUMBER",
      "path": "29"
    },
    "6196": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8190,
        8267
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "6198": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8190,
        8267
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "6199": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8190,
        8267
      ],
      "op": "DUP1",
      "path": "29"
    },
    "6200": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8190,
        8267
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "6202": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8190,
        8267
      ],
      "op": "ADD",
      "path": "29"
    },
    "6203": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8190,
        8267
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "6205": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8190,
        8267
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "6206": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8190,
        8267
      ],
      "op": "DUP1",
      "path": "29"
    },
    "6207": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8190,
        8267
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x35"
    },
    "6209": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8190,
        8267
      ],
      "op": "DUP2",
      "path": "29"
    },
    "6210": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8190,
        8267
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "6211": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8190,
        8267
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "6213": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8190,
        8267
      ],
      "op": "ADD",
      "path": "29"
    },
    "6214": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8190,
        8267
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1B57"
    },
    "6217": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8190,
        8267
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x35"
    },
    "6219": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8190,
        8267
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "6220": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8190,
        8267
      ],
      "op": "CODECOPY",
      "path": "29"
    },
    "6221": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8190,
        8196
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1992"
    },
    "6224": {
      "fn": "SushiToken._writeCheckpoint",
      "jump": "i",
      "offset": [
        8190,
        8267
      ],
      "op": "JUMP",
      "path": "29"
    },
    "6225": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8190,
        8267
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "6226": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8169,
        8267
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "6227": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8169,
        8267
      ],
      "op": "POP",
      "path": "29"
    },
    "6228": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8297,
        8298
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "6230": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8282,
        8294
      ],
      "op": "DUP5",
      "path": "29"
    },
    "6231": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8282,
        8298
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "6236": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8282,
        8298
      ],
      "op": "AND",
      "path": "29"
    },
    "6237": {
      "branch": 96,
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8282,
        8298
      ],
      "op": "GT",
      "path": "29"
    },
    "6238": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8282,
        8367
      ],
      "op": "DUP1",
      "path": "29"
    },
    "6239": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8282,
        8367
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "6240": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8282,
        8367
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x189A"
    },
    "6243": {
      "branch": 96,
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8282,
        8367
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "6244": {
      "op": "POP"
    },
    "6245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6249": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6251": {
      "op": "SHL"
    },
    "6252": {
      "op": "SUB"
    },
    "6253": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8302,
        8324
      ],
      "op": "DUP6",
      "path": "29"
    },
    "6254": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8302,
        8324
      ],
      "op": "AND",
      "path": "29"
    },
    "6255": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8302,
        8324
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "6257": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8302,
        8324
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "6258": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8302,
        8324
      ],
      "op": "DUP2",
      "path": "29"
    },
    "6259": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8302,
        8324
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "6260": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8302,
        8313
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x9"
    },
    "6262": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8302,
        8324
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "6264": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8302,
        8324
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "6265": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8302,
        8324
      ],
      "op": "DUP2",
      "path": "29"
    },
    "6266": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8302,
        8324
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "6267": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8302,
        8324
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "6269": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8302,
        8324
      ],
      "op": "DUP1",
      "path": "29"
    },
    "6270": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8302,
        8324
      ],
      "op": "DUP4",
      "path": "29"
    },
    "6271": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8302,
        8324
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "6272": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8302,
        8367
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "6277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6279": {
      "op": "NOT"
    },
    "6280": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8325,
        8341
      ],
      "op": "DUP10",
      "path": "29"
    },
    "6281": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8325,
        8341
      ],
      "op": "ADD",
      "path": "29"
    },
    "6282": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8302,
        8342
      ],
      "op": "DUP2",
      "path": "29"
    },
    "6283": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8302,
        8342
      ],
      "op": "AND",
      "path": "29"
    },
    "6284": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8302,
        8342
      ],
      "op": "DUP6",
      "path": "29"
    },
    "6285": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8302,
        8342
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "6286": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8302,
        8342
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "6287": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8302,
        8342
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "6288": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8302,
        8342
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "6289": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8302,
        8342
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "6290": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8302,
        8342
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "6291": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8302,
        8352
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "6292": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8302,
        8367
      ],
      "op": "DUP3",
      "path": "29"
    },
    "6293": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8302,
        8367
      ],
      "op": "DUP3",
      "path": "29"
    },
    "6294": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8302,
        8367
      ],
      "op": "AND",
      "path": "29"
    },
    "6295": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8302,
        8352
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "6296": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8302,
        8352
      ],
      "op": "AND",
      "path": "29"
    },
    "6297": {
      "branch": 97,
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8302,
        8367
      ],
      "op": "EQ",
      "path": "29"
    },
    "6298": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8282,
        8367
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "6299": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8278,
        8612
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "6300": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8278,
        8612
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x18D7"
    },
    "6303": {
      "branch": 97,
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8278,
        8612
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "6304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6308": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6310": {
      "op": "SHL"
    },
    "6311": {
      "op": "SUB"
    },
    "6312": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8383,
        8405
      ],
      "op": "DUP6",
      "path": "29",
      "statement": 74
    },
    "6313": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8383,
        8405
      ],
      "op": "AND",
      "path": "29"
    },
    "6314": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8383,
        8405
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "6316": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8383,
        8405
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "6317": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8383,
        8405
      ],
      "op": "DUP2",
      "path": "29"
    },
    "6318": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8383,
        8405
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "6319": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8383,
        8394
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x9"
    },
    "6321": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8383,
        8405
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "6323": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8383,
        8405
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "6324": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8383,
        8405
      ],
      "op": "DUP2",
      "path": "29"
    },
    "6325": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8383,
        8405
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "6326": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8383,
        8405
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "6328": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8383,
        8405
      ],
      "op": "DUP1",
      "path": "29"
    },
    "6329": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8383,
        8405
      ],
      "op": "DUP4",
      "path": "29"
    },
    "6330": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8383,
        8405
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "6331": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8383,
        8423
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "6336": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6338": {
      "op": "NOT"
    },
    "6339": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8406,
        8422
      ],
      "op": "DUP10",
      "path": "29"
    },
    "6340": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8406,
        8422
      ],
      "op": "ADD",
      "path": "29"
    },
    "6341": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8383,
        8423
      ],
      "op": "AND",
      "path": "29"
    },
    "6342": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8383,
        8423
      ],
      "op": "DUP5",
      "path": "29"
    },
    "6343": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8383,
        8423
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "6344": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8383,
        8423
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "6345": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8383,
        8423
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "6346": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8383,
        8423
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "6347": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8383,
        8423
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "6348": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8383,
        8423
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "6349": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8421,
        8422
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "6351": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8383,
        8429
      ],
      "op": "ADD",
      "path": "29"
    },
    "6352": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8383,
        8440
      ],
      "op": "DUP3",
      "path": "29"
    },
    "6353": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8383,
        8440
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "6354": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8383,
        8440
      ],
      "op": "SSTORE",
      "path": "29"
    },
    "6355": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8278,
        8612
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1948"
    },
    "6358": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8278,
        8612
      ],
      "op": "JUMP",
      "path": "29"
    },
    "6359": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8278,
        8612
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "6360": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8510,
        8543
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 75,
      "value": "0x40"
    },
    "6362": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8510,
        8543
      ],
      "op": "DUP1",
      "path": "29"
    },
    "6363": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8510,
        8543
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "6364": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8510,
        8543
      ],
      "op": "DUP1",
      "path": "29"
    },
    "6365": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8510,
        8543
      ],
      "op": "DUP3",
      "path": "29"
    },
    "6366": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8510,
        8543
      ],
      "op": "ADD",
      "path": "29"
    },
    "6367": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8510,
        8543
      ],
      "op": "DUP3",
      "path": "29"
    },
    "6368": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8510,
        8543
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "6369": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8510,
        8543
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "6374": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8510,
        8543
      ],
      "op": "DUP1",
      "path": "29"
    },
    "6375": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8510,
        8543
      ],
      "op": "DUP5",
      "path": "29"
    },
    "6376": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8510,
        8543
      ],
      "op": "AND",
      "path": "29"
    },
    "6377": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8510,
        8543
      ],
      "op": "DUP3",
      "path": "29"
    },
    "6378": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8510,
        8543
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "6379": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8510,
        8543
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "6381": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8510,
        8543
      ],
      "op": "DUP1",
      "path": "29"
    },
    "6382": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8510,
        8543
      ],
      "op": "DUP4",
      "path": "29"
    },
    "6383": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8510,
        8543
      ],
      "op": "ADD",
      "path": "29"
    },
    "6384": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8510,
        8543
      ],
      "op": "DUP7",
      "path": "29"
    },
    "6385": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8510,
        8543
      ],
      "op": "DUP2",
      "path": "29"
    },
    "6386": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8510,
        8543
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "6387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6391": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6393": {
      "op": "SHL"
    },
    "6394": {
      "op": "SUB"
    },
    "6395": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8493
      ],
      "op": "DUP11",
      "path": "29"
    },
    "6396": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8493
      ],
      "op": "AND",
      "path": "29"
    },
    "6397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6399": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8493
      ],
      "op": "DUP2",
      "path": "29"
    },
    "6400": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8493
      ],
      "op": "DUP2",
      "path": "29"
    },
    "6401": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8493
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "6402": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8482
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x9"
    },
    "6404": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8493
      ],
      "op": "DUP5",
      "path": "29"
    },
    "6405": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8493
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "6406": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8493
      ],
      "op": "DUP7",
      "path": "29"
    },
    "6407": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8493
      ],
      "op": "DUP2",
      "path": "29"
    },
    "6408": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8493
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "6409": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8507
      ],
      "op": "DUP12",
      "path": "29"
    },
    "6410": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8507
      ],
      "op": "DUP7",
      "path": "29"
    },
    "6411": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8507
      ],
      "op": "AND",
      "path": "29"
    },
    "6412": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8507
      ],
      "op": "DUP3",
      "path": "29"
    },
    "6413": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8507
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "6414": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8507
      ],
      "op": "DUP5",
      "path": "29"
    },
    "6415": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8507
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "6416": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8507
      ],
      "op": "DUP7",
      "path": "29"
    },
    "6417": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8507
      ],
      "op": "DUP2",
      "path": "29"
    },
    "6418": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8507
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "6419": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8543
      ],
      "op": "SWAP6",
      "path": "29"
    },
    "6420": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8543
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "6421": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8543
      ],
      "op": "DUP7",
      "path": "29"
    },
    "6422": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8543
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "6423": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8543
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "6424": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8543
      ],
      "op": "DUP7",
      "path": "29"
    },
    "6425": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8543
      ],
      "op": "AND",
      "path": "29"
    },
    "6426": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "6431": {
      "op": "NOT"
    },
    "6432": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8543
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "6433": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8543
      ],
      "op": "DUP3",
      "path": "29"
    },
    "6434": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8543
      ],
      "op": "AND",
      "path": "29"
    },
    "6435": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8543
      ],
      "op": "OR",
      "path": "29"
    },
    "6436": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8543
      ],
      "op": "DUP8",
      "path": "29"
    },
    "6437": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8543
      ],
      "op": "SSTORE",
      "path": "29"
    },
    "6438": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8543
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "6439": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8543
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "6440": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8543
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "6442": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8543
      ],
      "op": "SWAP7",
      "path": "29"
    },
    "6443": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8543
      ],
      "op": "DUP8",
      "path": "29"
    },
    "6444": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8543
      ],
      "op": "ADD",
      "path": "29"
    },
    "6445": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8471,
        8543
      ],
      "op": "SSTORE",
      "path": "29"
    },
    "6446": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8582
      ],
      "op": "SWAP1",
      "path": "29",
      "statement": 76
    },
    "6447": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8582
      ],
      "op": "DUP2",
      "path": "29"
    },
    "6448": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8582
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "6449": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8571
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xA"
    },
    "6451": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8582
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "6452": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8582
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "6453": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8582
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "6454": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8582
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "6455": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8582
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "6456": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8582
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "6457": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8601
      ],
      "op": "DUP1",
      "path": "29"
    },
    "6458": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8601
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "6459": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8585,
        8601
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "6460": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8585,
        8601
      ],
      "op": "DUP9",
      "path": "29"
    },
    "6461": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8585,
        8601
      ],
      "op": "ADD",
      "path": "29"
    },
    "6462": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8601
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "6463": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8601
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "6464": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8601
      ],
      "op": "AND",
      "path": "29"
    },
    "6465": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8601
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "6466": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8601
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "6467": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8601
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "6468": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8601
      ],
      "op": "AND",
      "path": "29"
    },
    "6469": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8601
      ],
      "op": "OR",
      "path": "29"
    },
    "6470": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8601
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "6471": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8557,
        8601
      ],
      "op": "SSTORE",
      "path": "29"
    },
    "6472": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8278,
        8612
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "6473": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8627,
        8678
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 77,
      "value": "0x40"
    },
    "6475": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8627,
        8678
      ],
      "op": "DUP1",
      "path": "29"
    },
    "6476": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8627,
        8678
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "6477": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8627,
        8678
      ],
      "op": "DUP5",
      "path": "29"
    },
    "6478": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8627,
        8678
      ],
      "op": "DUP2",
      "path": "29"
    },
    "6479": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8627,
        8678
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "6480": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8627,
        8678
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "6482": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8627,
        8678
      ],
      "op": "DUP2",
      "path": "29"
    },
    "6483": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8627,
        8678
      ],
      "op": "ADD",
      "path": "29"
    },
    "6484": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8627,
        8678
      ],
      "op": "DUP5",
      "path": "29"
    },
    "6485": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8627,
        8678
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "6486": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8627,
        8678
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "6487": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8627,
        8678
      ],
      "op": "DUP2",
      "path": "29"
    },
    "6488": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8627,
        8678
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "6489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6493": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6495": {
      "op": "SHL"
    },
    "6496": {
      "op": "SUB"
    },
    "6497": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8627,
        8678
      ],
      "op": "DUP9",
      "path": "29"
    },
    "6498": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8627,
        8678
      ],
      "op": "AND",
      "path": "29"
    },
    "6499": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8627,
        8678
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "6500": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8627,
        8678
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724"
    },
    "6533": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8627,
        8678
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "6534": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8627,
        8678
      ],
      "op": "DUP3",
      "path": "29"
    },
    "6535": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8627,
        8678
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "6536": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8627,
        8678
      ],
      "op": "SUB",
      "path": "29"
    },
    "6537": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8627,
        8678
      ],
      "op": "ADD",
      "path": "29"
    },
    "6538": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8627,
        8678
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "6539": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        8627,
        8678
      ],
      "op": "LOG2",
      "path": "29"
    },
    "6540": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        7998,
        8685
      ],
      "op": "POP",
      "path": "29"
    },
    "6541": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        7998,
        8685
      ],
      "op": "POP",
      "path": "29"
    },
    "6542": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        7998,
        8685
      ],
      "op": "POP",
      "path": "29"
    },
    "6543": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        7998,
        8685
      ],
      "op": "POP",
      "path": "29"
    },
    "6544": {
      "fn": "SushiToken._writeCheckpoint",
      "offset": [
        7998,
        8685
      ],
      "op": "POP",
      "path": "29"
    },
    "6545": {
      "fn": "SushiToken._writeCheckpoint",
      "jump": "o",
      "offset": [
        7998,
        8685
      ],
      "op": "JUMP",
      "path": "29"
    },
    "6546": {
      "fn": "SushiToken.safe32",
      "offset": [
        8691,
        8849
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "6547": {
      "fn": "SushiToken.safe32",
      "offset": [
        8766,
        8772
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "6549": {
      "fn": "SushiToken.safe32",
      "offset": [
        8803,
        8815
      ],
      "op": "DUP2",
      "path": "29",
      "statement": 78
    },
    "6550": {
      "fn": "SushiToken.safe32",
      "offset": [
        8796,
        8801
      ],
      "op": "PUSH5",
      "path": "29",
      "value": "0x100000000"
    },
    "6556": {
      "fn": "SushiToken.safe32",
      "offset": [
        8792,
        8801
      ],
      "op": "DUP5",
      "path": "29"
    },
    "6557": {
      "branch": 98,
      "fn": "SushiToken.safe32",
      "offset": [
        8792,
        8801
      ],
      "op": "LT",
      "path": "29"
    },
    "6558": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x19E8"
    },
    "6561": {
      "branch": 98,
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "6562": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "6564": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "6565": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6569": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6571": {
      "op": "SHL"
    },
    "6572": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "DUP2",
      "path": "29"
    },
    "6573": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "6574": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "6576": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "6578": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "DUP3",
      "path": "29"
    },
    "6579": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "ADD",
      "path": "29"
    },
    "6580": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "DUP2",
      "path": "29"
    },
    "6581": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "DUP2",
      "path": "29"
    },
    "6582": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "6583": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "DUP4",
      "path": "29"
    },
    "6584": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "6585": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x24"
    },
    "6587": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "DUP5",
      "path": "29"
    },
    "6588": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "ADD",
      "path": "29"
    },
    "6589": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "6590": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "DUP4",
      "path": "29"
    },
    "6591": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "6592": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "6593": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "6594": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "DUP4",
      "path": "29"
    },
    "6595": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "6596": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x44"
    },
    "6598": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "6599": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "6600": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "ADD",
      "path": "29"
    },
    "6601": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "6602": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "6603": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "DUP6",
      "path": "29"
    },
    "6604": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "ADD",
      "path": "29"
    },
    "6605": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "6606": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "DUP1",
      "path": "29"
    },
    "6607": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "DUP4",
      "path": "29"
    },
    "6608": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "DUP4",
      "path": "29"
    },
    "6609": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "6611": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "DUP4",
      "path": "29"
    },
    "6612": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "6613": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1386"
    },
    "6616": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "6617": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "DUP2",
      "path": "29"
    },
    "6618": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "DUP2",
      "path": "29"
    },
    "6619": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "ADD",
      "path": "29"
    },
    "6620": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "6621": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "DUP4",
      "path": "29"
    },
    "6622": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "DUP3",
      "path": "29"
    },
    "6623": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "ADD",
      "path": "29"
    },
    "6624": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "6625": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "6627": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "ADD",
      "path": "29"
    },
    "6628": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x136E"
    },
    "6631": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "JUMP",
      "path": "29"
    },
    "6632": {
      "fn": "SushiToken.safe32",
      "offset": [
        8784,
        8816
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "6633": {
      "op": "POP"
    },
    "6634": {
      "fn": "SushiToken.safe32",
      "offset": [
        8840,
        8841
      ],
      "op": "SWAP2",
      "path": "29",
      "statement": 79
    },
    "6635": {
      "fn": "SushiToken.safe32",
      "offset": [
        8840,
        8841
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "6636": {
      "fn": "SushiToken.safe32",
      "offset": [
        8691,
        8849
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "6637": {
      "op": "POP"
    },
    "6638": {
      "op": "POP"
    },
    "6639": {
      "fn": "SushiToken.safe32",
      "jump": "o",
      "offset": [
        8691,
        8849
      ],
      "op": "JUMP",
      "path": "29"
    },
    "6640": {
      "op": "JUMPDEST"
    },
    "6641": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6643": {
      "op": "DUP1"
    },
    "6644": {
      "op": "MLOAD"
    },
    "6645": {
      "op": "DUP1"
    },
    "6646": {
      "op": "DUP3"
    },
    "6647": {
      "op": "ADD"
    },
    "6648": {
      "op": "SWAP1"
    },
    "6649": {
      "op": "SWAP2"
    },
    "6650": {
      "op": "MSTORE"
    },
    "6651": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6653": {
      "op": "DUP1"
    },
    "6654": {
      "op": "DUP3"
    },
    "6655": {
      "op": "MSTORE"
    },
    "6656": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6658": {
      "op": "DUP3"
    },
    "6659": {
      "op": "ADD"
    },
    "6660": {
      "op": "MSTORE"
    },
    "6661": {
      "op": "SWAP1"
    },
    "6662": {
      "jump": "o",
      "op": "JUMP"
    },
    "6663": {
      "op": "JUMPDEST"
    },
    "6664": {
      "op": "DUP3"
    },
    "6665": {
      "op": "DUP1"
    },
    "6666": {
      "op": "SLOAD"
    },
    "6667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6669": {
      "op": "DUP2"
    },
    "6670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6672": {
      "op": "AND"
    },
    "6673": {
      "op": "ISZERO"
    },
    "6674": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "6677": {
      "op": "MUL"
    },
    "6678": {
      "op": "SUB"
    },
    "6679": {
      "op": "AND"
    },
    "6680": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "6682": {
      "op": "SWAP1"
    },
    "6683": {
      "op": "DIV"
    },
    "6684": {
      "op": "SWAP1"
    },
    "6685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6687": {
      "op": "MSTORE"
    },
    "6688": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6692": {
      "op": "KECCAK256"
    },
    "6693": {
      "op": "SWAP1"
    },
    "6694": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6696": {
      "op": "ADD"
    },
    "6697": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6699": {
      "op": "SWAP1"
    },
    "6700": {
      "op": "DIV"
    },
    "6701": {
      "op": "DUP2"
    },
    "6702": {
      "op": "ADD"
    },
    "6703": {
      "op": "SWAP3"
    },
    "6704": {
      "op": "DUP3"
    },
    "6705": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6707": {
      "op": "LT"
    },
    "6708": {
      "op": "PUSH2",
      "value": "0x1A48"
    },
    "6711": {
      "op": "JUMPI"
    },
    "6712": {
      "op": "DUP1"
    },
    "6713": {
      "op": "MLOAD"
    },
    "6714": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6716": {
      "op": "NOT"
    },
    "6717": {
      "op": "AND"
    },
    "6718": {
      "op": "DUP4"
    },
    "6719": {
      "op": "DUP1"
    },
    "6720": {
      "op": "ADD"
    },
    "6721": {
      "op": "OR"
    },
    "6722": {
      "op": "DUP6"
    },
    "6723": {
      "op": "SSTORE"
    },
    "6724": {
      "op": "PUSH2",
      "value": "0x1A75"
    },
    "6727": {
      "op": "JUMP"
    },
    "6728": {
      "op": "JUMPDEST"
    },
    "6729": {
      "op": "DUP3"
    },
    "6730": {
      "op": "DUP1"
    },
    "6731": {
      "op": "ADD"
    },
    "6732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6734": {
      "op": "ADD"
    },
    "6735": {
      "op": "DUP6"
    },
    "6736": {
      "op": "SSTORE"
    },
    "6737": {
      "op": "DUP3"
    },
    "6738": {
      "op": "ISZERO"
    },
    "6739": {
      "op": "PUSH2",
      "value": "0x1A75"
    },
    "6742": {
      "op": "JUMPI"
    },
    "6743": {
      "op": "SWAP2"
    },
    "6744": {
      "op": "DUP3"
    },
    "6745": {
      "op": "ADD"
    },
    "6746": {
      "op": "JUMPDEST"
    },
    "6747": {
      "op": "DUP3"
    },
    "6748": {
      "op": "DUP2"
    },
    "6749": {
      "op": "GT"
    },
    "6750": {
      "op": "ISZERO"
    },
    "6751": {
      "op": "PUSH2",
      "value": "0x1A75"
    },
    "6754": {
      "op": "JUMPI"
    },
    "6755": {
      "op": "DUP3"
    },
    "6756": {
      "op": "MLOAD"
    },
    "6757": {
      "op": "DUP3"
    },
    "6758": {
      "op": "SSTORE"
    },
    "6759": {
      "op": "SWAP2"
    },
    "6760": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6762": {
      "op": "ADD"
    },
    "6763": {
      "op": "SWAP2"
    },
    "6764": {
      "op": "SWAP1"
    },
    "6765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6767": {
      "op": "ADD"
    },
    "6768": {
      "op": "SWAP1"
    },
    "6769": {
      "op": "PUSH2",
      "value": "0x1A5A"
    },
    "6772": {
      "op": "JUMP"
    },
    "6773": {
      "op": "JUMPDEST"
    },
    "6774": {
      "op": "POP"
    },
    "6775": {
      "op": "PUSH2",
      "value": "0x1A81"
    },
    "6778": {
      "op": "SWAP3"
    },
    "6779": {
      "op": "SWAP2"
    },
    "6780": {
      "op": "POP"
    },
    "6781": {
      "op": "PUSH2",
      "value": "0x1A85"
    },
    "6784": {
      "jump": "i",
      "op": "JUMP"
    },
    "6785": {
      "op": "JUMPDEST"
    },
    "6786": {
      "op": "POP"
    },
    "6787": {
      "op": "SWAP1"
    },
    "6788": {
      "jump": "o",
      "op": "JUMP"
    },
    "6789": {
      "op": "JUMPDEST"
    },
    "6790": {
      "op": "JUMPDEST"
    },
    "6791": {
      "op": "DUP1"
    },
    "6792": {
      "op": "DUP3"
    },
    "6793": {
      "op": "GT"
    },
    "6794": {
      "op": "ISZERO"
    },
    "6795": {
      "op": "PUSH2",
      "value": "0x1A81"
    },
    "6798": {
      "op": "JUMPI"
    },
    "6799": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6801": {
      "op": "DUP2"
    },
    "6802": {
      "op": "SSTORE"
    },
    "6803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6805": {
      "op": "ADD"
    },
    "6806": {
      "op": "PUSH2",
      "value": "0x1A86"
    },
    "6809": {
      "op": "JUMP"
    }
  },
  "sha1": "daee632c38db98ba3039d55190dcb7952a7cb98e",
  "source": "pragma solidity 0.6.12;\n\n\nimport \"./ERC20.sol\";\nimport \"../Utils/Owned.sol\";\nimport \"../../interfaces/IMisoToken.sol\";\n\n\n// SushiToken with Governance.\ncontract SushiToken is Owned, ERC20, IMisoToken {\n\n    function initToken(string memory _name, string memory _symbol, address owner) external override {\n        _initOwned(owner);\n        _initERC20(_name, _symbol);\n    }\n\n    /// @notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef).\n    function mint(address _to, uint256 _amount) public onlyOwner {\n        _mint(_to, _amount);\n        _moveDelegates(address(0), _delegates[_to], _amount);\n    }\n\n    // Copied and modified from YAM code:\n    // https://github.com/yam-finance/yam-protocol/blob/master/contracts/token/YAMGovernanceStorage.sol\n    // https://github.com/yam-finance/yam-protocol/blob/master/contracts/token/YAMGovernance.sol\n    // Which is copied and modified from COMPOUND:\n    // https://github.com/compound-finance/compound-protocol/blob/master/contracts/Governance/Comp.sol\n\n    /// @notice A record of each accounts delegate\n    mapping (address => address) internal _delegates;\n\n    /// @notice A checkpoint for marking number of votes from a given block\n    struct Checkpoint {\n        uint32 fromBlock;\n        uint256 votes;\n    }\n\n    /// @notice A record of votes checkpoints for each account, by index\n    mapping (address => mapping (uint32 => Checkpoint)) public checkpoints;\n\n    /// @notice The number of checkpoints for each account\n    mapping (address => uint32) public numCheckpoints;\n\n    /// @notice The EIP-712 typehash for the contract's domain\n    bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\");\n\n    /// @notice The EIP-712 typehash for the delegation struct used by the contract\n    bytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    /// @notice A record of states for signing / validating signatures\n    mapping (address => uint) public nonces;\n\n      /// @notice An event thats emitted when an account changes its delegate\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /// @notice An event thats emitted when a delegate account's vote balance changes\n    event DelegateVotesChanged(address indexed delegate, uint previousBalance, uint newBalance);\n\n    /**\n     * @notice Delegate votes from `msg.sender` to `delegatee`\n     * @param delegator The address to get delegatee for\n     */\n    function delegates(address delegator)\n        external\n        view\n        returns (address)\n    {\n        return _delegates[delegator];\n    }\n\n   /**\n    * @notice Delegate votes from `msg.sender` to `delegatee`\n    * @param delegatee The address to delegate votes to\n    */\n    function delegate(address delegatee) external {\n        return _delegate(msg.sender, delegatee);\n    }\n\n    /**\n     * @notice Delegates votes from signatory to `delegatee`\n     * @param delegatee The address to delegate votes to\n     * @param nonce The contract state required to match the signature\n     * @param expiry The time at which to expire the signature\n     * @param v The recovery byte of the signature\n     * @param r Half of the ECDSA signature pair\n     * @param s Half of the ECDSA signature pair\n     */\n    function delegateBySig(\n        address delegatee,\n        uint nonce,\n        uint expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    )\n        external\n    {\n        bytes32 domainSeparator = keccak256(\n            abi.encode(\n                DOMAIN_TYPEHASH,\n                keccak256(bytes(name())),\n                getChainId(),\n                address(this)\n            )\n        );\n\n        bytes32 structHash = keccak256(\n            abi.encode(\n                DELEGATION_TYPEHASH,\n                delegatee,\n                nonce,\n                expiry\n            )\n        );\n\n        bytes32 digest = keccak256(\n            abi.encodePacked(\n                \"\\x19\\x01\",\n                domainSeparator,\n                structHash\n            )\n        );\n\n        address signatory = ecrecover(digest, v, r, s);\n        require(signatory != address(0), \"SUSHI::delegateBySig: invalid signature\");\n        require(nonce == nonces[signatory]++, \"SUSHI::delegateBySig: invalid nonce\");\n        require(now <= expiry, \"SUSHI::delegateBySig: signature expired\");\n        return _delegate(signatory, delegatee);\n    }\n\n    /**\n     * @notice Gets the current votes balance for `account`\n     * @param account The address to get votes balance\n     * @return The number of current votes for `account`\n     */\n    function getCurrentVotes(address account)\n        external\n        view\n        returns (uint256)\n    {\n        uint32 nCheckpoints = numCheckpoints[account];\n        return nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0;\n    }\n\n    /**\n     * @notice Determine the prior number of votes for an account as of a block number\n     * @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\n     * @param account The address of the account to check\n     * @param blockNumber The block number to get the vote balance at\n     * @return The number of votes the account had as of the given block\n     */\n    function getPriorVotes(address account, uint blockNumber)\n        external\n        view\n        returns (uint256)\n    {\n        require(blockNumber < block.number, \"SUSHI::getPriorVotes: not yet determined\");\n\n        uint32 nCheckpoints = numCheckpoints[account];\n        if (nCheckpoints == 0) {\n            return 0;\n        }\n\n        // First check most recent balance\n        if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\n            return checkpoints[account][nCheckpoints - 1].votes;\n        }\n\n        // Next check implicit zero balance\n        if (checkpoints[account][0].fromBlock > blockNumber) {\n            return 0;\n        }\n\n        uint32 lower = 0;\n        uint32 upper = nCheckpoints - 1;\n        while (upper > lower) {\n            uint32 center = upper - (upper - lower) / 2; // ceil, avoiding overflow\n            Checkpoint memory cp = checkpoints[account][center];\n            if (cp.fromBlock == blockNumber) {\n                return cp.votes;\n            } else if (cp.fromBlock < blockNumber) {\n                lower = center;\n            } else {\n                upper = center - 1;\n            }\n        }\n        return checkpoints[account][lower].votes;\n    }\n\n    function _delegate(address delegator, address delegatee)\n        internal\n    {\n        address currentDelegate = _delegates[delegator];\n        uint256 delegatorBalance = balanceOf(delegator); // balance of underlying SUSHIs (not scaled);\n        _delegates[delegator] = delegatee;\n\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n        _moveDelegates(currentDelegate, delegatee, delegatorBalance);\n    }\n\n    function _moveDelegates(address srcRep, address dstRep, uint256 amount) internal {\n        if (srcRep != dstRep && amount > 0) {\n            if (srcRep != address(0)) {\n                // decrease old representative\n                uint32 srcRepNum = numCheckpoints[srcRep];\n                uint256 srcRepOld = srcRepNum > 0 ? checkpoints[srcRep][srcRepNum - 1].votes : 0;\n                uint256 srcRepNew = srcRepOld.sub(amount);\n                _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew);\n            }\n\n            if (dstRep != address(0)) {\n                // increase new representative\n                uint32 dstRepNum = numCheckpoints[dstRep];\n                uint256 dstRepOld = dstRepNum > 0 ? checkpoints[dstRep][dstRepNum - 1].votes : 0;\n                uint256 dstRepNew = dstRepOld.add(amount);\n                _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew);\n            }\n        }\n    }\n\n    function _writeCheckpoint(\n        address delegatee,\n        uint32 nCheckpoints,\n        uint256 oldVotes,\n        uint256 newVotes\n    )\n        internal\n    {\n        uint32 blockNumber = safe32(block.number, \"SUSHI::_writeCheckpoint: block number exceeds 32 bits\");\n\n        if (nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber) {\n            checkpoints[delegatee][nCheckpoints - 1].votes = newVotes;\n        } else {\n            checkpoints[delegatee][nCheckpoints] = Checkpoint(blockNumber, newVotes);\n            numCheckpoints[delegatee] = nCheckpoints + 1;\n        }\n\n        emit DelegateVotesChanged(delegatee, oldVotes, newVotes);\n    }\n\n    function safe32(uint n, string memory errorMessage) internal pure returns (uint32) {\n        require(n < 2**32, errorMessage);\n        return uint32(n);\n    }\n\n    function getChainId() internal pure returns (uint) {\n        uint256 chainId;\n        assembly { chainId := chainid() }\n        return chainId;\n    }\n}",
  "sourceMap": "152:8854:29:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Tokens/SushiToken.sol",
  "type": "contract"
}