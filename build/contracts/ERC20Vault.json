{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "EmergencyWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_withdrawable",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "add",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "emergencyWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initERC20Vault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isContract",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "newOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "poolInfo",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "withdrawable",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "endDate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "setContractAllowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_withdrawable",
          "type": "bool"
        }
      ],
      "name": "setPoolWithdrawable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "updatePoolEndDate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "57": "contracts/Utils/Owned.sol",
    "58": "contracts/Utils/SafeMathPlus.sol",
    "61": "contracts/Vault/ERC20Vault.sol",
    "63": "interfaces/IERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/Vault/ERC20Vault.sol",
    "exportedSymbols": {
      "ERC20Vault": [
        18980
      ]
    },
    "id": 18981,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 18578,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:61"
      },
      {
        "absolutePath": "contracts/Utils/Owned.sol",
        "file": "../Utils/Owned.sol",
        "id": 18579,
        "nodeType": "ImportDirective",
        "scope": 18981,
        "sourceUnit": 17567,
        "src": "25:28:61",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IERC20.sol",
        "file": "../../interfaces/IERC20.sol",
        "id": 18580,
        "nodeType": "ImportDirective",
        "scope": 18981,
        "sourceUnit": 19812,
        "src": "54:37:61",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Utils/SafeMathPlus.sol",
        "file": "../Utils/SafeMathPlus.sol",
        "id": 18581,
        "nodeType": "ImportDirective",
        "scope": 18981,
        "sourceUnit": 17847,
        "src": "92:35:61",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 18582,
              "name": "Owned",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 17566,
              "src": "151:5:61",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Owned_$17566",
                "typeString": "contract Owned"
              }
            },
            "id": 18583,
            "nodeType": "InheritanceSpecifier",
            "src": "151:5:61"
          }
        ],
        "contractDependencies": [
          17566
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 18980,
        "linearizedBaseContracts": [
          18980,
          17566
        ],
        "name": "ERC20Vault",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 18586,
            "libraryName": {
              "contractScope": null,
              "id": 18584,
              "name": "SafeMathPlus",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 17846,
              "src": "168:12:61",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMathPlus_$17846",
                "typeString": "library SafeMathPlus"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "162:31:61",
            "typeName": {
              "id": 18585,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "185:7:61",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "69ac5721",
            "id": 18588,
            "mutability": "mutable",
            "name": "unlockDate",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 18980,
            "src": "199:25:61",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18587,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "199:7:61",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 18596,
            "name": "Deposit",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 18595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18590,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 18596,
                  "src": "481:20:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18589,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "481:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18592,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 18596,
                  "src": "503:19:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18591,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "503:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18594,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 18596,
                  "src": "524:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18593,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "524:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "480:59:61"
            },
            "src": "467:73:61"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 18604,
            "name": "Withdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 18603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18598,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 18604,
                  "src": "560:20:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18597,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "560:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18600,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 18604,
                  "src": "582:19:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18599,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "582:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18602,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 18604,
                  "src": "603:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18601,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "559:59:61"
            },
            "src": "545:74:61"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 18612,
            "name": "EmergencyWithdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 18611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18606,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 18612,
                  "src": "648:20:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18605,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "648:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18608,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 18612,
                  "src": "669:19:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18607,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "669:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18610,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 18612,
                  "src": "689:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18609,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "689:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "647:57:61"
            },
            "src": "624:81:61"
          },
          {
            "canonicalName": "ERC20Vault.UserInfo",
            "id": 18615,
            "members": [
              {
                "constant": false,
                "id": 18614,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 18615,
                "src": "736:14:61",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 18613,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "736:7:61",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "UserInfo",
            "nodeType": "StructDefinition",
            "scope": 18980,
            "src": "711:88:61",
            "visibility": "public"
          },
          {
            "canonicalName": "ERC20Vault.PoolInfo",
            "id": 18622,
            "members": [
              {
                "constant": false,
                "id": 18617,
                "mutability": "mutable",
                "name": "token",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 18622,
                "src": "830:12:61",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$19811",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 18616,
                  "name": "IERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 19811,
                  "src": "830:6:61",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$19811",
                    "typeString": "contract IERC20"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 18619,
                "mutability": "mutable",
                "name": "withdrawable",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 18622,
                "src": "852:17:61",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 18618,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "852:4:61",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 18621,
                "mutability": "mutable",
                "name": "endDate",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 18622,
                "src": "879:15:61",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 18620,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "879:7:61",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "PoolInfo",
            "nodeType": "StructDefinition",
            "scope": 18980,
            "src": "805:96:61",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "93f1a40b",
            "id": 18628,
            "mutability": "mutable",
            "name": "userInfo",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 18980,
            "src": "990:64:61",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$18615_storage_$_$",
              "typeString": "mapping(uint256 => mapping(address => struct ERC20Vault.UserInfo))"
            },
            "typeName": {
              "id": 18627,
              "keyType": {
                "id": 18623,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "998:7:61",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "990:48:61",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$18615_storage_$_$",
                "typeString": "mapping(uint256 => mapping(address => struct ERC20Vault.UserInfo))"
              },
              "valueType": {
                "id": 18626,
                "keyType": {
                  "id": 18624,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1017:7:61",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1009:28:61",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$18615_storage_$",
                  "typeString": "mapping(address => struct ERC20Vault.UserInfo)"
                },
                "valueType": {
                  "contractScope": null,
                  "id": 18625,
                  "name": "UserInfo",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 18615,
                  "src": "1028:8:61",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserInfo_$18615_storage_ptr",
                    "typeString": "struct ERC20Vault.UserInfo"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1526fe27",
            "id": 18631,
            "mutability": "mutable",
            "name": "poolInfo",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 18980,
            "src": "1087:26:61",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_PoolInfo_$18622_storage_$dyn_storage",
              "typeString": "struct ERC20Vault.PoolInfo[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 18629,
                "name": "PoolInfo",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 18622,
                "src": "1087:8:61",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PoolInfo_$18622_storage_ptr",
                  "typeString": "struct ERC20Vault.PoolInfo"
                }
              },
              "id": 18630,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1087:10:61",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_PoolInfo_$18622_storage_$dyn_storage_ptr",
                "typeString": "struct ERC20Vault.PoolInfo[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 18640,
              "nodeType": "Block",
              "src": "1152:81:61",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 18635,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1174:3:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 18636,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1174:10:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "id": 18637,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1173:12:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 18634,
                      "name": "_initOwned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17498,
                      "src": "1162:10:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 18638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1162:24:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18639,
                  "nodeType": "ExpressionStatement",
                  "src": "1162:24:61"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4c462771",
            "id": 18641,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initERC20Vault",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 18632,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1143:2:61"
            },
            "returnParameters": {
              "id": 18633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1152:0:61"
            },
            "scope": 18980,
            "src": "1120:113:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 18700,
              "nodeType": "Block",
              "src": "1604:430:61",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 18651,
                          "name": "isOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17517,
                          "src": "1622:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 18652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1622:9:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 18650,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1614:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 18653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1614:18:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18654,
                  "nodeType": "ExpressionStatement",
                  "src": "1614:18:61"
                },
                {
                  "assignments": [
                    18656
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18656,
                      "mutability": "mutable",
                      "name": "endDate",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 18700,
                      "src": "1642:15:61",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 18655,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1642:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 18662,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 18660,
                        "name": "_duration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18647,
                        "src": "1680:9:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 18657,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "1660:5:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 18658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1660:15:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 18659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17594,
                      "src": "1660:19:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 18661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1660:30:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1642:48:61"
                },
                {
                  "assignments": [
                    18664
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18664,
                      "mutability": "mutable",
                      "name": "length",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 18700,
                      "src": "1701:14:61",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 18663,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1701:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 18667,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 18665,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18631,
                      "src": "1718:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$18622_storage_$dyn_storage",
                        "typeString": "struct ERC20Vault.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 18666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1718:15:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1701:32:61"
                },
                {
                  "body": {
                    "id": 18688,
                    "nodeType": "Block",
                    "src": "1786:90:61",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_contract$_IERC20_$19811",
                                "typeString": "contract IERC20"
                              },
                              "id": 18684,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 18679,
                                    "name": "poolInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 18631,
                                    "src": "1808:8:61",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_PoolInfo_$18622_storage_$dyn_storage",
                                      "typeString": "struct ERC20Vault.PoolInfo storage ref[] storage ref"
                                    }
                                  },
                                  "id": 18681,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 18680,
                                    "name": "pid",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 18669,
                                    "src": "1817:3:61",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1808:13:61",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PoolInfo_$18622_storage",
                                    "typeString": "struct ERC20Vault.PoolInfo storage ref"
                                  }
                                },
                                "id": 18682,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "token",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 18617,
                                "src": "1808:19:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$19811",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 18683,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18643,
                                "src": "1831:6:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$19811",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "src": "1808:29:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4572726f7220706f6f6c20616c7265616479206164646564",
                              "id": 18685,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1838:26:61",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ab68890b9b8cd9bac11f0fc5dc69bc32019a829da537a99163691782df1b17fb",
                                "typeString": "literal_string \"Error pool already added\""
                              },
                              "value": "Error pool already added"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ab68890b9b8cd9bac11f0fc5dc69bc32019a829da537a99163691782df1b17fb",
                                "typeString": "literal_string \"Error pool already added\""
                              }
                            ],
                            "id": 18678,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1800:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 18686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1800:65:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 18687,
                        "nodeType": "ExpressionStatement",
                        "src": "1800:65:61"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 18674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 18672,
                      "name": "pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18669,
                      "src": "1765:3:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 18673,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18664,
                      "src": "1771:6:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1765:12:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 18689,
                  "initializationExpression": {
                    "assignments": [
                      18669
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 18669,
                        "mutability": "mutable",
                        "name": "pid",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 18689,
                        "src": "1748:11:61",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 18668,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1748:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 18671,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 18670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1762:1:61",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1748:15:61"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 18676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "1779:5:61",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 18675,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18669,
                        "src": "1781:3:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 18677,
                    "nodeType": "ExpressionStatement",
                    "src": "1779:5:61"
                  },
                  "nodeType": "ForStatement",
                  "src": "1743:133:61"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 18694,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18643,
                            "src": "1938:6:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$19811",
                              "typeString": "contract IERC20"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 18695,
                            "name": "_withdrawable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18645,
                            "src": "1972:13:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 18696,
                            "name": "endDate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18656,
                            "src": "2008:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$19811",
                              "typeString": "contract IERC20"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 18693,
                          "name": "PoolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18622,
                          "src": "1909:8:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_PoolInfo_$18622_storage_ptr_$",
                            "typeString": "type(struct ERC20Vault.PoolInfo storage pointer)"
                          }
                        },
                        "id": 18697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "token",
                          "withdrawable",
                          "endDate"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "1909:117:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$18622_memory_ptr",
                          "typeString": "struct ERC20Vault.PoolInfo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PoolInfo_$18622_memory_ptr",
                          "typeString": "struct ERC20Vault.PoolInfo memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 18690,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18631,
                        "src": "1895:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolInfo_$18622_storage_$dyn_storage",
                          "typeString": "struct ERC20Vault.PoolInfo storage ref[] storage ref"
                        }
                      },
                      "id": 18692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1895:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_PoolInfo_$18622_storage_$returns$__$",
                        "typeString": "function (struct ERC20Vault.PoolInfo storage ref)"
                      }
                    },
                    "id": 18698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1895:132:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18699,
                  "nodeType": "ExpressionStatement",
                  "src": "1895:132:61"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a87980e7",
            "id": 18701,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "add",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 18648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18643,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 18701,
                  "src": "1544:13:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$19811",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 18642,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 19811,
                    "src": "1544:6:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$19811",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18645,
                  "mutability": "mutable",
                  "name": "_withdrawable",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 18701,
                  "src": "1559:18:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 18644,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1559:4:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18647,
                  "mutability": "mutable",
                  "name": "_duration",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 18701,
                  "src": "1579:17:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18646,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1579:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1543:54:61"
            },
            "returnParameters": {
              "id": 18649,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1604:0:61"
            },
            "scope": 18980,
            "src": "1531:503:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 18720,
              "nodeType": "Block",
              "src": "2179:88:61",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 18709,
                          "name": "isOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17517,
                          "src": "2197:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 18710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2197:9:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 18708,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2189:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 18711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2189:18:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18712,
                  "nodeType": "ExpressionStatement",
                  "src": "2189:18:61"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 18718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 18713,
                          "name": "poolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18631,
                          "src": "2217:8:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PoolInfo_$18622_storage_$dyn_storage",
                            "typeString": "struct ERC20Vault.PoolInfo storage ref[] storage ref"
                          }
                        },
                        "id": 18715,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 18714,
                          "name": "_pid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18703,
                          "src": "2226:4:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2217:14:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$18622_storage",
                          "typeString": "struct ERC20Vault.PoolInfo storage ref"
                        }
                      },
                      "id": 18716,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawable",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18619,
                      "src": "2217:27:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 18717,
                      "name": "_withdrawable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18705,
                      "src": "2247:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2217:43:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 18719,
                  "nodeType": "ExpressionStatement",
                  "src": "2217:43:61"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "5207cc0d",
            "id": 18721,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPoolWithdrawable",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 18706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18703,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 18721,
                  "src": "2132:12:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18702,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2132:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18705,
                  "mutability": "mutable",
                  "name": "_withdrawable",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 18721,
                  "src": "2146:18:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 18704,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2146:4:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2131:39:61"
            },
            "returnParameters": {
              "id": 18707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2179:0:61"
            },
            "scope": 18980,
            "src": "2103:164:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 18749,
              "nodeType": "Block",
              "src": "2372:138:61",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 18729,
                          "name": "isOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17517,
                          "src": "2390:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 18730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2390:9:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 18728,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2382:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 18731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2382:18:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18732,
                  "nodeType": "ExpressionStatement",
                  "src": "2382:18:61"
                },
                {
                  "assignments": [
                    18734
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18734,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 18749,
                      "src": "2410:21:61",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$18622_storage_ptr",
                        "typeString": "struct ERC20Vault.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 18733,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 18622,
                        "src": "2410:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$18622_storage_ptr",
                          "typeString": "struct ERC20Vault.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 18738,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 18735,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18631,
                      "src": "2434:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$18622_storage_$dyn_storage",
                        "typeString": "struct ERC20Vault.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 18737,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 18736,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18723,
                      "src": "2443:4:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2434:14:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$18622_storage",
                      "typeString": "struct ERC20Vault.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2410:38:61"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 18747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 18739,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18734,
                        "src": "2458:4:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$18622_storage_ptr",
                          "typeString": "struct ERC20Vault.PoolInfo storage pointer"
                        }
                      },
                      "id": 18741,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18621,
                      "src": "2458:12:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 18745,
                          "name": "_duration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18725,
                          "src": "2493:9:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 18742,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2473:5:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 18743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2473:15:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 18744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17594,
                        "src": "2473:19:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 18746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2473:30:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2458:45:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 18748,
                  "nodeType": "ExpressionStatement",
                  "src": "2458:45:61"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "57283e22",
            "id": 18750,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updatePoolEndDate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 18726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18723,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 18750,
                  "src": "2333:12:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18722,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2333:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18725,
                  "mutability": "mutable",
                  "name": "_duration",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 18750,
                  "src": "2347:17:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18724,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2347:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2332:33:61"
            },
            "returnParameters": {
              "id": 18727,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2372:0:61"
            },
            "scope": 18980,
            "src": "2306:204:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 18806,
              "nodeType": "Block",
              "src": "2602:291:61",
              "statements": [
                {
                  "assignments": [
                    18758
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18758,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 18806,
                      "src": "2612:21:61",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$18622_storage_ptr",
                        "typeString": "struct ERC20Vault.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 18757,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 18622,
                        "src": "2612:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$18622_storage_ptr",
                          "typeString": "struct ERC20Vault.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 18762,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 18759,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18631,
                      "src": "2636:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$18622_storage_$dyn_storage",
                        "typeString": "struct ERC20Vault.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 18761,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 18760,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18752,
                      "src": "2645:4:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2636:14:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$18622_storage",
                      "typeString": "struct ERC20Vault.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2612:38:61"
                },
                {
                  "assignments": [
                    18764
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18764,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 18806,
                      "src": "2660:21:61",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$18615_storage_ptr",
                        "typeString": "struct ERC20Vault.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 18763,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 18615,
                        "src": "2660:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$18615_storage_ptr",
                          "typeString": "struct ERC20Vault.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 18771,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 18765,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18628,
                        "src": "2684:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$18615_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct ERC20Vault.UserInfo storage ref))"
                        }
                      },
                      "id": 18767,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 18766,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18752,
                        "src": "2693:4:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2684:14:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$18615_storage_$",
                        "typeString": "mapping(address => struct ERC20Vault.UserInfo storage ref)"
                      }
                    },
                    "id": 18770,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 18768,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2699:3:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 18769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2699:10:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2684:26:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$18615_storage",
                      "typeString": "struct ERC20Vault.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2660:50:61"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 18779,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2753:3:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 18780,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2753:10:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 18778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2745:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18777,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2745:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 18781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2745:19:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 18784,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2774:4:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Vault_$18980",
                              "typeString": "contract ERC20Vault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Vault_$18980",
                              "typeString": "contract ERC20Vault"
                            }
                          ],
                          "id": 18783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2766:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18782,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2766:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 18785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2766:13:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 18786,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18754,
                        "src": "2781:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 18772,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18758,
                          "src": "2721:4:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$18622_storage_ptr",
                            "typeString": "struct ERC20Vault.PoolInfo storage pointer"
                          }
                        },
                        "id": 18775,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18617,
                        "src": "2721:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$19811",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 18776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19776,
                      "src": "2721:23:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 18787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2721:68:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 18788,
                  "nodeType": "ExpressionStatement",
                  "src": "2721:68:61"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 18797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 18789,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18764,
                        "src": "2799:4:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$18615_storage_ptr",
                          "typeString": "struct ERC20Vault.UserInfo storage pointer"
                        }
                      },
                      "id": 18791,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18614,
                      "src": "2799:11:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 18795,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18754,
                          "src": "2829:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 18792,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18764,
                            "src": "2813:4:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$18615_storage_ptr",
                              "typeString": "struct ERC20Vault.UserInfo storage pointer"
                            }
                          },
                          "id": 18793,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18614,
                          "src": "2813:11:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 18794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17594,
                        "src": "2813:15:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 18796,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2813:24:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2799:38:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 18798,
                  "nodeType": "ExpressionStatement",
                  "src": "2799:38:61"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 18800,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2860:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 18801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2860:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 18802,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18752,
                        "src": "2872:4:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 18803,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18754,
                        "src": "2878:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 18799,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18596,
                      "src": "2852:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 18804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2852:34:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18805,
                  "nodeType": "EmitStatement",
                  "src": "2847:39:61"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e2bbb158",
            "id": 18807,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 18755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18752,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 18807,
                  "src": "2565:12:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18751,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2565:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18754,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 18807,
                  "src": "2579:15:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18753,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2579:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2564:31:61"
            },
            "returnParameters": {
              "id": 18756,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2602:0:61"
            },
            "scope": 18980,
            "src": "2548:345:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 18881,
              "nodeType": "Block",
              "src": "2954:508:61",
              "statements": [
                {
                  "assignments": [
                    18815
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18815,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 18881,
                      "src": "2964:21:61",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$18622_storage_ptr",
                        "typeString": "struct ERC20Vault.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 18814,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 18622,
                        "src": "2964:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$18622_storage_ptr",
                          "typeString": "struct ERC20Vault.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 18819,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 18816,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18631,
                      "src": "2988:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$18622_storage_$dyn_storage",
                        "typeString": "struct ERC20Vault.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 18818,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 18817,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18809,
                      "src": "2997:4:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2988:14:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$18622_storage",
                      "typeString": "struct ERC20Vault.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2964:38:61"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 18821,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18815,
                          "src": "3020:4:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$18622_storage_ptr",
                            "typeString": "struct ERC20Vault.PoolInfo storage pointer"
                          }
                        },
                        "id": 18822,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "withdrawable",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18619,
                        "src": "3020:17:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5769746864726177696e672066726f6d20706f6f6c2069732064697361626c6564",
                        "id": 18823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3039:35:61",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1528e78312e783d2bcc8347828d61b871b780103f4cdde7ef5a664a29a5ad17",
                          "typeString": "literal_string \"Withdrawing from pool is disabled\""
                        },
                        "value": "Withdrawing from pool is disabled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1528e78312e783d2bcc8347828d61b871b780103f4cdde7ef5a664a29a5ad17",
                          "typeString": "literal_string \"Withdrawing from pool is disabled\""
                        }
                      ],
                      "id": 18820,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3012:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3012:63:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18825,
                  "nodeType": "ExpressionStatement",
                  "src": "3012:63:61"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 18830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 18827,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -17,
                          "src": "3093:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 18828,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18815,
                            "src": "3100:4:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolInfo_$18622_storage_ptr",
                              "typeString": "struct ERC20Vault.PoolInfo storage pointer"
                            }
                          },
                          "id": 18829,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endDate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18621,
                          "src": "3100:12:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3093:19:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54696d656c6f636b3a2046756e64732063616e6e6f742062652077697468647261776e20796574",
                        "id": 18831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3114:41:61",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7212fb11a2184a0ca446b2dc9ca7c85e03ff926b934553e3f180e74bb204561",
                          "typeString": "literal_string \"Timelock: Funds cannot be withdrawn yet\""
                        },
                        "value": "Timelock: Funds cannot be withdrawn yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e7212fb11a2184a0ca446b2dc9ca7c85e03ff926b934553e3f180e74bb204561",
                          "typeString": "literal_string \"Timelock: Funds cannot be withdrawn yet\""
                        }
                      ],
                      "id": 18826,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3085:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3085:71:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18833,
                  "nodeType": "ExpressionStatement",
                  "src": "3085:71:61"
                },
                {
                  "assignments": [
                    18835
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18835,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 18881,
                      "src": "3166:21:61",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$18615_storage_ptr",
                        "typeString": "struct ERC20Vault.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 18834,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 18615,
                        "src": "3166:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$18615_storage_ptr",
                          "typeString": "struct ERC20Vault.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 18842,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 18836,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18628,
                        "src": "3190:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$18615_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct ERC20Vault.UserInfo storage ref))"
                        }
                      },
                      "id": 18838,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 18837,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18809,
                        "src": "3199:4:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3190:14:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$18615_storage_$",
                        "typeString": "mapping(address => struct ERC20Vault.UserInfo storage ref)"
                      }
                    },
                    "id": 18841,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 18839,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3205:3:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 18840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3205:10:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3190:26:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$18615_storage",
                      "typeString": "struct ERC20Vault.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3166:50:61"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 18847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 18844,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18835,
                            "src": "3234:4:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$18615_storage_ptr",
                              "typeString": "struct ERC20Vault.UserInfo storage pointer"
                            }
                          },
                          "id": 18845,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18614,
                          "src": "3234:11:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 18846,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18811,
                          "src": "3248:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3234:21:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "77697468647261773a20756e73756666696369656e742066756e647320696e2074686520706f6f6c",
                        "id": 18848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3256:42:61",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_897eade12d5db99253a435e52b24fb47221853517d0352d6fff660b021ec382d",
                          "typeString": "literal_string \"withdraw: unsufficient funds in the pool\""
                        },
                        "value": "withdraw: unsufficient funds in the pool"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_897eade12d5db99253a435e52b24fb47221853517d0352d6fff660b021ec382d",
                          "typeString": "literal_string \"withdraw: unsufficient funds in the pool\""
                        }
                      ],
                      "id": 18843,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3226:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3226:73:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18850,
                  "nodeType": "ExpressionStatement",
                  "src": "3226:73:61"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 18859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 18851,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18835,
                        "src": "3309:4:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$18615_storage_ptr",
                          "typeString": "struct ERC20Vault.UserInfo storage pointer"
                        }
                      },
                      "id": 18853,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18614,
                      "src": "3309:11:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 18857,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18811,
                          "src": "3339:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 18854,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18835,
                            "src": "3323:4:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$18615_storage_ptr",
                              "typeString": "struct ERC20Vault.UserInfo storage pointer"
                            }
                          },
                          "id": 18855,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18614,
                          "src": "3323:11:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 18856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17610,
                        "src": "3323:15:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 18858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3323:24:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3309:38:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 18860,
                  "nodeType": "ExpressionStatement",
                  "src": "3309:38:61"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 18868,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3385:3:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 18869,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3385:10:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 18867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3377:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18866,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3377:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 18870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3377:19:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 18871,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18811,
                        "src": "3397:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 18861,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18815,
                          "src": "3357:4:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$18622_storage_ptr",
                            "typeString": "struct ERC20Vault.PoolInfo storage pointer"
                          }
                        },
                        "id": 18864,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18617,
                        "src": "3357:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$19811",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 18865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19765,
                      "src": "3357:19:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 18872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3357:48:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 18873,
                  "nodeType": "ExpressionStatement",
                  "src": "3357:48:61"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 18875,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3429:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 18876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3429:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 18877,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18809,
                        "src": "3441:4:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 18878,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18811,
                        "src": "3447:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 18874,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18604,
                      "src": "3420:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 18879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3420:35:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18880,
                  "nodeType": "EmitStatement",
                  "src": "3415:40:61"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "441a3e70",
            "id": 18882,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 18812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18809,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 18882,
                  "src": "2917:12:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18808,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2917:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18811,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 18882,
                  "src": "2931:15:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18810,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2931:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2916:31:61"
            },
            "returnParameters": {
              "id": 18813,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2954:0:61"
            },
            "scope": 18980,
            "src": "2899:563:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 18933,
              "nodeType": "Block",
              "src": "3546:325:61",
              "statements": [
                {
                  "assignments": [
                    18888
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18888,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 18933,
                      "src": "3556:21:61",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$18622_storage_ptr",
                        "typeString": "struct ERC20Vault.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 18887,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 18622,
                        "src": "3556:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$18622_storage_ptr",
                          "typeString": "struct ERC20Vault.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 18892,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 18889,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18631,
                      "src": "3580:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$18622_storage_$dyn_storage",
                        "typeString": "struct ERC20Vault.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 18891,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 18890,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18884,
                      "src": "3589:4:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3580:14:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$18622_storage",
                      "typeString": "struct ERC20Vault.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3556:38:61"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 18894,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18888,
                          "src": "3612:4:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$18622_storage_ptr",
                            "typeString": "struct ERC20Vault.PoolInfo storage pointer"
                          }
                        },
                        "id": 18895,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "withdrawable",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18619,
                        "src": "3612:17:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5769746864726177696e672066726f6d20706f6f6c2064697361626c6564",
                        "id": 18896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3630:32:61",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b882ae3a50b9668ae6ac4958890c610e41432a002d525546f83cff7ab919fc97",
                          "typeString": "literal_string \"Withdrawing from pool disabled\""
                        },
                        "value": "Withdrawing from pool disabled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b882ae3a50b9668ae6ac4958890c610e41432a002d525546f83cff7ab919fc97",
                          "typeString": "literal_string \"Withdrawing from pool disabled\""
                        }
                      ],
                      "id": 18893,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3604:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3604:59:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18898,
                  "nodeType": "ExpressionStatement",
                  "src": "3604:59:61"
                },
                {
                  "assignments": [
                    18900
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18900,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 18933,
                      "src": "3673:21:61",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$18615_storage_ptr",
                        "typeString": "struct ERC20Vault.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 18899,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 18615,
                        "src": "3673:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$18615_storage_ptr",
                          "typeString": "struct ERC20Vault.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 18907,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 18901,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18628,
                        "src": "3697:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$18615_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct ERC20Vault.UserInfo storage ref))"
                        }
                      },
                      "id": 18903,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 18902,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18884,
                        "src": "3706:4:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3697:14:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$18615_storage_$",
                        "typeString": "mapping(address => struct ERC20Vault.UserInfo storage ref)"
                      }
                    },
                    "id": 18906,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 18904,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3712:3:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 18905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3712:10:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3697:26:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$18615_storage",
                      "typeString": "struct ERC20Vault.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3673:50:61"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 18912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 18908,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18900,
                        "src": "3733:4:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$18615_storage_ptr",
                          "typeString": "struct ERC20Vault.UserInfo storage pointer"
                        }
                      },
                      "id": 18910,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18614,
                      "src": "3733:11:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 18911,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3747:1:61",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3733:15:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 18913,
                  "nodeType": "ExpressionStatement",
                  "src": "3733:15:61"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 18919,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3778:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 18920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3778:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 18921,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18900,
                          "src": "3789:4:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$18615_storage_ptr",
                            "typeString": "struct ERC20Vault.UserInfo storage pointer"
                          }
                        },
                        "id": 18922,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18614,
                        "src": "3789:11:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 18914,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18888,
                          "src": "3758:4:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$18622_storage_ptr",
                            "typeString": "struct ERC20Vault.PoolInfo storage pointer"
                          }
                        },
                        "id": 18917,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18617,
                        "src": "3758:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$19811",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 18918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19765,
                      "src": "3758:19:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 18923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3758:43:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 18924,
                  "nodeType": "ExpressionStatement",
                  "src": "3758:43:61"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 18926,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3834:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 18927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3834:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 18928,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18884,
                        "src": "3846:4:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 18929,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18900,
                          "src": "3852:4:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$18615_storage_ptr",
                            "typeString": "struct ERC20Vault.UserInfo storage pointer"
                          }
                        },
                        "id": 18930,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18614,
                        "src": "3852:11:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 18925,
                      "name": "EmergencyWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18612,
                      "src": "3816:17:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 18931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3816:48:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18932,
                  "nodeType": "EmitStatement",
                  "src": "3811:53:61"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "5312ea8e",
            "id": 18934,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "emergencyWithdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 18885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18884,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 18934,
                  "src": "3525:12:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18883,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3525:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3524:14:61"
            },
            "returnParameters": {
              "id": 18886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3546:0:61"
            },
            "scope": 18980,
            "src": "3498:373:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 18962,
              "nodeType": "Block",
              "src": "4099:183:61",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 18944,
                          "name": "isOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17517,
                          "src": "4155:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 18945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4155:9:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 18943,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4147:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 18946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4147:18:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18947,
                  "nodeType": "ExpressionStatement",
                  "src": "4147:18:61"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 18950,
                            "name": "contractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18940,
                            "src": "4194:15:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 18949,
                          "name": "isContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18979,
                          "src": "4183:10:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) returns (bool)"
                          }
                        },
                        "id": 18951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4183:27:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 18948,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4175:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 18952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4175:36:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18953,
                  "nodeType": "ExpressionStatement",
                  "src": "4175:36:61"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 18958,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18940,
                        "src": "4250:15:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 18959,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18938,
                        "src": "4267:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 18955,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18936,
                            "src": "4228:12:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 18954,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19811,
                          "src": "4221:6:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$19811_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 18956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4221:20:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$19811",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 18957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19785,
                      "src": "4221:28:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 18960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4221:54:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 18961,
                  "nodeType": "ExpressionStatement",
                  "src": "4221:54:61"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "bb9289a6",
            "id": 18963,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setContractAllowance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 18941,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18936,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 18963,
                  "src": "4030:20:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18935,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4030:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18938,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 18963,
                  "src": "4052:15:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18937,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4052:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18940,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 18963,
                  "src": "4068:23:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18939,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4068:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4029:63:61"
            },
            "returnParameters": {
              "id": 18942,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4099:0:61"
            },
            "scope": 18980,
            "src": "4000:282:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 18978,
              "nodeType": "Block",
              "src": "4343:97:61",
              "statements": [
                {
                  "assignments": [
                    18971
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18971,
                      "mutability": "mutable",
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 18978,
                      "src": "4353:9:61",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 18970,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4353:4:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 18972,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4353:9:61"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "4381:28:61",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4383:24:61",
                        "value": {
                          "arguments": [
                            {
                              "name": "addr",
                              "nodeType": "YulIdentifier",
                              "src": "4402:4:61"
                            }
                          ],
                          "functionName": {
                            "name": "extcodesize",
                            "nodeType": "YulIdentifier",
                            "src": "4390:11:61"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4390:17:61"
                        },
                        "variableNames": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "4383:4:61"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 18965,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4402:4:61",
                      "valueSize": 1
                    },
                    {
                      "declaration": 18971,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4383:4:61",
                      "valueSize": 1
                    }
                  ],
                  "id": 18973,
                  "nodeType": "InlineAssembly",
                  "src": "4372:37:61"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 18976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 18974,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18971,
                      "src": "4425:4:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 18975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4432:1:61",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4425:8:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 18969,
                  "id": 18977,
                  "nodeType": "Return",
                  "src": "4418:15:61"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "16279055",
            "id": 18979,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 18966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18965,
                  "mutability": "mutable",
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 18979,
                  "src": "4308:12:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18964,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4308:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4307:14:61"
            },
            "returnParameters": {
              "id": 18969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18968,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 18979,
                  "src": "4338:4:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 18967,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4338:4:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4337:6:61"
            },
            "scope": 18980,
            "src": "4288:152:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 18981,
        "src": "128:4315:61"
      }
    ],
    "src": "0:4444:61"
  },
  "bytecode": "608060405234801561001057600080fd5b50610de6806100206000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806379ba5097116100a2578063a87980e711610071578063a87980e71461029b578063bb9289a6146102cf578063d4ee1d9014610305578063e2bbb1581461030d578063f2fde38b146103305761010b565b806379ba50971461023b5780638da5cb5b146102435780638f32d59b1461026757806393f1a40b1461026f5761010b565b80635207cc0d116100de5780635207cc0d146101bc5780635312ea8e146101e157806357283e22146101fe57806369ac5721146102215761010b565b80631526fe27146101105780631627905514610155578063441a3e701461018f5780634c462771146101b4575b600080fd5b61012d6004803603602081101561012657600080fd5b5035610356565b604080516001600160a01b039094168452911515602084015282820152519081900360600190f35b61017b6004803603602081101561016b57600080fd5b50356001600160a01b0316610396565b604080519115158252519081900360200190f35b6101b2600480360360408110156101a557600080fd5b508035906020013561039c565b005b6101b261056b565b6101b2600480360360408110156101d257600080fd5b50803590602001351515610576565b6101b2600480360360208110156101f757600080fd5b50356105c3565b6101b26004803603604081101561021457600080fd5b508035906020013561071b565b610229610768565b60408051918252519081900360200190f35b6101b261076e565b61024b6107e9565b604080516001600160a01b039092168252519081900360200190f35b61017b6107f8565b6102296004803603604081101561028557600080fd5b50803590602001356001600160a01b0316610809565b6101b2600480360360608110156102b157600080fd5b506001600160a01b0381351690602081013515159060400135610826565b6101b2600480360360608110156102e557600080fd5b506001600160a01b0381358116916020810135916040909101351661099a565b61024b610a45565b6101b26004803603604081101561032357600080fd5b5080359060200135610a54565b6101b26004803603602081101561034657600080fd5b50356001600160a01b0316610b5e565b6004818154811061036357fe5b6000918252602090912060029091020180546001909101546001600160a01b0382169250600160a01b90910460ff169083565b3b151590565b6000600483815481106103ab57fe5b600091825260209091206002909102018054909150600160a01b900460ff166104055760405162461bcd60e51b8152600401808060200182810382526021815260200180610d696021913960400191505060405180910390fd5b80600101544210156104485760405162461bcd60e51b8152600401808060200182810382526027815260200180610d8a6027913960400191505060405180910390fd5b6000838152600360209081526040808320338452909152902080548311156104a15760405162461bcd60e51b8152600401808060200182810382526028815260200180610d416028913960400191505060405180910390fd5b80546104ad9084610b91565b815581546040805163a9059cbb60e01b81523360048201526024810186905290516001600160a01b039092169163a9059cbb916044808201926020929091908290030181600087803b15801561050257600080fd5b505af1158015610516573d6000803e3d6000fd5b505050506040513d602081101561052c57600080fd5b5050604080518481529051859133917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689181900360200190a350505050565b61057433610bda565b565b61057e6107f8565b61058757600080fd5b806004838154811061059557fe5b600091825260209091206002909102018054911515600160a01b0260ff60a01b199092169190911790555050565b6000600482815481106105d257fe5b600091825260209091206002909102018054909150600160a01b900460ff16610642576040805162461bcd60e51b815260206004820152601e60248201527f5769746864726177696e672066726f6d20706f6f6c2064697361626c65640000604482015290519081900360640190fd5b6000828152600360209081526040808320338085529083528184208481558554835163a9059cbb60e01b8152600481019390935260248301869052925190946001600160a01b039093169363a9059cbb936044808501949293928390030190829087803b1580156106b257600080fd5b505af11580156106c6573d6000803e3d6000fd5b505050506040513d60208110156106dc57600080fd5b505080546040805191825251849133917fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959181900360200190a3505050565b6107236107f8565b61072c57600080fd5b60006004838154811061073b57fe5b9060005260206000209060020201905061075e8242610c4f90919063ffffffff16565b6001909101555050565b60025481565b6001546001600160a01b0316331461078557600080fd5b600154600080546040516001600160a01b0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b600360209081526000928352604080842090915290825290205481565b61082e6107f8565b61083757600080fd5b60006108434283610c4f565b60045490915060005b818110156108e057856001600160a01b03166004828154811061086b57fe5b60009182526020909120600290910201546001600160a01b031614156108d8576040805162461bcd60e51b815260206004820152601860248201527f4572726f7220706f6f6c20616c72656164792061646465640000000000000000604482015290519081900360640190fd5b60010161084c565b5050604080516060810182526001600160a01b039586168152931515602085019081529084019182526004805460018101825560009190915293517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6002909502948501805492516001600160a01b0319909316919096161760ff60a01b1916600160a01b91151591909102179093555090517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c90910155565b6109a26107f8565b6109ab57600080fd5b6109b481610396565b6109bd57600080fd5b826001600160a01b031663095ea7b382846040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610a1457600080fd5b505af1158015610a28573d6000803e3d6000fd5b505050506040513d6020811015610a3e57600080fd5b5050505050565b6001546001600160a01b031681565b600060048381548110610a6357fe5b60009182526020808320868452600382526040808520338087529084528186206002909502909201805482516323b872dd60e01b8152600481019490945230602485015260448401899052915190965093946001600160a01b0391909116936323b872dd936064808501949193918390030190829087803b158015610ae757600080fd5b505af1158015610afb573d6000803e3d6000fd5b505050506040513d6020811015610b1157600080fd5b50508054610b1f9084610c4f565b8155604080518481529051859133917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a350505050565b610b666107f8565b610b6f57600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000610bd383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ca9565b9392505050565b600054600160a01b900460ff1615610bf157600080fd5b6000805460ff60a01b196001600160a01b038085166001600160a01b03199093169290921716600160a01b17808355604051911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350565b600082820183811015610bd3576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60008184841115610d385760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610cfd578181015183820152602001610ce5565b50505050905090810190601f168015610d2a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe77697468647261773a20756e73756666696369656e742066756e647320696e2074686520706f6f6c5769746864726177696e672066726f6d20706f6f6c2069732064697361626c656454696d656c6f636b3a2046756e64732063616e6e6f742062652077697468647261776e20796574a2646970667358221220c6be21b4cd0049a47e864fd3e6eb6acf48f3805fa7de1d5b472c096707a5b90064736f6c634300060c0033",
  "bytecodeSha1": "9435441eeb018e3aa656b77be07e56df30834bde",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "ERC20Vault",
  "coverageMap": {
    "branches": {
      "57": {
        "Owned._initOwned": {
          "53": [
            412,
            424,
            true
          ]
        },
        "Owned.acceptOwnership": {
          "51": [
            918,
            940,
            true
          ]
        },
        "Owned.transferOwnership": {
          "52": [
            813,
            822,
            true
          ]
        }
      },
      "58": {
        "SafeMathPlus.add": {
          "54": [
            444,
            450,
            true
          ]
        },
        "SafeMathPlus.sub": {
          "55": [
            764,
            770,
            true
          ]
        }
      },
      "61": {
        "ERC20Vault.add": {
          "47": [
            1622,
            1631,
            true
          ],
          "48": [
            1808,
            1837,
            true
          ]
        },
        "ERC20Vault.emergencyWithdraw": {
          "45": [
            3612,
            3629,
            true
          ]
        },
        "ERC20Vault.setContractAllowance": {
          "49": [
            4155,
            4164,
            true
          ],
          "50": [
            4183,
            4210,
            true
          ]
        },
        "ERC20Vault.setPoolWithdrawable": {
          "44": [
            2197,
            2206,
            true
          ]
        },
        "ERC20Vault.updatePoolEndDate": {
          "46": [
            2390,
            2399,
            true
          ]
        },
        "ERC20Vault.withdraw": {
          "41": [
            3020,
            3037,
            true
          ],
          "42": [
            3093,
            3112,
            true
          ],
          "43": [
            3234,
            3255,
            true
          ]
        }
      },
      "63": {}
    },
    "statements": {
      "57": {
        "Owned._initOwned": {
          "35": [
            404,
            425
          ],
          "36": [
            435,
            468
          ],
          "37": [
            478,
            496
          ],
          "38": [
            506,
            551
          ]
        },
        "Owned.acceptOwnership": {
          "16": [
            910,
            941
          ],
          "17": [
            951,
            994
          ],
          "18": [
            1004,
            1039
          ],
          "19": [
            1049,
            1070
          ]
        },
        "Owned.isOwner": {
          "21": [
            702,
            729
          ]
        },
        "Owned.owner": {
          "20": [
            621,
            634
          ]
        },
        "Owned.transferOwnership": {
          "32": [
            805,
            823
          ],
          "33": [
            833,
            853
          ]
        }
      },
      "58": {
        "SafeMathPlus.add": {
          "39": [
            436,
            482
          ]
        },
        "SafeMathPlus.sub": {
          "34": [
            589,
            639
          ],
          "40": [
            756,
            785
          ]
        }
      },
      "61": {
        "ERC20Vault.add": {
          "22": [
            1614,
            1632
          ],
          "23": [
            1800,
            1865
          ],
          "24": [
            1779,
            1784
          ],
          "25": [
            1895,
            2027
          ]
        },
        "ERC20Vault.deposit": {
          "29": [
            2721,
            2789
          ],
          "30": [
            2799,
            2837
          ],
          "31": [
            2847,
            2886
          ]
        },
        "ERC20Vault.emergencyWithdraw": {
          "10": [
            3604,
            3663
          ],
          "11": [
            3733,
            3748
          ],
          "12": [
            3758,
            3801
          ],
          "13": [
            3811,
            3864
          ]
        },
        "ERC20Vault.initERC20Vault": {
          "7": [
            1162,
            1186
          ]
        },
        "ERC20Vault.isContract": {
          "0": [
            4418,
            4433
          ]
        },
        "ERC20Vault.setContractAllowance": {
          "26": [
            4147,
            4165
          ],
          "27": [
            4175,
            4211
          ],
          "28": [
            4221,
            4275
          ]
        },
        "ERC20Vault.setPoolWithdrawable": {
          "8": [
            2189,
            2207
          ],
          "9": [
            2217,
            2260
          ]
        },
        "ERC20Vault.updatePoolEndDate": {
          "14": [
            2382,
            2400
          ],
          "15": [
            2458,
            2503
          ]
        },
        "ERC20Vault.withdraw": {
          "1": [
            3012,
            3075
          ],
          "2": [
            3085,
            3156
          ],
          "3": [
            3226,
            3299
          ],
          "4": [
            3309,
            3347
          ],
          "5": [
            3357,
            3405
          ],
          "6": [
            3415,
            3455
          ]
        }
      },
      "63": {}
    }
  },
  "dependencies": [
    "IERC20",
    "Owned",
    "SafeMathPlus"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061010b5760003560e01c806379ba5097116100a2578063a87980e711610071578063a87980e71461029b578063bb9289a6146102cf578063d4ee1d9014610305578063e2bbb1581461030d578063f2fde38b146103305761010b565b806379ba50971461023b5780638da5cb5b146102435780638f32d59b1461026757806393f1a40b1461026f5761010b565b80635207cc0d116100de5780635207cc0d146101bc5780635312ea8e146101e157806357283e22146101fe57806369ac5721146102215761010b565b80631526fe27146101105780631627905514610155578063441a3e701461018f5780634c462771146101b4575b600080fd5b61012d6004803603602081101561012657600080fd5b5035610356565b604080516001600160a01b039094168452911515602084015282820152519081900360600190f35b61017b6004803603602081101561016b57600080fd5b50356001600160a01b0316610396565b604080519115158252519081900360200190f35b6101b2600480360360408110156101a557600080fd5b508035906020013561039c565b005b6101b261056b565b6101b2600480360360408110156101d257600080fd5b50803590602001351515610576565b6101b2600480360360208110156101f757600080fd5b50356105c3565b6101b26004803603604081101561021457600080fd5b508035906020013561071b565b610229610768565b60408051918252519081900360200190f35b6101b261076e565b61024b6107e9565b604080516001600160a01b039092168252519081900360200190f35b61017b6107f8565b6102296004803603604081101561028557600080fd5b50803590602001356001600160a01b0316610809565b6101b2600480360360608110156102b157600080fd5b506001600160a01b0381351690602081013515159060400135610826565b6101b2600480360360608110156102e557600080fd5b506001600160a01b0381358116916020810135916040909101351661099a565b61024b610a45565b6101b26004803603604081101561032357600080fd5b5080359060200135610a54565b6101b26004803603602081101561034657600080fd5b50356001600160a01b0316610b5e565b6004818154811061036357fe5b6000918252602090912060029091020180546001909101546001600160a01b0382169250600160a01b90910460ff169083565b3b151590565b6000600483815481106103ab57fe5b600091825260209091206002909102018054909150600160a01b900460ff166104055760405162461bcd60e51b8152600401808060200182810382526021815260200180610d696021913960400191505060405180910390fd5b80600101544210156104485760405162461bcd60e51b8152600401808060200182810382526027815260200180610d8a6027913960400191505060405180910390fd5b6000838152600360209081526040808320338452909152902080548311156104a15760405162461bcd60e51b8152600401808060200182810382526028815260200180610d416028913960400191505060405180910390fd5b80546104ad9084610b91565b815581546040805163a9059cbb60e01b81523360048201526024810186905290516001600160a01b039092169163a9059cbb916044808201926020929091908290030181600087803b15801561050257600080fd5b505af1158015610516573d6000803e3d6000fd5b505050506040513d602081101561052c57600080fd5b5050604080518481529051859133917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689181900360200190a350505050565b61057433610bda565b565b61057e6107f8565b61058757600080fd5b806004838154811061059557fe5b600091825260209091206002909102018054911515600160a01b0260ff60a01b199092169190911790555050565b6000600482815481106105d257fe5b600091825260209091206002909102018054909150600160a01b900460ff16610642576040805162461bcd60e51b815260206004820152601e60248201527f5769746864726177696e672066726f6d20706f6f6c2064697361626c65640000604482015290519081900360640190fd5b6000828152600360209081526040808320338085529083528184208481558554835163a9059cbb60e01b8152600481019390935260248301869052925190946001600160a01b039093169363a9059cbb936044808501949293928390030190829087803b1580156106b257600080fd5b505af11580156106c6573d6000803e3d6000fd5b505050506040513d60208110156106dc57600080fd5b505080546040805191825251849133917fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959181900360200190a3505050565b6107236107f8565b61072c57600080fd5b60006004838154811061073b57fe5b9060005260206000209060020201905061075e8242610c4f90919063ffffffff16565b6001909101555050565b60025481565b6001546001600160a01b0316331461078557600080fd5b600154600080546040516001600160a01b0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b600360209081526000928352604080842090915290825290205481565b61082e6107f8565b61083757600080fd5b60006108434283610c4f565b60045490915060005b818110156108e057856001600160a01b03166004828154811061086b57fe5b60009182526020909120600290910201546001600160a01b031614156108d8576040805162461bcd60e51b815260206004820152601860248201527f4572726f7220706f6f6c20616c72656164792061646465640000000000000000604482015290519081900360640190fd5b60010161084c565b5050604080516060810182526001600160a01b039586168152931515602085019081529084019182526004805460018101825560009190915293517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6002909502948501805492516001600160a01b0319909316919096161760ff60a01b1916600160a01b91151591909102179093555090517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c90910155565b6109a26107f8565b6109ab57600080fd5b6109b481610396565b6109bd57600080fd5b826001600160a01b031663095ea7b382846040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610a1457600080fd5b505af1158015610a28573d6000803e3d6000fd5b505050506040513d6020811015610a3e57600080fd5b5050505050565b6001546001600160a01b031681565b600060048381548110610a6357fe5b60009182526020808320868452600382526040808520338087529084528186206002909502909201805482516323b872dd60e01b8152600481019490945230602485015260448401899052915190965093946001600160a01b0391909116936323b872dd936064808501949193918390030190829087803b158015610ae757600080fd5b505af1158015610afb573d6000803e3d6000fd5b505050506040513d6020811015610b1157600080fd5b50508054610b1f9084610c4f565b8155604080518481529051859133917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a350505050565b610b666107f8565b610b6f57600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000610bd383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ca9565b9392505050565b600054600160a01b900460ff1615610bf157600080fd5b6000805460ff60a01b196001600160a01b038085166001600160a01b03199093169290921716600160a01b17808355604051911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350565b600082820183811015610bd3576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60008184841115610d385760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610cfd578181015183820152602001610ce5565b50505050905090810190601f168015610d2a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe77697468647261773a20756e73756666696369656e742066756e647320696e2074686520706f6f6c5769746864726177696e672066726f6d20706f6f6c2069732064697361626c656454696d656c6f636b3a2046756e64732063616e6e6f742062652077697468647261776e20796574a2646970667358221220c6be21b4cd0049a47e864fd3e6eb6acf48f3805fa7de1d5b472c096707a5b90064736f6c634300060c0033",
  "deployedSourceMap": "128:4315:61:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1087:26;;;;;;;;;;;;;;;;-1:-1:-1;1087:26:61;;:::i;:::-;;;;-1:-1:-1;;;;;1087:26:61;;;;;;;;;;;;;;;;;;;;;;;;;4288:152;;;;;;;;;;;;;;;;-1:-1:-1;4288:152:61;-1:-1:-1;;;;;4288:152:61;;:::i;:::-;;;;;;;;;;;;;;;;;;2899:563;;;;;;;;;;;;;;;;-1:-1:-1;2899:563:61;;;;;;;:::i;:::-;;1120:113;;;:::i;2103:164::-;;;;;;;;;;;;;;;;-1:-1:-1;2103:164:61;;;;;;;;;:::i;3498:373::-;;;;;;;;;;;;;;;;-1:-1:-1;3498:373:61;;:::i;2306:204::-;;;;;;;;;;;;;;;;-1:-1:-1;2306:204:61;;;;;;;:::i;199:25::-;;;:::i;:::-;;;;;;;;;;;;;;;;866:211:57;;;:::i;564:77::-;;;:::i;:::-;;;;-1:-1:-1;;;;;564:77:57;;;;;;;;;;;;;;646:90;;;:::i;990:64:61:-;;;;;;;;;;;;;;;;-1:-1:-1;990:64:61;;;;;;-1:-1:-1;;;;;990:64:61;;:::i;1531:503::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1531:503:61;;;;;;;;;;;;;;;:::i;4000:282::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4000:282:61;;;;;;;;;;;;;;;;;:::i;156:23:57:-;;;:::i;2548:345:61:-;;;;;;;;;;;;;;;;-1:-1:-1;2548:345:61;;;;;;;:::i;742:118:57:-;;;;;;;;;;;;;;;;-1:-1:-1;742:118:57;-1:-1:-1;;;;;742:118:57;;:::i;1087:26:61:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1087:26:61;;;-1:-1:-1;;;;1087:26:61;;;;;;;:::o;4288:152::-;4390:17;4425:8;;;4288:152::o;2899:563::-;2964:21;2988:8;2997:4;2988:14;;;;;;;;;;;;;;;;;;;;;3020:17;;2988:14;;-1:-1:-1;;;;3020:17:61;;;;3012:63;;;;-1:-1:-1;;;3012:63:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3100:4;:12;;;3093:3;:19;;3085:71;;;;-1:-1:-1;;;3085:71:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3166:21;3190:14;;;:8;:14;;;;;;;;3205:10;3190:26;;;;;;;3234:11;;:21;-1:-1:-1;3234:21:61;3226:73;;;;-1:-1:-1;;;3226:73:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3323:11;;:24;;3339:7;3323:15;:24::i;:::-;3309:38;;3357:10;;:48;;;-1:-1:-1;;;3357:48:61;;3385:10;3357:48;;;;;;;;;;;;-1:-1:-1;;;;;3357:10:61;;;;:19;;:48;;;;;;;;;;;;;;;3309:11;3357:10;:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3420:35:61;;;;;;;;3441:4;;3429:10;;3420:35;;;;;3357:48;3420:35;;;2899:563;;;;:::o;1120:113::-;1162:24;1174:10;1162;:24::i;:::-;1120:113::o;2103:164::-;2197:9;:7;:9::i;:::-;2189:18;;;;;;2247:13;2217:8;2226:4;2217:14;;;;;;;;;;;;;;;;;;;;;:43;;;;;-1:-1:-1;;;2217:43:61;-1:-1:-1;;;;2217:43:61;;;;;;;;;-1:-1:-1;;2103:164:61:o;3498:373::-;3556:21;3580:8;3589:4;3580:14;;;;;;;;;;;;;;;;;;;;;3612:17;;3580:14;;-1:-1:-1;;;;3612:17:61;;;;3604:59;;;;;-1:-1:-1;;;3604:59:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;3673:21;3697:14;;;:8;:14;;;;;;;;3712:10;3697:26;;;;;;;;;3733:15;;;3758:10;;:43;;-1:-1:-1;;;3758:43:61;;;;;;;;;;;;;;;;;3697:26;;-1:-1:-1;;;;;3758:10:61;;;;:19;;:43;;;;;3697:14;;3758:43;;;;;;;;:10;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3852:11:61;;3816:48;;;;;;;3846:4;;3834:10;;3816:48;;;;;3758:43;3816:48;;;3498:373;;;:::o;2306:204::-;2390:9;:7;:9::i;:::-;2382:18;;;;;;2410:21;2434:8;2443:4;2434:14;;;;;;;;;;;;;;;;;;2410:38;;2473:30;2493:9;2473:15;:19;;:30;;;;:::i;:::-;2458:12;;;;:45;-1:-1:-1;;2306:204:61:o;199:25::-;;;;:::o;866:211:57:-;932:8;;-1:-1:-1;;;;;932:8:57;918:10;:22;910:31;;;;;;985:8;;;977:6;;956:38;;-1:-1:-1;;;;;985:8:57;;;;977:6;;;;956:38;;;1029:8;;;;1004:35;;-1:-1:-1;;;;;;1004:35:57;;;-1:-1:-1;;;;;1029:8:57;;1004:35;;;;1049:21;;;866:211::o;564:77::-;602:7;628:6;-1:-1:-1;;;;;628:6:57;564:77;:::o;646:90::-;686:4;723:6;-1:-1:-1;;;;;723:6:57;709:10;:20;;646:90::o;990:64:61:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;1531:503::-;1622:9;:7;:9::i;:::-;1614:18;;;;;;1642:15;1660:30;:15;1680:9;1660:19;:30::i;:::-;1718:8;:15;1642:48;;-1:-1:-1;1701:14:61;1743:133;1771:6;1765:3;:12;1743:133;;;1831:6;-1:-1:-1;;;;;1808:29:61;:8;1817:3;1808:13;;;;;;;;;;;;;;;;;;;;;:19;-1:-1:-1;;;;;1808:19:61;:29;;1800:65;;;;;-1:-1:-1;;;1800:65:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:5;;1743:133;;;-1:-1:-1;;1909:117:61;;;;;;;;-1:-1:-1;;;;;1909:117:61;;;;;;;;;;;;;;;;;;;;1895:8;:132;;;;;;;-1:-1:-1;1895:132:61;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1895:132:61;;;;;;;;-1:-1:-1;;;;1895:132:61;-1:-1:-1;;;1895:132:61;;;;;;;;;;;-1:-1:-1;1895:132:61;;;;;;;1531:503::o;4000:282::-;4155:9;:7;:9::i;:::-;4147:18;;;;;;4183:27;4194:15;4183:10;:27::i;:::-;4175:36;;;;;;4228:12;-1:-1:-1;;;;;4221:28:61;;4250:15;4267:7;4221:54;;;;;;;;;;;;;-1:-1:-1;;;;;4221:54:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4000:282:61:o;156:23:57:-;;;-1:-1:-1;;;;;156:23:57;;:::o;2548:345:61:-;2612:21;2636:8;2645:4;2636:14;;;;;;;;;;;;;;;;2684;;;:8;:14;;;;;;2699:10;2684:26;;;;;;;;;2636:14;;;;;;;2721:10;;:68;;-1:-1:-1;;;2721:68:61;;;;;;;;;2774:4;2721:68;;;;;;;;;;;;2636:14;;-1:-1:-1;2684:26:61;;-1:-1:-1;;;;;2721:10:61;;;;;:23;;:68;;;;;2636:14;;2721:68;;;;;;;;:10;:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2813:11:61;;:24;;2829:7;2813:15;:24::i;:::-;2799:38;;2852:34;;;;;;;;2872:4;;2860:10;;2852:34;;;;;;;;;2548:345;;;;:::o;742:118:57:-;813:9;:7;:9::i;:::-;805:18;;;;;;833:8;:20;;-1:-1:-1;;;;;;833:20:57;-1:-1:-1;;;;;833:20:57;;;;;;;;;;742:118::o;512:134:58:-;570:7;596:43;600:1;603;596:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;589:50;512:134;-1:-1:-1;;;512:134:58:o;349:209:57:-;413:11;;-1:-1:-1;;;413:11:57;;;;412:12;404:21;;;;;;435:6;:33;;-1:-1:-1;;;;;;;;;435:33:57;;;-1:-1:-1;;;;;;435:33:57;;;;;;;478:18;-1:-1:-1;;;478:18:57;;;;511:40;;544:6;;;435;511:40;;435:6;;511:40;349:209;:::o;332:175:58:-;390:7;421:5;;;444:6;;;;436:46;;;;;-1:-1:-1;;;436:46:58;;;;;;;;;;;;;;;;;;;;;;;;;;;651:186;737:7;772:12;764:6;;;;756:29;;;;-1:-1:-1;;;756:29:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;807:5:58;;;651:186::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    128,
    4443
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA87980E7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA87980E7 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0xBB9289A6 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x330 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x26F JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x5207CC0D GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x5207CC0D EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x57283E22 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x69AC5721 EQ PUSH2 0x221 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x16279055 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x4C462771 EQ PUSH2 0x1B4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x356 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x396 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x39C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B2 PUSH2 0x56B JUMP JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x576 JUMP JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x71B JUMP JUMPDEST PUSH2 0x229 PUSH2 0x768 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x24B PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x809 JUMP JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x826 JUMP JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0x99A JUMP JUMPDEST PUSH2 0x24B PUSH2 0xA45 JUMP JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB5E JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x363 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP3 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 DUP4 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3AB JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD69 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x448 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD8A PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD DUP4 GT ISZERO PUSH2 0x4A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD41 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH2 0x4AD SWAP1 DUP5 PUSH2 0xB91 JUMP JUMPDEST DUP2 SSTORE DUP2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x516 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x52C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD DUP6 SWAP2 CALLER SWAP2 PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x574 CALLER PUSH2 0xBDA JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x57E PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x595 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5D2 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x642 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5769746864726177696E672066726F6D20706F6F6C2064697361626C65640000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP5 DUP2 SSTORE DUP6 SLOAD DUP4 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD DUP7 SWAP1 MSTORE SWAP3 MLOAD SWAP1 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP4 PUSH4 0xA9059CBB SWAP4 PUSH1 0x44 DUP1 DUP6 ADD SWAP5 SWAP3 SWAP4 SWAP3 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD DUP5 SWAP2 CALLER SWAP2 PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x723 PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x72C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x73B JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP PUSH2 0x75E DUP3 TIMESTAMP PUSH2 0xC4F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x785 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x82E PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x837 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x843 TIMESTAMP DUP4 PUSH2 0xC4F JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8E0 JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x86B JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x8D8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F7220706F6F6C20616C72656164792061646465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 ADD PUSH2 0x84C JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP4 ISZERO ISZERO PUSH1 0x20 DUP6 ADD SWAP1 DUP2 MSTORE SWAP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE SWAP4 MLOAD PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x2 SWAP1 SWAP6 MUL SWAP5 DUP6 ADD DUP1 SLOAD SWAP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP7 AND OR PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SWAP4 SSTORE POP SWAP1 MLOAD PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19C SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH2 0x9A2 PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x9AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9B4 DUP2 PUSH2 0x396 JUMP JUMPDEST PUSH2 0x9BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95EA7B3 DUP3 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA28 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xA63 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x3 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP1 DUP8 MSTORE SWAP1 DUP5 MSTORE DUP2 DUP7 KECCAK256 PUSH1 0x2 SWAP1 SWAP6 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP3 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE ADDRESS PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD DUP10 SWAP1 MSTORE SWAP2 MLOAD SWAP1 SWAP7 POP SWAP4 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP4 PUSH4 0x23B872DD SWAP4 PUSH1 0x64 DUP1 DUP6 ADD SWAP5 SWAP2 SWAP4 SWAP2 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAFB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 SLOAD PUSH2 0xB1F SWAP1 DUP5 PUSH2 0xC4F JUMP JUMPDEST DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD DUP6 SWAP2 CALLER SWAP2 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0xB66 PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0xB6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD3 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xCA9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP1 DUP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xBD3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xD38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCFD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xCE5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xD2A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP INVALID PUSH24 0x697468647261773A20756E73756666696369656E74206675 PUSH15 0x647320696E2074686520706F6F6C57 PUSH10 0x746864726177696E6720 PUSH7 0x726F6D20706F6F PUSH13 0x2069732064697361626C656454 PUSH10 0x6D656C6F636B3A204675 PUSH15 0x64732063616E6E6F74206265207769 PUSH21 0x68647261776E20796574A2646970667358221220C6 0xBE 0x21 0xB4 0xCD STOP 0x49 LOG4 PUSH31 0x864FD3E6EB6ACF48F3805FA7DE1D5B472C096707A5B90064736F6C63430006 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        128,
        4443
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "5": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "CALLVALUE",
      "path": "61"
    },
    "6": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "DUP1",
      "path": "61"
    },
    "7": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "8": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "12": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "DUP1",
      "path": "61"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "REVERT",
      "path": "61"
    },
    "16": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "17": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "POP",
      "path": "61"
    },
    "18": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "CALLDATASIZE",
      "path": "61"
    },
    "21": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "LT",
      "path": "61"
    },
    "22": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x10B"
    },
    "25": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "26": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "CALLDATALOAD",
      "path": "61"
    },
    "29": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "SHR",
      "path": "61"
    },
    "32": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "DUP1",
      "path": "61"
    },
    "33": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH4",
      "path": "61",
      "value": "0x79BA5097"
    },
    "38": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "GT",
      "path": "61"
    },
    "39": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0xA2"
    },
    "42": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "43": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "DUP1",
      "path": "61"
    },
    "44": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH4",
      "path": "61",
      "value": "0xA87980E7"
    },
    "49": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "GT",
      "path": "61"
    },
    "50": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "54": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "DUP1",
      "path": "61"
    },
    "55": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH4",
      "path": "61",
      "value": "0xA87980E7"
    },
    "60": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "EQ",
      "path": "61"
    },
    "61": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x29B"
    },
    "64": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "65": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "DUP1",
      "path": "61"
    },
    "66": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH4",
      "path": "61",
      "value": "0xBB9289A6"
    },
    "71": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "EQ",
      "path": "61"
    },
    "72": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x2CF"
    },
    "75": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "76": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "DUP1",
      "path": "61"
    },
    "77": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH4",
      "path": "61",
      "value": "0xD4EE1D90"
    },
    "82": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "EQ",
      "path": "61"
    },
    "83": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x305"
    },
    "86": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "87": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "DUP1",
      "path": "61"
    },
    "88": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH4",
      "path": "61",
      "value": "0xE2BBB158"
    },
    "93": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "EQ",
      "path": "61"
    },
    "94": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x30D"
    },
    "97": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "98": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "DUP1",
      "path": "61"
    },
    "99": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH4",
      "path": "61",
      "value": "0xF2FDE38B"
    },
    "104": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "EQ",
      "path": "61"
    },
    "105": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x330"
    },
    "108": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "109": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x10B"
    },
    "112": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "JUMP",
      "path": "61"
    },
    "113": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "114": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "DUP1",
      "path": "61"
    },
    "115": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH4",
      "path": "61",
      "value": "0x79BA5097"
    },
    "120": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "EQ",
      "path": "61"
    },
    "121": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x23B"
    },
    "124": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "125": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "DUP1",
      "path": "61"
    },
    "126": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH4",
      "path": "61",
      "value": "0x8DA5CB5B"
    },
    "131": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "EQ",
      "path": "61"
    },
    "132": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x243"
    },
    "135": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "136": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "DUP1",
      "path": "61"
    },
    "137": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH4",
      "path": "61",
      "value": "0x8F32D59B"
    },
    "142": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "EQ",
      "path": "61"
    },
    "143": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x267"
    },
    "146": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "147": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "DUP1",
      "path": "61"
    },
    "148": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH4",
      "path": "61",
      "value": "0x93F1A40B"
    },
    "153": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "EQ",
      "path": "61"
    },
    "154": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x26F"
    },
    "157": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "158": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x10B"
    },
    "161": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "JUMP",
      "path": "61"
    },
    "162": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "163": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "DUP1",
      "path": "61"
    },
    "164": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH4",
      "path": "61",
      "value": "0x5207CC0D"
    },
    "169": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "GT",
      "path": "61"
    },
    "170": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0xDE"
    },
    "173": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "174": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "DUP1",
      "path": "61"
    },
    "175": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH4",
      "path": "61",
      "value": "0x5207CC0D"
    },
    "180": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "EQ",
      "path": "61"
    },
    "181": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x1BC"
    },
    "184": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "185": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "DUP1",
      "path": "61"
    },
    "186": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH4",
      "path": "61",
      "value": "0x5312EA8E"
    },
    "191": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "EQ",
      "path": "61"
    },
    "192": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x1E1"
    },
    "195": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "196": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "DUP1",
      "path": "61"
    },
    "197": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH4",
      "path": "61",
      "value": "0x57283E22"
    },
    "202": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "EQ",
      "path": "61"
    },
    "203": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x1FE"
    },
    "206": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "207": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "DUP1",
      "path": "61"
    },
    "208": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH4",
      "path": "61",
      "value": "0x69AC5721"
    },
    "213": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "EQ",
      "path": "61"
    },
    "214": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x221"
    },
    "217": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "218": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x10B"
    },
    "221": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "JUMP",
      "path": "61"
    },
    "222": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "223": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "DUP1",
      "path": "61"
    },
    "224": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH4",
      "path": "61",
      "value": "0x1526FE27"
    },
    "229": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "EQ",
      "path": "61"
    },
    "230": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x110"
    },
    "233": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "234": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "DUP1",
      "path": "61"
    },
    "235": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH4",
      "path": "61",
      "value": "0x16279055"
    },
    "240": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "EQ",
      "path": "61"
    },
    "241": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x155"
    },
    "244": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "245": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "DUP1",
      "path": "61"
    },
    "246": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH4",
      "path": "61",
      "value": "0x441A3E70"
    },
    "251": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "EQ",
      "path": "61"
    },
    "252": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x18F"
    },
    "255": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "256": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "DUP1",
      "path": "61"
    },
    "257": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH4",
      "path": "61",
      "value": "0x4C462771"
    },
    "262": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "EQ",
      "path": "61"
    },
    "263": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x1B4"
    },
    "266": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "267": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "268": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "270": {
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "DUP1",
      "path": "61"
    },
    "271": {
      "first_revert": true,
      "fn": null,
      "offset": [
        128,
        4443
      ],
      "op": "REVERT",
      "path": "61"
    },
    "272": {
      "offset": [
        1087,
        1113
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "273": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x12D"
    },
    "276": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x4"
    },
    "278": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "DUP1",
      "path": "61"
    },
    "279": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "CALLDATASIZE",
      "path": "61"
    },
    "280": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "SUB",
      "path": "61"
    },
    "281": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "283": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "DUP2",
      "path": "61"
    },
    "284": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "LT",
      "path": "61"
    },
    "285": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "286": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x126"
    },
    "289": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "290": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "292": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "DUP1",
      "path": "61"
    },
    "293": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "REVERT",
      "path": "61"
    },
    "294": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "295": {
      "op": "POP"
    },
    "296": {
      "offset": [
        1087,
        1113
      ],
      "op": "CALLDATALOAD",
      "path": "61"
    },
    "297": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x356"
    },
    "300": {
      "fn": null,
      "jump": "i",
      "offset": [
        1087,
        1113
      ],
      "op": "JUMP",
      "path": "61"
    },
    "301": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "302": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "304": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "DUP1",
      "path": "61"
    },
    "305": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "310": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "312": {
      "op": "SHL"
    },
    "313": {
      "op": "SUB"
    },
    "314": {
      "offset": [
        1087,
        1113
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "315": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "SWAP5",
      "path": "61"
    },
    "316": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "AND",
      "path": "61"
    },
    "317": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "DUP5",
      "path": "61"
    },
    "318": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "319": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "320": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "321": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "322": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "324": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "DUP5",
      "path": "61"
    },
    "325": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "ADD",
      "path": "61"
    },
    "326": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "327": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "DUP3",
      "path": "61"
    },
    "328": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "DUP3",
      "path": "61"
    },
    "329": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "ADD",
      "path": "61"
    },
    "330": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "331": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "332": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "333": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "DUP2",
      "path": "61"
    },
    "334": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "335": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "SUB",
      "path": "61"
    },
    "336": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x60"
    },
    "338": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "ADD",
      "path": "61"
    },
    "339": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "340": {
      "fn": null,
      "offset": [
        1087,
        1113
      ],
      "op": "RETURN",
      "path": "61"
    },
    "341": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "342": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x17B"
    },
    "345": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x4"
    },
    "347": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "DUP1",
      "path": "61"
    },
    "348": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "CALLDATASIZE",
      "path": "61"
    },
    "349": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "SUB",
      "path": "61"
    },
    "350": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "352": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "DUP2",
      "path": "61"
    },
    "353": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "LT",
      "path": "61"
    },
    "354": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "355": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x16B"
    },
    "358": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "359": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "361": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "DUP1",
      "path": "61"
    },
    "362": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "REVERT",
      "path": "61"
    },
    "363": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "364": {
      "op": "POP"
    },
    "365": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "CALLDATALOAD",
      "path": "61"
    },
    "366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "370": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "372": {
      "op": "SHL"
    },
    "373": {
      "op": "SUB"
    },
    "374": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "AND",
      "path": "61"
    },
    "375": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x396"
    },
    "378": {
      "fn": "ERC20Vault.isContract",
      "jump": "i",
      "offset": [
        4288,
        4440
      ],
      "op": "JUMP",
      "path": "61"
    },
    "379": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "380": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "382": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "DUP1",
      "path": "61"
    },
    "383": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "384": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "385": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "386": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "387": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "DUP3",
      "path": "61"
    },
    "388": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "389": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "390": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "391": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "DUP2",
      "path": "61"
    },
    "392": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "393": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "SUB",
      "path": "61"
    },
    "394": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "396": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "ADD",
      "path": "61"
    },
    "397": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "398": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "RETURN",
      "path": "61"
    },
    "399": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2899,
        3462
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "400": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2899,
        3462
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x1B2"
    },
    "403": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2899,
        3462
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x4"
    },
    "405": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2899,
        3462
      ],
      "op": "DUP1",
      "path": "61"
    },
    "406": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2899,
        3462
      ],
      "op": "CALLDATASIZE",
      "path": "61"
    },
    "407": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2899,
        3462
      ],
      "op": "SUB",
      "path": "61"
    },
    "408": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2899,
        3462
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "410": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2899,
        3462
      ],
      "op": "DUP2",
      "path": "61"
    },
    "411": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2899,
        3462
      ],
      "op": "LT",
      "path": "61"
    },
    "412": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2899,
        3462
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "413": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2899,
        3462
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x1A5"
    },
    "416": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2899,
        3462
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "417": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2899,
        3462
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "419": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2899,
        3462
      ],
      "op": "DUP1",
      "path": "61"
    },
    "420": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2899,
        3462
      ],
      "op": "REVERT",
      "path": "61"
    },
    "421": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2899,
        3462
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "422": {
      "op": "POP"
    },
    "423": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2899,
        3462
      ],
      "op": "DUP1",
      "path": "61"
    },
    "424": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2899,
        3462
      ],
      "op": "CALLDATALOAD",
      "path": "61"
    },
    "425": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2899,
        3462
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "426": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2899,
        3462
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "428": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2899,
        3462
      ],
      "op": "ADD",
      "path": "61"
    },
    "429": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2899,
        3462
      ],
      "op": "CALLDATALOAD",
      "path": "61"
    },
    "430": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2899,
        3462
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x39C"
    },
    "433": {
      "fn": "ERC20Vault.withdraw",
      "jump": "i",
      "offset": [
        2899,
        3462
      ],
      "op": "JUMP",
      "path": "61"
    },
    "434": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2899,
        3462
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "435": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2899,
        3462
      ],
      "op": "STOP",
      "path": "61"
    },
    "436": {
      "fn": "ERC20Vault.initERC20Vault",
      "offset": [
        1120,
        1233
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "437": {
      "fn": "ERC20Vault.initERC20Vault",
      "offset": [
        1120,
        1233
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x1B2"
    },
    "440": {
      "fn": "ERC20Vault.initERC20Vault",
      "offset": [
        1120,
        1233
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x56B"
    },
    "443": {
      "fn": "ERC20Vault.initERC20Vault",
      "jump": "i",
      "offset": [
        1120,
        1233
      ],
      "op": "JUMP",
      "path": "61"
    },
    "444": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2103,
        2267
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "445": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2103,
        2267
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x1B2"
    },
    "448": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2103,
        2267
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x4"
    },
    "450": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2103,
        2267
      ],
      "op": "DUP1",
      "path": "61"
    },
    "451": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2103,
        2267
      ],
      "op": "CALLDATASIZE",
      "path": "61"
    },
    "452": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2103,
        2267
      ],
      "op": "SUB",
      "path": "61"
    },
    "453": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2103,
        2267
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "455": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2103,
        2267
      ],
      "op": "DUP2",
      "path": "61"
    },
    "456": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2103,
        2267
      ],
      "op": "LT",
      "path": "61"
    },
    "457": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2103,
        2267
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "458": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2103,
        2267
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x1D2"
    },
    "461": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2103,
        2267
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "462": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2103,
        2267
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "464": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2103,
        2267
      ],
      "op": "DUP1",
      "path": "61"
    },
    "465": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2103,
        2267
      ],
      "op": "REVERT",
      "path": "61"
    },
    "466": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2103,
        2267
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "467": {
      "op": "POP"
    },
    "468": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2103,
        2267
      ],
      "op": "DUP1",
      "path": "61"
    },
    "469": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2103,
        2267
      ],
      "op": "CALLDATALOAD",
      "path": "61"
    },
    "470": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2103,
        2267
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "471": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2103,
        2267
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "473": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2103,
        2267
      ],
      "op": "ADD",
      "path": "61"
    },
    "474": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2103,
        2267
      ],
      "op": "CALLDATALOAD",
      "path": "61"
    },
    "475": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2103,
        2267
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "476": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2103,
        2267
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "477": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2103,
        2267
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x576"
    },
    "480": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "jump": "i",
      "offset": [
        2103,
        2267
      ],
      "op": "JUMP",
      "path": "61"
    },
    "481": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3498,
        3871
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "482": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3498,
        3871
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x1B2"
    },
    "485": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3498,
        3871
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x4"
    },
    "487": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3498,
        3871
      ],
      "op": "DUP1",
      "path": "61"
    },
    "488": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3498,
        3871
      ],
      "op": "CALLDATASIZE",
      "path": "61"
    },
    "489": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3498,
        3871
      ],
      "op": "SUB",
      "path": "61"
    },
    "490": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3498,
        3871
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "492": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3498,
        3871
      ],
      "op": "DUP2",
      "path": "61"
    },
    "493": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3498,
        3871
      ],
      "op": "LT",
      "path": "61"
    },
    "494": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3498,
        3871
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "495": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3498,
        3871
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x1F7"
    },
    "498": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3498,
        3871
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "499": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3498,
        3871
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "501": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3498,
        3871
      ],
      "op": "DUP1",
      "path": "61"
    },
    "502": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3498,
        3871
      ],
      "op": "REVERT",
      "path": "61"
    },
    "503": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3498,
        3871
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "504": {
      "op": "POP"
    },
    "505": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3498,
        3871
      ],
      "op": "CALLDATALOAD",
      "path": "61"
    },
    "506": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3498,
        3871
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x5C3"
    },
    "509": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "jump": "i",
      "offset": [
        3498,
        3871
      ],
      "op": "JUMP",
      "path": "61"
    },
    "510": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2306,
        2510
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "511": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2306,
        2510
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x1B2"
    },
    "514": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2306,
        2510
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x4"
    },
    "516": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2306,
        2510
      ],
      "op": "DUP1",
      "path": "61"
    },
    "517": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2306,
        2510
      ],
      "op": "CALLDATASIZE",
      "path": "61"
    },
    "518": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2306,
        2510
      ],
      "op": "SUB",
      "path": "61"
    },
    "519": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2306,
        2510
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "521": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2306,
        2510
      ],
      "op": "DUP2",
      "path": "61"
    },
    "522": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2306,
        2510
      ],
      "op": "LT",
      "path": "61"
    },
    "523": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2306,
        2510
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "524": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2306,
        2510
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x214"
    },
    "527": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2306,
        2510
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "528": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2306,
        2510
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "530": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2306,
        2510
      ],
      "op": "DUP1",
      "path": "61"
    },
    "531": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2306,
        2510
      ],
      "op": "REVERT",
      "path": "61"
    },
    "532": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2306,
        2510
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "533": {
      "op": "POP"
    },
    "534": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2306,
        2510
      ],
      "op": "DUP1",
      "path": "61"
    },
    "535": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2306,
        2510
      ],
      "op": "CALLDATALOAD",
      "path": "61"
    },
    "536": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2306,
        2510
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "537": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2306,
        2510
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "539": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2306,
        2510
      ],
      "op": "ADD",
      "path": "61"
    },
    "540": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2306,
        2510
      ],
      "op": "CALLDATALOAD",
      "path": "61"
    },
    "541": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2306,
        2510
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x71B"
    },
    "544": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "jump": "i",
      "offset": [
        2306,
        2510
      ],
      "op": "JUMP",
      "path": "61"
    },
    "545": {
      "offset": [
        199,
        224
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "546": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        199,
        224
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x229"
    },
    "549": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        199,
        224
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x768"
    },
    "552": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "jump": "i",
      "offset": [
        199,
        224
      ],
      "op": "JUMP",
      "path": "61"
    },
    "553": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        199,
        224
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "554": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        199,
        224
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "556": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        199,
        224
      ],
      "op": "DUP1",
      "path": "61"
    },
    "557": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        199,
        224
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "558": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        199,
        224
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "559": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        199,
        224
      ],
      "op": "DUP3",
      "path": "61"
    },
    "560": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        199,
        224
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "561": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        199,
        224
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "562": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        199,
        224
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "563": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        199,
        224
      ],
      "op": "DUP2",
      "path": "61"
    },
    "564": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        199,
        224
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "565": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        199,
        224
      ],
      "op": "SUB",
      "path": "61"
    },
    "566": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        199,
        224
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "568": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        199,
        224
      ],
      "op": "ADD",
      "path": "61"
    },
    "569": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        199,
        224
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "570": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        199,
        224
      ],
      "op": "RETURN",
      "path": "61"
    },
    "571": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        866,
        1077
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "572": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        866,
        1077
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x1B2"
    },
    "575": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        866,
        1077
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x76E"
    },
    "578": {
      "fn": "Owned.acceptOwnership",
      "jump": "i",
      "offset": [
        866,
        1077
      ],
      "op": "JUMP",
      "path": "57"
    },
    "579": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "580": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x24B"
    },
    "583": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x7E9"
    },
    "586": {
      "fn": "Owned.owner",
      "jump": "i",
      "offset": [
        564,
        641
      ],
      "op": "JUMP",
      "path": "57"
    },
    "587": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "588": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "590": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "DUP1",
      "path": "57"
    },
    "591": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "596": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "598": {
      "op": "SHL"
    },
    "599": {
      "op": "SUB"
    },
    "600": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "601": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "602": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "AND",
      "path": "57"
    },
    "603": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "DUP3",
      "path": "57"
    },
    "604": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "605": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "606": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "607": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "DUP2",
      "path": "57"
    },
    "608": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "609": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "SUB",
      "path": "57"
    },
    "610": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "612": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "ADD",
      "path": "57"
    },
    "613": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "614": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "RETURN",
      "path": "57"
    },
    "615": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "616": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x17B"
    },
    "619": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x7F8"
    },
    "622": {
      "fn": "Owned.isOwner",
      "jump": "i",
      "offset": [
        646,
        736
      ],
      "op": "JUMP",
      "path": "57"
    },
    "623": {
      "offset": [
        990,
        1054
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "624": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x229"
    },
    "627": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x4"
    },
    "629": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "DUP1",
      "path": "61"
    },
    "630": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "CALLDATASIZE",
      "path": "61"
    },
    "631": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "SUB",
      "path": "61"
    },
    "632": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "634": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "DUP2",
      "path": "61"
    },
    "635": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "LT",
      "path": "61"
    },
    "636": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "637": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x285"
    },
    "640": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "641": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "643": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "DUP1",
      "path": "61"
    },
    "644": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "REVERT",
      "path": "61"
    },
    "645": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "646": {
      "op": "POP"
    },
    "647": {
      "offset": [
        990,
        1054
      ],
      "op": "DUP1",
      "path": "61"
    },
    "648": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "CALLDATALOAD",
      "path": "61"
    },
    "649": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "650": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "652": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "ADD",
      "path": "61"
    },
    "653": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "CALLDATALOAD",
      "path": "61"
    },
    "654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "658": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "660": {
      "op": "SHL"
    },
    "661": {
      "op": "SUB"
    },
    "662": {
      "offset": [
        990,
        1054
      ],
      "op": "AND",
      "path": "61"
    },
    "663": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x809"
    },
    "666": {
      "fn": "Owned.isOwner",
      "jump": "i",
      "offset": [
        990,
        1054
      ],
      "op": "JUMP",
      "path": "61"
    },
    "667": {
      "fn": "ERC20Vault.add",
      "offset": [
        1531,
        2034
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "668": {
      "fn": "ERC20Vault.add",
      "offset": [
        1531,
        2034
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x1B2"
    },
    "671": {
      "fn": "ERC20Vault.add",
      "offset": [
        1531,
        2034
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x4"
    },
    "673": {
      "fn": "ERC20Vault.add",
      "offset": [
        1531,
        2034
      ],
      "op": "DUP1",
      "path": "61"
    },
    "674": {
      "fn": "ERC20Vault.add",
      "offset": [
        1531,
        2034
      ],
      "op": "CALLDATASIZE",
      "path": "61"
    },
    "675": {
      "fn": "ERC20Vault.add",
      "offset": [
        1531,
        2034
      ],
      "op": "SUB",
      "path": "61"
    },
    "676": {
      "fn": "ERC20Vault.add",
      "offset": [
        1531,
        2034
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x60"
    },
    "678": {
      "fn": "ERC20Vault.add",
      "offset": [
        1531,
        2034
      ],
      "op": "DUP2",
      "path": "61"
    },
    "679": {
      "fn": "ERC20Vault.add",
      "offset": [
        1531,
        2034
      ],
      "op": "LT",
      "path": "61"
    },
    "680": {
      "fn": "ERC20Vault.add",
      "offset": [
        1531,
        2034
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "681": {
      "fn": "ERC20Vault.add",
      "offset": [
        1531,
        2034
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x2B1"
    },
    "684": {
      "fn": "ERC20Vault.add",
      "offset": [
        1531,
        2034
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "685": {
      "fn": "ERC20Vault.add",
      "offset": [
        1531,
        2034
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "687": {
      "fn": "ERC20Vault.add",
      "offset": [
        1531,
        2034
      ],
      "op": "DUP1",
      "path": "61"
    },
    "688": {
      "fn": "ERC20Vault.add",
      "offset": [
        1531,
        2034
      ],
      "op": "REVERT",
      "path": "61"
    },
    "689": {
      "fn": "ERC20Vault.add",
      "offset": [
        1531,
        2034
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "690": {
      "op": "POP"
    },
    "691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "695": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "697": {
      "op": "SHL"
    },
    "698": {
      "op": "SUB"
    },
    "699": {
      "fn": "ERC20Vault.add",
      "offset": [
        1531,
        2034
      ],
      "op": "DUP2",
      "path": "61"
    },
    "700": {
      "fn": "ERC20Vault.add",
      "offset": [
        1531,
        2034
      ],
      "op": "CALLDATALOAD",
      "path": "61"
    },
    "701": {
      "fn": "ERC20Vault.add",
      "offset": [
        1531,
        2034
      ],
      "op": "AND",
      "path": "61"
    },
    "702": {
      "fn": "ERC20Vault.add",
      "offset": [
        1531,
        2034
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "703": {
      "fn": "ERC20Vault.add",
      "offset": [
        1531,
        2034
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "705": {
      "fn": "ERC20Vault.add",
      "offset": [
        1531,
        2034
      ],
      "op": "DUP2",
      "path": "61"
    },
    "706": {
      "fn": "ERC20Vault.add",
      "offset": [
        1531,
        2034
      ],
      "op": "ADD",
      "path": "61"
    },
    "707": {
      "fn": "ERC20Vault.add",
      "offset": [
        1531,
        2034
      ],
      "op": "CALLDATALOAD",
      "path": "61"
    },
    "708": {
      "fn": "ERC20Vault.add",
      "offset": [
        1531,
        2034
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "709": {
      "fn": "ERC20Vault.add",
      "offset": [
        1531,
        2034
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "710": {
      "fn": "ERC20Vault.add",
      "offset": [
        1531,
        2034
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "711": {
      "fn": "ERC20Vault.add",
      "offset": [
        1531,
        2034
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "713": {
      "fn": "ERC20Vault.add",
      "offset": [
        1531,
        2034
      ],
      "op": "ADD",
      "path": "61"
    },
    "714": {
      "fn": "ERC20Vault.add",
      "offset": [
        1531,
        2034
      ],
      "op": "CALLDATALOAD",
      "path": "61"
    },
    "715": {
      "fn": "ERC20Vault.add",
      "offset": [
        1531,
        2034
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x826"
    },
    "718": {
      "fn": "ERC20Vault.add",
      "jump": "i",
      "offset": [
        1531,
        2034
      ],
      "op": "JUMP",
      "path": "61"
    },
    "719": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4000,
        4282
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "720": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4000,
        4282
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x1B2"
    },
    "723": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4000,
        4282
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x4"
    },
    "725": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4000,
        4282
      ],
      "op": "DUP1",
      "path": "61"
    },
    "726": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4000,
        4282
      ],
      "op": "CALLDATASIZE",
      "path": "61"
    },
    "727": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4000,
        4282
      ],
      "op": "SUB",
      "path": "61"
    },
    "728": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4000,
        4282
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x60"
    },
    "730": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4000,
        4282
      ],
      "op": "DUP2",
      "path": "61"
    },
    "731": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4000,
        4282
      ],
      "op": "LT",
      "path": "61"
    },
    "732": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4000,
        4282
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "733": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4000,
        4282
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x2E5"
    },
    "736": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4000,
        4282
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "737": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4000,
        4282
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "739": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4000,
        4282
      ],
      "op": "DUP1",
      "path": "61"
    },
    "740": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4000,
        4282
      ],
      "op": "REVERT",
      "path": "61"
    },
    "741": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4000,
        4282
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "742": {
      "op": "POP"
    },
    "743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "747": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "749": {
      "op": "SHL"
    },
    "750": {
      "op": "SUB"
    },
    "751": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4000,
        4282
      ],
      "op": "DUP2",
      "path": "61"
    },
    "752": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4000,
        4282
      ],
      "op": "CALLDATALOAD",
      "path": "61"
    },
    "753": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4000,
        4282
      ],
      "op": "DUP2",
      "path": "61"
    },
    "754": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4000,
        4282
      ],
      "op": "AND",
      "path": "61"
    },
    "755": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4000,
        4282
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "756": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4000,
        4282
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "758": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4000,
        4282
      ],
      "op": "DUP2",
      "path": "61"
    },
    "759": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4000,
        4282
      ],
      "op": "ADD",
      "path": "61"
    },
    "760": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4000,
        4282
      ],
      "op": "CALLDATALOAD",
      "path": "61"
    },
    "761": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4000,
        4282
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "762": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4000,
        4282
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "764": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4000,
        4282
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "765": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4000,
        4282
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "766": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4000,
        4282
      ],
      "op": "ADD",
      "path": "61"
    },
    "767": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4000,
        4282
      ],
      "op": "CALLDATALOAD",
      "path": "61"
    },
    "768": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4000,
        4282
      ],
      "op": "AND",
      "path": "61"
    },
    "769": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4000,
        4282
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x99A"
    },
    "772": {
      "fn": "ERC20Vault.setContractAllowance",
      "jump": "i",
      "offset": [
        4000,
        4282
      ],
      "op": "JUMP",
      "path": "61"
    },
    "773": {
      "offset": [
        156,
        179
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "774": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        156,
        179
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x24B"
    },
    "777": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        156,
        179
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0xA45"
    },
    "780": {
      "fn": "ERC20Vault.setContractAllowance",
      "jump": "i",
      "offset": [
        156,
        179
      ],
      "op": "JUMP",
      "path": "57"
    },
    "781": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2548,
        2893
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "782": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2548,
        2893
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x1B2"
    },
    "785": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2548,
        2893
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x4"
    },
    "787": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2548,
        2893
      ],
      "op": "DUP1",
      "path": "61"
    },
    "788": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2548,
        2893
      ],
      "op": "CALLDATASIZE",
      "path": "61"
    },
    "789": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2548,
        2893
      ],
      "op": "SUB",
      "path": "61"
    },
    "790": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2548,
        2893
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "792": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2548,
        2893
      ],
      "op": "DUP2",
      "path": "61"
    },
    "793": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2548,
        2893
      ],
      "op": "LT",
      "path": "61"
    },
    "794": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2548,
        2893
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "795": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2548,
        2893
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x323"
    },
    "798": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2548,
        2893
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "799": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2548,
        2893
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "801": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2548,
        2893
      ],
      "op": "DUP1",
      "path": "61"
    },
    "802": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2548,
        2893
      ],
      "op": "REVERT",
      "path": "61"
    },
    "803": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2548,
        2893
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "804": {
      "op": "POP"
    },
    "805": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2548,
        2893
      ],
      "op": "DUP1",
      "path": "61"
    },
    "806": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2548,
        2893
      ],
      "op": "CALLDATALOAD",
      "path": "61"
    },
    "807": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2548,
        2893
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "808": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2548,
        2893
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "810": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2548,
        2893
      ],
      "op": "ADD",
      "path": "61"
    },
    "811": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2548,
        2893
      ],
      "op": "CALLDATALOAD",
      "path": "61"
    },
    "812": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2548,
        2893
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0xA54"
    },
    "815": {
      "fn": "ERC20Vault.deposit",
      "jump": "i",
      "offset": [
        2548,
        2893
      ],
      "op": "JUMP",
      "path": "61"
    },
    "816": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "817": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x1B2"
    },
    "820": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x4"
    },
    "822": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "DUP1",
      "path": "57"
    },
    "823": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "CALLDATASIZE",
      "path": "57"
    },
    "824": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "SUB",
      "path": "57"
    },
    "825": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "827": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "DUP2",
      "path": "57"
    },
    "828": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "LT",
      "path": "57"
    },
    "829": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "830": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x346"
    },
    "833": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "834": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "836": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "DUP1",
      "path": "57"
    },
    "837": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "REVERT",
      "path": "57"
    },
    "838": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "839": {
      "op": "POP"
    },
    "840": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "CALLDATALOAD",
      "path": "57"
    },
    "841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "845": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "847": {
      "op": "SHL"
    },
    "848": {
      "op": "SUB"
    },
    "849": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "AND",
      "path": "57"
    },
    "850": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0xB5E"
    },
    "853": {
      "fn": "Owned.transferOwnership",
      "jump": "i",
      "offset": [
        742,
        860
      ],
      "op": "JUMP",
      "path": "57"
    },
    "854": {
      "offset": [
        1087,
        1113
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "855": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x4"
    },
    "857": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "DUP2",
      "path": "61"
    },
    "858": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "DUP2",
      "path": "61"
    },
    "859": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "SLOAD",
      "path": "61"
    },
    "860": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "DUP2",
      "path": "61"
    },
    "861": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "LT",
      "path": "61"
    },
    "862": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x363"
    },
    "865": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "866": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "INVALID",
      "path": "61"
    },
    "867": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "868": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "870": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "871": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "DUP3",
      "path": "61"
    },
    "872": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "873": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "875": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "876": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "877": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "KECCAK256",
      "path": "61"
    },
    "878": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x2"
    },
    "880": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "881": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "882": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "MUL",
      "path": "61"
    },
    "883": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "ADD",
      "path": "61"
    },
    "884": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "DUP1",
      "path": "61"
    },
    "885": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "SLOAD",
      "path": "61"
    },
    "886": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x1"
    },
    "888": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "889": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "890": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "ADD",
      "path": "61"
    },
    "891": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "SLOAD",
      "path": "61"
    },
    "892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "896": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "898": {
      "op": "SHL"
    },
    "899": {
      "op": "SUB"
    },
    "900": {
      "offset": [
        1087,
        1113
      ],
      "op": "DUP3",
      "path": "61"
    },
    "901": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "AND",
      "path": "61"
    },
    "902": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "SWAP3",
      "path": "61"
    },
    "903": {
      "op": "POP"
    },
    "904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "906": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "908": {
      "op": "SHL"
    },
    "909": {
      "offset": [
        1087,
        1113
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "910": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "911": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "DIV",
      "path": "61"
    },
    "912": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0xFF"
    },
    "914": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "AND",
      "path": "61"
    },
    "915": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "916": {
      "fn": "Owned.transferOwnership",
      "offset": [
        1087,
        1113
      ],
      "op": "DUP4",
      "path": "61"
    },
    "917": {
      "fn": "Owned.transferOwnership",
      "jump": "o",
      "offset": [
        1087,
        1113
      ],
      "op": "JUMP",
      "path": "61"
    },
    "918": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4288,
        4440
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "919": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4390,
        4407
      ],
      "op": "EXTCODESIZE",
      "path": "61"
    },
    "920": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4425,
        4433
      ],
      "op": "ISZERO",
      "path": "61",
      "statement": 0
    },
    "921": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4425,
        4433
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "922": {
      "fn": "ERC20Vault.isContract",
      "offset": [
        4425,
        4433
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "923": {
      "fn": "ERC20Vault.isContract",
      "jump": "o",
      "offset": [
        4288,
        4440
      ],
      "op": "JUMP",
      "path": "61"
    },
    "924": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2899,
        3462
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "925": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2964,
        2985
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "927": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2988,
        2996
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x4"
    },
    "929": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2997,
        3001
      ],
      "op": "DUP4",
      "path": "61"
    },
    "930": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2988,
        3002
      ],
      "op": "DUP2",
      "path": "61"
    },
    "931": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2988,
        3002
      ],
      "op": "SLOAD",
      "path": "61"
    },
    "932": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2988,
        3002
      ],
      "op": "DUP2",
      "path": "61"
    },
    "933": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2988,
        3002
      ],
      "op": "LT",
      "path": "61"
    },
    "934": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2988,
        3002
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x3AB"
    },
    "937": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2988,
        3002
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "938": {
      "dev": "Index out of range",
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2988,
        3002
      ],
      "op": "INVALID",
      "path": "61"
    },
    "939": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2988,
        3002
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "940": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2988,
        3002
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "942": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2988,
        3002
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "943": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2988,
        3002
      ],
      "op": "DUP3",
      "path": "61"
    },
    "944": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2988,
        3002
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "945": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2988,
        3002
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "947": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2988,
        3002
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "948": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2988,
        3002
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "949": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2988,
        3002
      ],
      "op": "KECCAK256",
      "path": "61"
    },
    "950": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2988,
        3002
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x2"
    },
    "952": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2988,
        3002
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "953": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2988,
        3002
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "954": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2988,
        3002
      ],
      "op": "MUL",
      "path": "61"
    },
    "955": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2988,
        3002
      ],
      "op": "ADD",
      "path": "61"
    },
    "956": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3020,
        3037
      ],
      "op": "DUP1",
      "path": "61",
      "statement": 1
    },
    "957": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3020,
        3037
      ],
      "op": "SLOAD",
      "path": "61"
    },
    "958": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2988,
        3002
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "959": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2988,
        3002
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "960": {
      "op": "POP"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "963": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "965": {
      "op": "SHL"
    },
    "966": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3020,
        3037
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "967": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3020,
        3037
      ],
      "op": "DIV",
      "path": "61"
    },
    "968": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3020,
        3037
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0xFF"
    },
    "970": {
      "branch": 41,
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3020,
        3037
      ],
      "op": "AND",
      "path": "61"
    },
    "971": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x405"
    },
    "974": {
      "branch": 41,
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "975": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "977": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "978": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "982": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "984": {
      "op": "SHL"
    },
    "985": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "DUP2",
      "path": "61"
    },
    "986": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "987": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x4"
    },
    "989": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "ADD",
      "path": "61"
    },
    "990": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "DUP1",
      "path": "61"
    },
    "991": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "DUP1",
      "path": "61"
    },
    "992": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "994": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "ADD",
      "path": "61"
    },
    "995": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "DUP3",
      "path": "61"
    },
    "996": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "DUP2",
      "path": "61"
    },
    "997": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "SUB",
      "path": "61"
    },
    "998": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "DUP3",
      "path": "61"
    },
    "999": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1000": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x21"
    },
    "1002": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1003": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1004": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "1006": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "ADD",
      "path": "61"
    },
    "1007": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1008": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0xD69"
    },
    "1011": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x21"
    },
    "1013": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1014": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "CODECOPY",
      "path": "61"
    },
    "1015": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "1017": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "ADD",
      "path": "61"
    },
    "1018": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1019": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "POP",
      "path": "61"
    },
    "1020": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "POP",
      "path": "61"
    },
    "1021": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "1023": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "1024": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1025": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1026": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "SUB",
      "path": "61"
    },
    "1027": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1028": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "REVERT",
      "path": "61"
    },
    "1029": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3012,
        3075
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1030": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3100,
        3104
      ],
      "op": "DUP1",
      "path": "61",
      "statement": 2
    },
    "1031": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3100,
        3112
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x1"
    },
    "1033": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3100,
        3112
      ],
      "op": "ADD",
      "path": "61"
    },
    "1034": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3100,
        3112
      ],
      "op": "SLOAD",
      "path": "61"
    },
    "1035": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3093,
        3096
      ],
      "op": "TIMESTAMP",
      "path": "61"
    },
    "1036": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3093,
        3112
      ],
      "op": "LT",
      "path": "61"
    },
    "1037": {
      "branch": 42,
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3093,
        3112
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "1038": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x448"
    },
    "1041": {
      "branch": 42,
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "1042": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "1044": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "1045": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1051": {
      "op": "SHL"
    },
    "1052": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1053": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1054": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x4"
    },
    "1056": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "ADD",
      "path": "61"
    },
    "1057": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1058": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1059": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "1061": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "ADD",
      "path": "61"
    },
    "1062": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "DUP3",
      "path": "61"
    },
    "1063": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1064": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "SUB",
      "path": "61"
    },
    "1065": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "DUP3",
      "path": "61"
    },
    "1066": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1067": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x27"
    },
    "1069": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1070": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1071": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "1073": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "ADD",
      "path": "61"
    },
    "1074": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1075": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0xD8A"
    },
    "1078": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x27"
    },
    "1080": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1081": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "CODECOPY",
      "path": "61"
    },
    "1082": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "1084": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "ADD",
      "path": "61"
    },
    "1085": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1086": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "POP",
      "path": "61"
    },
    "1087": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "POP",
      "path": "61"
    },
    "1088": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "1090": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "1091": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1092": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1093": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "SUB",
      "path": "61"
    },
    "1094": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1095": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "REVERT",
      "path": "61"
    },
    "1096": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3085,
        3156
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1097": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3166,
        3187
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "1099": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3190,
        3204
      ],
      "op": "DUP4",
      "path": "61"
    },
    "1100": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3190,
        3204
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1101": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3190,
        3204
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1102": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3190,
        3198
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x3"
    },
    "1104": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3190,
        3204
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "1106": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3190,
        3204
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1107": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3190,
        3204
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1108": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3190,
        3204
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1109": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3190,
        3204
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "1111": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3190,
        3204
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1112": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3190,
        3204
      ],
      "op": "DUP4",
      "path": "61"
    },
    "1113": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3190,
        3204
      ],
      "op": "KECCAK256",
      "path": "61"
    },
    "1114": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3205,
        3215
      ],
      "op": "CALLER",
      "path": "61"
    },
    "1115": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3190,
        3216
      ],
      "op": "DUP5",
      "path": "61"
    },
    "1116": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3190,
        3216
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1117": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3190,
        3216
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1118": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3190,
        3216
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1119": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3190,
        3216
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1120": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3190,
        3216
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1121": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3190,
        3216
      ],
      "op": "KECCAK256",
      "path": "61"
    },
    "1122": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3234,
        3245
      ],
      "op": "DUP1",
      "path": "61",
      "statement": 3
    },
    "1123": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3234,
        3245
      ],
      "op": "SLOAD",
      "path": "61"
    },
    "1124": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3234,
        3255
      ],
      "op": "DUP4",
      "path": "61"
    },
    "1125": {
      "op": "GT"
    },
    "1126": {
      "branch": 43,
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3234,
        3255
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "1127": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x4A1"
    },
    "1130": {
      "branch": 43,
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "1131": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "1133": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "1134": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1140": {
      "op": "SHL"
    },
    "1141": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1142": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1143": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x4"
    },
    "1145": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "ADD",
      "path": "61"
    },
    "1146": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1147": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1148": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "1150": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "ADD",
      "path": "61"
    },
    "1151": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "DUP3",
      "path": "61"
    },
    "1152": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1153": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "SUB",
      "path": "61"
    },
    "1154": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "DUP3",
      "path": "61"
    },
    "1155": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1156": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x28"
    },
    "1158": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1159": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1160": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "1162": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "ADD",
      "path": "61"
    },
    "1163": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1164": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0xD41"
    },
    "1167": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x28"
    },
    "1169": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1170": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "CODECOPY",
      "path": "61"
    },
    "1171": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "1173": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "ADD",
      "path": "61"
    },
    "1174": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1175": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "POP",
      "path": "61"
    },
    "1176": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "POP",
      "path": "61"
    },
    "1177": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "1179": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "1180": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1181": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1182": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "SUB",
      "path": "61"
    },
    "1183": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1184": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "REVERT",
      "path": "61"
    },
    "1185": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3226,
        3299
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1186": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3323,
        3334
      ],
      "op": "DUP1",
      "path": "61",
      "statement": 4
    },
    "1187": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3323,
        3334
      ],
      "op": "SLOAD",
      "path": "61"
    },
    "1188": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3323,
        3347
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x4AD"
    },
    "1191": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3323,
        3347
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1192": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3339,
        3346
      ],
      "op": "DUP5",
      "path": "61"
    },
    "1193": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3323,
        3338
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0xB91"
    },
    "1196": {
      "fn": "ERC20Vault.withdraw",
      "jump": "i",
      "offset": [
        3323,
        3347
      ],
      "op": "JUMP",
      "path": "61"
    },
    "1197": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3323,
        3347
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1198": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3309,
        3347
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1199": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3309,
        3347
      ],
      "op": "SSTORE",
      "path": "61"
    },
    "1200": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3367
      ],
      "op": "DUP2",
      "path": "61",
      "statement": 5
    },
    "1201": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3367
      ],
      "op": "SLOAD",
      "path": "61"
    },
    "1202": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "1204": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1205": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "1206": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1213": {
      "op": "SHL"
    },
    "1214": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1215": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1216": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3385,
        3395
      ],
      "op": "CALLER",
      "path": "61"
    },
    "1217": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x4"
    },
    "1219": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "DUP3",
      "path": "61"
    },
    "1220": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "ADD",
      "path": "61"
    },
    "1221": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1222": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x24"
    },
    "1224": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1225": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "ADD",
      "path": "61"
    },
    "1226": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "DUP7",
      "path": "61"
    },
    "1227": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1228": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1229": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1230": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "1231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1237": {
      "op": "SHL"
    },
    "1238": {
      "op": "SUB"
    },
    "1239": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3367
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1240": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3367
      ],
      "op": "SWAP3",
      "path": "61"
    },
    "1241": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3367
      ],
      "op": "AND",
      "path": "61"
    },
    "1242": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3367
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1243": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3376
      ],
      "op": "PUSH4",
      "path": "61",
      "value": "0xA9059CBB"
    },
    "1248": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3376
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1249": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x44"
    },
    "1251": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1252": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "DUP3",
      "path": "61"
    },
    "1253": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "ADD",
      "path": "61"
    },
    "1254": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "SWAP3",
      "path": "61"
    },
    "1255": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "1257": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "SWAP3",
      "path": "61"
    },
    "1258": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1259": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1260": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1261": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "DUP3",
      "path": "61"
    },
    "1262": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1263": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "SUB",
      "path": "61"
    },
    "1264": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "ADD",
      "path": "61"
    },
    "1265": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1266": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3309,
        3320
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "1268": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3367
      ],
      "op": "DUP8",
      "path": "61"
    },
    "1269": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1270": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "EXTCODESIZE",
      "path": "61"
    },
    "1271": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "1272": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1273": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "1274": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x502"
    },
    "1277": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "1278": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "1280": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1281": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "REVERT",
      "path": "61"
    },
    "1282": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1283": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "POP",
      "path": "61"
    },
    "1284": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "GAS",
      "path": "61"
    },
    "1285": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "CALL",
      "path": "61"
    },
    "1286": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "1287": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1288": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "1289": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x516"
    },
    "1292": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "1293": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "RETURNDATASIZE",
      "path": "61"
    },
    "1294": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "1296": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1297": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "RETURNDATACOPY",
      "path": "61"
    },
    "1298": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "RETURNDATASIZE",
      "path": "61"
    },
    "1299": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "1301": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "REVERT",
      "path": "61"
    },
    "1302": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1303": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "POP",
      "path": "61"
    },
    "1304": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "POP",
      "path": "61"
    },
    "1305": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "POP",
      "path": "61"
    },
    "1306": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "POP",
      "path": "61"
    },
    "1307": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "1309": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "1310": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "RETURNDATASIZE",
      "path": "61"
    },
    "1311": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "1313": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1314": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "LT",
      "path": "61"
    },
    "1315": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "1316": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x52C"
    },
    "1319": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "1320": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "1322": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1323": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "REVERT",
      "path": "61"
    },
    "1324": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1325": {
      "op": "POP"
    },
    "1326": {
      "op": "POP"
    },
    "1327": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3420,
        3455
      ],
      "op": "PUSH1",
      "path": "61",
      "statement": 6,
      "value": "0x40"
    },
    "1329": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3420,
        3455
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1330": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3420,
        3455
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "1331": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3420,
        3455
      ],
      "op": "DUP5",
      "path": "61"
    },
    "1332": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3420,
        3455
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1333": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3420,
        3455
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1334": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3420,
        3455
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1335": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3420,
        3455
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "1336": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3441,
        3445
      ],
      "op": "DUP6",
      "path": "61"
    },
    "1337": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3441,
        3445
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1338": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3429,
        3439
      ],
      "op": "CALLER",
      "path": "61"
    },
    "1339": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3429,
        3439
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1340": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3420,
        3455
      ],
      "op": "PUSH32",
      "path": "61",
      "value": "0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
    },
    "1373": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3420,
        3455
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1374": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3420,
        3455
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1375": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3420,
        3455
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1376": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3420,
        3455
      ],
      "op": "SUB",
      "path": "61"
    },
    "1377": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3357,
        3405
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "1379": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3420,
        3455
      ],
      "op": "ADD",
      "path": "61"
    },
    "1380": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3420,
        3455
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1381": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        3420,
        3455
      ],
      "op": "LOG3",
      "path": "61"
    },
    "1382": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2899,
        3462
      ],
      "op": "POP",
      "path": "61"
    },
    "1383": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2899,
        3462
      ],
      "op": "POP",
      "path": "61"
    },
    "1384": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2899,
        3462
      ],
      "op": "POP",
      "path": "61"
    },
    "1385": {
      "fn": "ERC20Vault.withdraw",
      "offset": [
        2899,
        3462
      ],
      "op": "POP",
      "path": "61"
    },
    "1386": {
      "fn": "ERC20Vault.withdraw",
      "jump": "o",
      "offset": [
        2899,
        3462
      ],
      "op": "JUMP",
      "path": "61"
    },
    "1387": {
      "fn": "ERC20Vault.initERC20Vault",
      "offset": [
        1120,
        1233
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1388": {
      "fn": "ERC20Vault.initERC20Vault",
      "offset": [
        1162,
        1186
      ],
      "op": "PUSH2",
      "path": "61",
      "statement": 7,
      "value": "0x574"
    },
    "1391": {
      "fn": "ERC20Vault.initERC20Vault",
      "offset": [
        1174,
        1184
      ],
      "op": "CALLER",
      "path": "61"
    },
    "1392": {
      "fn": "ERC20Vault.initERC20Vault",
      "offset": [
        1162,
        1172
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0xBDA"
    },
    "1395": {
      "fn": "ERC20Vault.initERC20Vault",
      "jump": "i",
      "offset": [
        1162,
        1186
      ],
      "op": "JUMP",
      "path": "61"
    },
    "1396": {
      "fn": "ERC20Vault.initERC20Vault",
      "offset": [
        1162,
        1186
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1397": {
      "fn": "ERC20Vault.initERC20Vault",
      "jump": "o",
      "offset": [
        1120,
        1233
      ],
      "op": "JUMP",
      "path": "61"
    },
    "1398": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2103,
        2267
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1399": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2197,
        2206
      ],
      "op": "PUSH2",
      "path": "61",
      "statement": 8,
      "value": "0x57E"
    },
    "1402": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2197,
        2204
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x7F8"
    },
    "1405": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "jump": "i",
      "offset": [
        2197,
        2206
      ],
      "op": "JUMP",
      "path": "61"
    },
    "1406": {
      "branch": 44,
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2197,
        2206
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1407": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2189,
        2207
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x587"
    },
    "1410": {
      "branch": 44,
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2189,
        2207
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "1411": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2189,
        2207
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "1413": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2189,
        2207
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1414": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2189,
        2207
      ],
      "op": "REVERT",
      "path": "61"
    },
    "1415": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2189,
        2207
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1416": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2247,
        2260
      ],
      "op": "DUP1",
      "path": "61",
      "statement": 9
    },
    "1417": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2225
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x4"
    },
    "1419": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2226,
        2230
      ],
      "op": "DUP4",
      "path": "61"
    },
    "1420": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2231
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1421": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2231
      ],
      "op": "SLOAD",
      "path": "61"
    },
    "1422": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2231
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1423": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2231
      ],
      "op": "LT",
      "path": "61"
    },
    "1424": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2231
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x595"
    },
    "1427": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2231
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "1428": {
      "dev": "Index out of range",
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2231
      ],
      "op": "INVALID",
      "path": "61"
    },
    "1429": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2231
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1430": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2231
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "1432": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2231
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1433": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2231
      ],
      "op": "DUP3",
      "path": "61"
    },
    "1434": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2231
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1435": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2231
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "1437": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2231
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1438": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2231
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1439": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2231
      ],
      "op": "KECCAK256",
      "path": "61"
    },
    "1440": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2231
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x2"
    },
    "1442": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2231
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1443": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2231
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1444": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2231
      ],
      "op": "MUL",
      "path": "61"
    },
    "1445": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2231
      ],
      "op": "ADD",
      "path": "61"
    },
    "1446": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2260
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1447": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2260
      ],
      "op": "SLOAD",
      "path": "61"
    },
    "1448": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2260
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1449": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2260
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "1450": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2260
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1455": {
      "op": "SHL"
    },
    "1456": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2260
      ],
      "op": "MUL",
      "path": "61"
    },
    "1457": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1461": {
      "op": "SHL"
    },
    "1462": {
      "op": "NOT"
    },
    "1463": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2260
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1464": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2260
      ],
      "op": "SWAP3",
      "path": "61"
    },
    "1465": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2260
      ],
      "op": "AND",
      "path": "61"
    },
    "1466": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2260
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1467": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2260
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1468": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2260
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1469": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2260
      ],
      "op": "OR",
      "path": "61"
    },
    "1470": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2260
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1471": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "offset": [
        2217,
        2260
      ],
      "op": "SSTORE",
      "path": "61"
    },
    "1472": {
      "op": "POP"
    },
    "1473": {
      "op": "POP"
    },
    "1474": {
      "fn": "ERC20Vault.setPoolWithdrawable",
      "jump": "o",
      "offset": [
        2103,
        2267
      ],
      "op": "JUMP",
      "path": "61"
    },
    "1475": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3498,
        3871
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1476": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3556,
        3577
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "1478": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3580,
        3588
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x4"
    },
    "1480": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3589,
        3593
      ],
      "op": "DUP3",
      "path": "61"
    },
    "1481": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3580,
        3594
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1482": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3580,
        3594
      ],
      "op": "SLOAD",
      "path": "61"
    },
    "1483": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3580,
        3594
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1484": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3580,
        3594
      ],
      "op": "LT",
      "path": "61"
    },
    "1485": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3580,
        3594
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x5D2"
    },
    "1488": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3580,
        3594
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "1489": {
      "dev": "Index out of range",
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3580,
        3594
      ],
      "op": "INVALID",
      "path": "61"
    },
    "1490": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3580,
        3594
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1491": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3580,
        3594
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "1493": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3580,
        3594
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1494": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3580,
        3594
      ],
      "op": "DUP3",
      "path": "61"
    },
    "1495": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3580,
        3594
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1496": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3580,
        3594
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "1498": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3580,
        3594
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1499": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3580,
        3594
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1500": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3580,
        3594
      ],
      "op": "KECCAK256",
      "path": "61"
    },
    "1501": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3580,
        3594
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x2"
    },
    "1503": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3580,
        3594
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1504": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3580,
        3594
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1505": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3580,
        3594
      ],
      "op": "MUL",
      "path": "61"
    },
    "1506": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3580,
        3594
      ],
      "op": "ADD",
      "path": "61"
    },
    "1507": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3612,
        3629
      ],
      "op": "DUP1",
      "path": "61",
      "statement": 10
    },
    "1508": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3612,
        3629
      ],
      "op": "SLOAD",
      "path": "61"
    },
    "1509": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3580,
        3594
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1510": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3580,
        3594
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1511": {
      "op": "POP"
    },
    "1512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1514": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1516": {
      "op": "SHL"
    },
    "1517": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3612,
        3629
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1518": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3612,
        3629
      ],
      "op": "DIV",
      "path": "61"
    },
    "1519": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3612,
        3629
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0xFF"
    },
    "1521": {
      "branch": 45,
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3612,
        3629
      ],
      "op": "AND",
      "path": "61"
    },
    "1522": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3604,
        3663
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x642"
    },
    "1525": {
      "branch": 45,
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3604,
        3663
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "1526": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3604,
        3663
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "1528": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3604,
        3663
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1529": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3604,
        3663
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "1530": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1536": {
      "op": "SHL"
    },
    "1537": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3604,
        3663
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1538": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3604,
        3663
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1539": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3604,
        3663
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "1541": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3604,
        3663
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x4"
    },
    "1543": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3604,
        3663
      ],
      "op": "DUP3",
      "path": "61"
    },
    "1544": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3604,
        3663
      ],
      "op": "ADD",
      "path": "61"
    },
    "1545": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3604,
        3663
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1546": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3604,
        3663
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x1E"
    },
    "1548": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3604,
        3663
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x24"
    },
    "1550": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3604,
        3663
      ],
      "op": "DUP3",
      "path": "61"
    },
    "1551": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3604,
        3663
      ],
      "op": "ADD",
      "path": "61"
    },
    "1552": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3604,
        3663
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1553": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3604,
        3663
      ],
      "op": "PUSH32",
      "path": "61",
      "value": "0x5769746864726177696E672066726F6D20706F6F6C2064697361626C65640000"
    },
    "1586": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3604,
        3663
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x44"
    },
    "1588": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3604,
        3663
      ],
      "op": "DUP3",
      "path": "61"
    },
    "1589": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3604,
        3663
      ],
      "op": "ADD",
      "path": "61"
    },
    "1590": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3604,
        3663
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1591": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3604,
        3663
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1592": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3604,
        3663
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "1593": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3604,
        3663
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1594": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3604,
        3663
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1595": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3604,
        3663
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1596": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3604,
        3663
      ],
      "op": "SUB",
      "path": "61"
    },
    "1597": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3604,
        3663
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x64"
    },
    "1599": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3604,
        3663
      ],
      "op": "ADD",
      "path": "61"
    },
    "1600": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3604,
        3663
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1601": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3604,
        3663
      ],
      "op": "REVERT",
      "path": "61"
    },
    "1602": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3604,
        3663
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1603": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3673,
        3694
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "1605": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3697,
        3711
      ],
      "op": "DUP3",
      "path": "61"
    },
    "1606": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3697,
        3711
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1607": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3697,
        3711
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1608": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3697,
        3705
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x3"
    },
    "1610": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3697,
        3711
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "1612": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3697,
        3711
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1613": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3697,
        3711
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1614": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3697,
        3711
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1615": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3697,
        3711
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "1617": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3697,
        3711
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1618": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3697,
        3711
      ],
      "op": "DUP4",
      "path": "61"
    },
    "1619": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3697,
        3711
      ],
      "op": "KECCAK256",
      "path": "61"
    },
    "1620": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3712,
        3722
      ],
      "op": "CALLER",
      "path": "61"
    },
    "1621": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3697,
        3723
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1622": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3697,
        3723
      ],
      "op": "DUP6",
      "path": "61"
    },
    "1623": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3697,
        3723
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1624": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3697,
        3723
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1625": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3697,
        3723
      ],
      "op": "DUP4",
      "path": "61"
    },
    "1626": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3697,
        3723
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1627": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3697,
        3723
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1628": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3697,
        3723
      ],
      "op": "DUP5",
      "path": "61"
    },
    "1629": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3697,
        3723
      ],
      "op": "KECCAK256",
      "path": "61"
    },
    "1630": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3733,
        3748
      ],
      "op": "DUP5",
      "path": "61",
      "statement": 11
    },
    "1631": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3733,
        3748
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1632": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3733,
        3748
      ],
      "op": "SSTORE",
      "path": "61"
    },
    "1633": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3768
      ],
      "op": "DUP6",
      "path": "61",
      "statement": 12
    },
    "1634": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3768
      ],
      "op": "SLOAD",
      "path": "61"
    },
    "1635": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "DUP4",
      "path": "61"
    },
    "1636": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "1637": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1644": {
      "op": "SHL"
    },
    "1645": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1646": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1647": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x4"
    },
    "1649": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1650": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "ADD",
      "path": "61"
    },
    "1651": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "SWAP4",
      "path": "61"
    },
    "1652": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1653": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "SWAP4",
      "path": "61"
    },
    "1654": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1655": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x24"
    },
    "1657": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "DUP4",
      "path": "61"
    },
    "1658": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "ADD",
      "path": "61"
    },
    "1659": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "DUP7",
      "path": "61"
    },
    "1660": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1661": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1662": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "SWAP3",
      "path": "61"
    },
    "1663": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "1664": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3697,
        3723
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1665": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3697,
        3723
      ],
      "op": "SWAP5",
      "path": "61"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1670": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1672": {
      "op": "SHL"
    },
    "1673": {
      "op": "SUB"
    },
    "1674": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3768
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1675": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3768
      ],
      "op": "SWAP4",
      "path": "61"
    },
    "1676": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3768
      ],
      "op": "AND",
      "path": "61"
    },
    "1677": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3768
      ],
      "op": "SWAP4",
      "path": "61"
    },
    "1678": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3777
      ],
      "op": "PUSH4",
      "path": "61",
      "value": "0xA9059CBB"
    },
    "1683": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3777
      ],
      "op": "SWAP4",
      "path": "61"
    },
    "1684": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x44"
    },
    "1686": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1687": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "DUP6",
      "path": "61"
    },
    "1688": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "ADD",
      "path": "61"
    },
    "1689": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "SWAP5",
      "path": "61"
    },
    "1690": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3697,
        3711
      ],
      "op": "SWAP3",
      "path": "61"
    },
    "1691": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3697,
        3711
      ],
      "op": "SWAP4",
      "path": "61"
    },
    "1692": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "SWAP3",
      "path": "61"
    },
    "1693": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "DUP4",
      "path": "61"
    },
    "1694": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1695": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "SUB",
      "path": "61"
    },
    "1696": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "ADD",
      "path": "61"
    },
    "1697": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1698": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "DUP3",
      "path": "61"
    },
    "1699": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1700": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3768
      ],
      "op": "DUP8",
      "path": "61"
    },
    "1701": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1702": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "EXTCODESIZE",
      "path": "61"
    },
    "1703": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "1704": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1705": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "1706": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x6B2"
    },
    "1709": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "1710": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "1712": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1713": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "REVERT",
      "path": "61"
    },
    "1714": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1715": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "POP",
      "path": "61"
    },
    "1716": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "GAS",
      "path": "61"
    },
    "1717": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "CALL",
      "path": "61"
    },
    "1718": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "1719": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1720": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "1721": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x6C6"
    },
    "1724": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "1725": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "RETURNDATASIZE",
      "path": "61"
    },
    "1726": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "1728": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1729": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "RETURNDATACOPY",
      "path": "61"
    },
    "1730": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "RETURNDATASIZE",
      "path": "61"
    },
    "1731": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "1733": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "REVERT",
      "path": "61"
    },
    "1734": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1735": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "POP",
      "path": "61"
    },
    "1736": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "POP",
      "path": "61"
    },
    "1737": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "POP",
      "path": "61"
    },
    "1738": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "POP",
      "path": "61"
    },
    "1739": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "1741": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "1742": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "RETURNDATASIZE",
      "path": "61"
    },
    "1743": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "1745": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1746": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "LT",
      "path": "61"
    },
    "1747": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "1748": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x6DC"
    },
    "1751": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "1752": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "1754": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1755": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "REVERT",
      "path": "61"
    },
    "1756": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1757": {
      "op": "POP"
    },
    "1758": {
      "op": "POP"
    },
    "1759": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3852,
        3863
      ],
      "op": "DUP1",
      "path": "61",
      "statement": 13
    },
    "1760": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3852,
        3863
      ],
      "op": "SLOAD",
      "path": "61"
    },
    "1761": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3816,
        3864
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "1763": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3816,
        3864
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1764": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3816,
        3864
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "1765": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3816,
        3864
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1766": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3816,
        3864
      ],
      "op": "DUP3",
      "path": "61"
    },
    "1767": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3816,
        3864
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1768": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3816,
        3864
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "1769": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3846,
        3850
      ],
      "op": "DUP5",
      "path": "61"
    },
    "1770": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3846,
        3850
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1771": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3834,
        3844
      ],
      "op": "CALLER",
      "path": "61"
    },
    "1772": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3834,
        3844
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1773": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3816,
        3864
      ],
      "op": "PUSH32",
      "path": "61",
      "value": "0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595"
    },
    "1806": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3816,
        3864
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1807": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3816,
        3864
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1808": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3816,
        3864
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1809": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3816,
        3864
      ],
      "op": "SUB",
      "path": "61"
    },
    "1810": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3758,
        3801
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "1812": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3816,
        3864
      ],
      "op": "ADD",
      "path": "61"
    },
    "1813": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3816,
        3864
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1814": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3816,
        3864
      ],
      "op": "LOG3",
      "path": "61"
    },
    "1815": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3498,
        3871
      ],
      "op": "POP",
      "path": "61"
    },
    "1816": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3498,
        3871
      ],
      "op": "POP",
      "path": "61"
    },
    "1817": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "offset": [
        3498,
        3871
      ],
      "op": "POP",
      "path": "61"
    },
    "1818": {
      "fn": "ERC20Vault.emergencyWithdraw",
      "jump": "o",
      "offset": [
        3498,
        3871
      ],
      "op": "JUMP",
      "path": "61"
    },
    "1819": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2306,
        2510
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1820": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2390,
        2399
      ],
      "op": "PUSH2",
      "path": "61",
      "statement": 14,
      "value": "0x723"
    },
    "1823": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2390,
        2397
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x7F8"
    },
    "1826": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "jump": "i",
      "offset": [
        2390,
        2399
      ],
      "op": "JUMP",
      "path": "61"
    },
    "1827": {
      "branch": 46,
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2390,
        2399
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1828": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2382,
        2400
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x72C"
    },
    "1831": {
      "branch": 46,
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2382,
        2400
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "1832": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2382,
        2400
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "1834": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2382,
        2400
      ],
      "op": "DUP1",
      "path": "61"
    },
    "1835": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2382,
        2400
      ],
      "op": "REVERT",
      "path": "61"
    },
    "1836": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2382,
        2400
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1837": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2410,
        2431
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "1839": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2434,
        2442
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x4"
    },
    "1841": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2443,
        2447
      ],
      "op": "DUP4",
      "path": "61"
    },
    "1842": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2434,
        2448
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1843": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2434,
        2448
      ],
      "op": "SLOAD",
      "path": "61"
    },
    "1844": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2434,
        2448
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1845": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2434,
        2448
      ],
      "op": "LT",
      "path": "61"
    },
    "1846": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2434,
        2448
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x73B"
    },
    "1849": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2434,
        2448
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "1850": {
      "dev": "Index out of range",
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2434,
        2448
      ],
      "op": "INVALID",
      "path": "61"
    },
    "1851": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2434,
        2448
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1852": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2434,
        2448
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1853": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2434,
        2448
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "1855": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2434,
        2448
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "1856": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2434,
        2448
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "1858": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2434,
        2448
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "1860": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2434,
        2448
      ],
      "op": "KECCAK256",
      "path": "61"
    },
    "1861": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2434,
        2448
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1862": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2434,
        2448
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x2"
    },
    "1864": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2434,
        2448
      ],
      "op": "MUL",
      "path": "61"
    },
    "1865": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2434,
        2448
      ],
      "op": "ADD",
      "path": "61"
    },
    "1866": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2410,
        2448
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1867": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2410,
        2448
      ],
      "op": "POP",
      "path": "61"
    },
    "1868": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2473,
        2503
      ],
      "op": "PUSH2",
      "path": "61",
      "statement": 15,
      "value": "0x75E"
    },
    "1871": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2493,
        2502
      ],
      "op": "DUP3",
      "path": "61"
    },
    "1872": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2473,
        2488
      ],
      "op": "TIMESTAMP",
      "path": "61"
    },
    "1873": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2473,
        2492
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0xC4F"
    },
    "1876": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2473,
        2492
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1877": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2473,
        2503
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1878": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2473,
        2503
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1879": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2473,
        2503
      ],
      "op": "PUSH4",
      "path": "61",
      "value": "0xFFFFFFFF"
    },
    "1884": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2473,
        2503
      ],
      "op": "AND",
      "path": "61"
    },
    "1885": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "jump": "i",
      "offset": [
        2473,
        2503
      ],
      "op": "JUMP",
      "path": "61"
    },
    "1886": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2473,
        2503
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1887": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2458,
        2470
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x1"
    },
    "1889": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2458,
        2470
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "1890": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2458,
        2470
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "1891": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2458,
        2470
      ],
      "op": "ADD",
      "path": "61"
    },
    "1892": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        2458,
        2503
      ],
      "op": "SSTORE",
      "path": "61"
    },
    "1893": {
      "op": "POP"
    },
    "1894": {
      "op": "POP"
    },
    "1895": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "jump": "o",
      "offset": [
        2306,
        2510
      ],
      "op": "JUMP",
      "path": "61"
    },
    "1896": {
      "offset": [
        199,
        224
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "1897": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        199,
        224
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x2"
    },
    "1899": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        199,
        224
      ],
      "op": "SLOAD",
      "path": "61"
    },
    "1900": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "offset": [
        199,
        224
      ],
      "op": "DUP2",
      "path": "61"
    },
    "1901": {
      "fn": "ERC20Vault.updatePoolEndDate",
      "jump": "o",
      "offset": [
        199,
        224
      ],
      "op": "JUMP",
      "path": "61"
    },
    "1902": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        866,
        1077
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "1903": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        932,
        940
      ],
      "op": "PUSH1",
      "path": "57",
      "statement": 16,
      "value": "0x1"
    },
    "1905": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        932,
        940
      ],
      "op": "SLOAD",
      "path": "57"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1910": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1912": {
      "op": "SHL"
    },
    "1913": {
      "op": "SUB"
    },
    "1914": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        932,
        940
      ],
      "op": "AND",
      "path": "57"
    },
    "1915": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        918,
        928
      ],
      "op": "CALLER",
      "path": "57"
    },
    "1916": {
      "branch": 51,
      "fn": "Owned.acceptOwnership",
      "offset": [
        918,
        940
      ],
      "op": "EQ",
      "path": "57"
    },
    "1917": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        910,
        941
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x785"
    },
    "1920": {
      "branch": 51,
      "fn": "Owned.acceptOwnership",
      "offset": [
        910,
        941
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "1921": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        910,
        941
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "1923": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        910,
        941
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1924": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        910,
        941
      ],
      "op": "REVERT",
      "path": "57"
    },
    "1925": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        910,
        941
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "1926": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        985,
        993
      ],
      "op": "PUSH1",
      "path": "57",
      "statement": 17,
      "value": "0x1"
    },
    "1928": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        985,
        993
      ],
      "op": "SLOAD",
      "path": "57"
    },
    "1929": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        985,
        993
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "1931": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        977,
        983
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1932": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        977,
        983
      ],
      "op": "SLOAD",
      "path": "57"
    },
    "1933": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        956,
        994
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "1935": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        956,
        994
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "1936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1942": {
      "op": "SHL"
    },
    "1943": {
      "op": "SUB"
    },
    "1944": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        985,
        993
      ],
      "op": "SWAP4",
      "path": "57"
    },
    "1945": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        985,
        993
      ],
      "op": "DUP5",
      "path": "57"
    },
    "1946": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        985,
        993
      ],
      "op": "AND",
      "path": "57"
    },
    "1947": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        985,
        993
      ],
      "op": "SWAP4",
      "path": "57"
    },
    "1948": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        977,
        983
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "1949": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        977,
        983
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "1950": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        977,
        983
      ],
      "op": "AND",
      "path": "57"
    },
    "1951": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        977,
        983
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "1952": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        956,
        994
      ],
      "op": "PUSH32",
      "path": "57",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1985": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        956,
        994
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "1986": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        956,
        994
      ],
      "op": "LOG3",
      "path": "57"
    },
    "1987": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1029,
        1037
      ],
      "op": "PUSH1",
      "path": "57",
      "statement": 18,
      "value": "0x1"
    },
    "1989": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1029,
        1037
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1990": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1029,
        1037
      ],
      "op": "SLOAD",
      "path": "57"
    },
    "1991": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1029,
        1037
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "1993": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "DUP1",
      "path": "57"
    },
    "1994": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "SLOAD",
      "path": "57"
    },
    "1995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1999": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2001": {
      "op": "SHL"
    },
    "2002": {
      "op": "SUB"
    },
    "2003": {
      "op": "NOT"
    },
    "2004": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2005": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2006": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "AND",
      "path": "57"
    },
    "2007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2013": {
      "op": "SHL"
    },
    "2014": {
      "op": "SUB"
    },
    "2015": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1029,
        1037
      ],
      "op": "DUP5",
      "path": "57"
    },
    "2016": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1029,
        1037
      ],
      "op": "AND",
      "path": "57"
    },
    "2017": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "OR",
      "path": "57"
    },
    "2018": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2019": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "2020": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1004,
        1039
      ],
      "op": "SSTORE",
      "path": "57"
    },
    "2021": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1049,
        1070
      ],
      "op": "AND",
      "path": "57",
      "statement": 19
    },
    "2022": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1049,
        1070
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2023": {
      "fn": "Owned.acceptOwnership",
      "offset": [
        1049,
        1070
      ],
      "op": "SSTORE",
      "path": "57"
    },
    "2024": {
      "fn": "Owned.acceptOwnership",
      "jump": "o",
      "offset": [
        866,
        1077
      ],
      "op": "JUMP",
      "path": "57"
    },
    "2025": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "2026": {
      "fn": "Owned.owner",
      "offset": [
        602,
        609
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "2028": {
      "fn": "Owned.owner",
      "offset": [
        628,
        634
      ],
      "op": "SLOAD",
      "path": "57",
      "statement": 20
    },
    "2029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2035": {
      "op": "SHL"
    },
    "2036": {
      "op": "SUB"
    },
    "2037": {
      "fn": "Owned.owner",
      "offset": [
        628,
        634
      ],
      "op": "AND",
      "path": "57"
    },
    "2038": {
      "fn": "Owned.owner",
      "offset": [
        564,
        641
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2039": {
      "fn": "Owned.owner",
      "jump": "o",
      "offset": [
        564,
        641
      ],
      "op": "JUMP",
      "path": "57"
    },
    "2040": {
      "fn": "Owned.isOwner",
      "offset": [
        646,
        736
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "2041": {
      "fn": "Owned.isOwner",
      "offset": [
        686,
        690
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "2043": {
      "fn": "Owned.isOwner",
      "offset": [
        723,
        729
      ],
      "op": "SLOAD",
      "path": "57",
      "statement": 21
    },
    "2044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2050": {
      "op": "SHL"
    },
    "2051": {
      "op": "SUB"
    },
    "2052": {
      "fn": "Owned.isOwner",
      "offset": [
        723,
        729
      ],
      "op": "AND",
      "path": "57"
    },
    "2053": {
      "fn": "Owned.isOwner",
      "offset": [
        709,
        719
      ],
      "op": "CALLER",
      "path": "57"
    },
    "2054": {
      "fn": "Owned.isOwner",
      "offset": [
        709,
        729
      ],
      "op": "EQ",
      "path": "57"
    },
    "2055": {
      "fn": "Owned.isOwner",
      "offset": [
        709,
        729
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2056": {
      "fn": "Owned.isOwner",
      "jump": "o",
      "offset": [
        646,
        736
      ],
      "op": "JUMP",
      "path": "57"
    },
    "2057": {
      "offset": [
        990,
        1054
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "2058": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x3"
    },
    "2060": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "2062": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "2063": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "DUP2",
      "path": "61"
    },
    "2064": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "2065": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "2067": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "SWAP3",
      "path": "61"
    },
    "2068": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "DUP4",
      "path": "61"
    },
    "2069": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "2070": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "2072": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "DUP1",
      "path": "61"
    },
    "2073": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "DUP5",
      "path": "61"
    },
    "2074": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "KECCAK256",
      "path": "61"
    },
    "2075": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "2076": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "2077": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "2078": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "2079": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "DUP3",
      "path": "61"
    },
    "2080": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "2081": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "2082": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "KECCAK256",
      "path": "61"
    },
    "2083": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "SLOAD",
      "path": "61"
    },
    "2084": {
      "fn": "Owned.isOwner",
      "offset": [
        990,
        1054
      ],
      "op": "DUP2",
      "path": "61"
    },
    "2085": {
      "fn": "Owned.isOwner",
      "jump": "o",
      "offset": [
        990,
        1054
      ],
      "op": "JUMP",
      "path": "61"
    },
    "2086": {
      "fn": "ERC20Vault.add",
      "offset": [
        1531,
        2034
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "2087": {
      "fn": "ERC20Vault.add",
      "offset": [
        1622,
        1631
      ],
      "op": "PUSH2",
      "path": "61",
      "statement": 22,
      "value": "0x82E"
    },
    "2090": {
      "fn": "ERC20Vault.add",
      "offset": [
        1622,
        1629
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x7F8"
    },
    "2093": {
      "fn": "ERC20Vault.add",
      "jump": "i",
      "offset": [
        1622,
        1631
      ],
      "op": "JUMP",
      "path": "61"
    },
    "2094": {
      "branch": 47,
      "fn": "ERC20Vault.add",
      "offset": [
        1622,
        1631
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "2095": {
      "fn": "ERC20Vault.add",
      "offset": [
        1614,
        1632
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x837"
    },
    "2098": {
      "branch": 47,
      "fn": "ERC20Vault.add",
      "offset": [
        1614,
        1632
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "2099": {
      "fn": "ERC20Vault.add",
      "offset": [
        1614,
        1632
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "2101": {
      "fn": "ERC20Vault.add",
      "offset": [
        1614,
        1632
      ],
      "op": "DUP1",
      "path": "61"
    },
    "2102": {
      "fn": "ERC20Vault.add",
      "offset": [
        1614,
        1632
      ],
      "op": "REVERT",
      "path": "61"
    },
    "2103": {
      "fn": "ERC20Vault.add",
      "offset": [
        1614,
        1632
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "2104": {
      "fn": "ERC20Vault.add",
      "offset": [
        1642,
        1657
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "2106": {
      "fn": "ERC20Vault.add",
      "offset": [
        1660,
        1690
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x843"
    },
    "2109": {
      "fn": "ERC20Vault.add",
      "offset": [
        1660,
        1675
      ],
      "op": "TIMESTAMP",
      "path": "61"
    },
    "2110": {
      "fn": "ERC20Vault.add",
      "offset": [
        1680,
        1689
      ],
      "op": "DUP4",
      "path": "61"
    },
    "2111": {
      "fn": "ERC20Vault.add",
      "offset": [
        1660,
        1679
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0xC4F"
    },
    "2114": {
      "fn": "ERC20Vault.add",
      "jump": "i",
      "offset": [
        1660,
        1690
      ],
      "op": "JUMP",
      "path": "61"
    },
    "2115": {
      "fn": "ERC20Vault.add",
      "offset": [
        1660,
        1690
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "2116": {
      "fn": "ERC20Vault.add",
      "offset": [
        1718,
        1726
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x4"
    },
    "2118": {
      "fn": "ERC20Vault.add",
      "offset": [
        1718,
        1733
      ],
      "op": "SLOAD",
      "path": "61"
    },
    "2119": {
      "fn": "ERC20Vault.add",
      "offset": [
        1642,
        1690
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "2120": {
      "fn": "ERC20Vault.add",
      "offset": [
        1642,
        1690
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "2121": {
      "op": "POP"
    },
    "2122": {
      "fn": "ERC20Vault.add",
      "offset": [
        1701,
        1715
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "2124": {
      "fn": "ERC20Vault.add",
      "offset": [
        1743,
        1876
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "2125": {
      "fn": "ERC20Vault.add",
      "offset": [
        1771,
        1777
      ],
      "op": "DUP2",
      "path": "61"
    },
    "2126": {
      "fn": "ERC20Vault.add",
      "offset": [
        1765,
        1768
      ],
      "op": "DUP2",
      "path": "61"
    },
    "2127": {
      "fn": "ERC20Vault.add",
      "offset": [
        1765,
        1777
      ],
      "op": "LT",
      "path": "61"
    },
    "2128": {
      "fn": "ERC20Vault.add",
      "offset": [
        1743,
        1876
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "2129": {
      "fn": "ERC20Vault.add",
      "offset": [
        1743,
        1876
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x8E0"
    },
    "2132": {
      "fn": "ERC20Vault.add",
      "offset": [
        1743,
        1876
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "2133": {
      "fn": "ERC20Vault.add",
      "offset": [
        1831,
        1837
      ],
      "op": "DUP6",
      "path": "61",
      "statement": 23
    },
    "2134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2138": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2140": {
      "op": "SHL"
    },
    "2141": {
      "op": "SUB"
    },
    "2142": {
      "fn": "ERC20Vault.add",
      "offset": [
        1808,
        1837
      ],
      "op": "AND",
      "path": "61"
    },
    "2143": {
      "fn": "ERC20Vault.add",
      "offset": [
        1808,
        1816
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x4"
    },
    "2145": {
      "fn": "ERC20Vault.add",
      "offset": [
        1817,
        1820
      ],
      "op": "DUP3",
      "path": "61"
    },
    "2146": {
      "fn": "ERC20Vault.add",
      "offset": [
        1808,
        1821
      ],
      "op": "DUP2",
      "path": "61"
    },
    "2147": {
      "fn": "ERC20Vault.add",
      "offset": [
        1808,
        1821
      ],
      "op": "SLOAD",
      "path": "61"
    },
    "2148": {
      "fn": "ERC20Vault.add",
      "offset": [
        1808,
        1821
      ],
      "op": "DUP2",
      "path": "61"
    },
    "2149": {
      "fn": "ERC20Vault.add",
      "offset": [
        1808,
        1821
      ],
      "op": "LT",
      "path": "61"
    },
    "2150": {
      "fn": "ERC20Vault.add",
      "offset": [
        1808,
        1821
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x86B"
    },
    "2153": {
      "fn": "ERC20Vault.add",
      "offset": [
        1808,
        1821
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "2154": {
      "dev": "Index out of range",
      "fn": "ERC20Vault.add",
      "offset": [
        1808,
        1821
      ],
      "op": "INVALID",
      "path": "61"
    },
    "2155": {
      "fn": "ERC20Vault.add",
      "offset": [
        1808,
        1821
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "2156": {
      "fn": "ERC20Vault.add",
      "offset": [
        1808,
        1821
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "2158": {
      "fn": "ERC20Vault.add",
      "offset": [
        1808,
        1821
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "2159": {
      "fn": "ERC20Vault.add",
      "offset": [
        1808,
        1821
      ],
      "op": "DUP3",
      "path": "61"
    },
    "2160": {
      "fn": "ERC20Vault.add",
      "offset": [
        1808,
        1821
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "2161": {
      "fn": "ERC20Vault.add",
      "offset": [
        1808,
        1821
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "2163": {
      "fn": "ERC20Vault.add",
      "offset": [
        1808,
        1821
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "2164": {
      "fn": "ERC20Vault.add",
      "offset": [
        1808,
        1821
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "2165": {
      "fn": "ERC20Vault.add",
      "offset": [
        1808,
        1821
      ],
      "op": "KECCAK256",
      "path": "61"
    },
    "2166": {
      "fn": "ERC20Vault.add",
      "offset": [
        1808,
        1821
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x2"
    },
    "2168": {
      "fn": "ERC20Vault.add",
      "offset": [
        1808,
        1821
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "2169": {
      "fn": "ERC20Vault.add",
      "offset": [
        1808,
        1821
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "2170": {
      "fn": "ERC20Vault.add",
      "offset": [
        1808,
        1821
      ],
      "op": "MUL",
      "path": "61"
    },
    "2171": {
      "fn": "ERC20Vault.add",
      "offset": [
        1808,
        1821
      ],
      "op": "ADD",
      "path": "61"
    },
    "2172": {
      "fn": "ERC20Vault.add",
      "offset": [
        1808,
        1827
      ],
      "op": "SLOAD",
      "path": "61"
    },
    "2173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2177": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2179": {
      "op": "SHL"
    },
    "2180": {
      "op": "SUB"
    },
    "2181": {
      "fn": "ERC20Vault.add",
      "offset": [
        1808,
        1827
      ],
      "op": "AND",
      "path": "61"
    },
    "2182": {
      "fn": "ERC20Vault.add",
      "offset": [
        1808,
        1837
      ],
      "op": "EQ",
      "path": "61"
    },
    "2183": {
      "branch": 48,
      "fn": "ERC20Vault.add",
      "offset": [
        1808,
        1837
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "2184": {
      "fn": "ERC20Vault.add",
      "offset": [
        1800,
        1865
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x8D8"
    },
    "2187": {
      "branch": 48,
      "fn": "ERC20Vault.add",
      "offset": [
        1800,
        1865
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "2188": {
      "fn": "ERC20Vault.add",
      "offset": [
        1800,
        1865
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "2190": {
      "fn": "ERC20Vault.add",
      "offset": [
        1800,
        1865
      ],
      "op": "DUP1",
      "path": "61"
    },
    "2191": {
      "fn": "ERC20Vault.add",
      "offset": [
        1800,
        1865
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "2192": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2198": {
      "op": "SHL"
    },
    "2199": {
      "fn": "ERC20Vault.add",
      "offset": [
        1800,
        1865
      ],
      "op": "DUP2",
      "path": "61"
    },
    "2200": {
      "fn": "ERC20Vault.add",
      "offset": [
        1800,
        1865
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "2201": {
      "fn": "ERC20Vault.add",
      "offset": [
        1800,
        1865
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "2203": {
      "fn": "ERC20Vault.add",
      "offset": [
        1800,
        1865
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x4"
    },
    "2205": {
      "fn": "ERC20Vault.add",
      "offset": [
        1800,
        1865
      ],
      "op": "DUP3",
      "path": "61"
    },
    "2206": {
      "fn": "ERC20Vault.add",
      "offset": [
        1800,
        1865
      ],
      "op": "ADD",
      "path": "61"
    },
    "2207": {
      "fn": "ERC20Vault.add",
      "offset": [
        1800,
        1865
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "2208": {
      "fn": "ERC20Vault.add",
      "offset": [
        1800,
        1865
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x18"
    },
    "2210": {
      "fn": "ERC20Vault.add",
      "offset": [
        1800,
        1865
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x24"
    },
    "2212": {
      "fn": "ERC20Vault.add",
      "offset": [
        1800,
        1865
      ],
      "op": "DUP3",
      "path": "61"
    },
    "2213": {
      "fn": "ERC20Vault.add",
      "offset": [
        1800,
        1865
      ],
      "op": "ADD",
      "path": "61"
    },
    "2214": {
      "fn": "ERC20Vault.add",
      "offset": [
        1800,
        1865
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "2215": {
      "fn": "ERC20Vault.add",
      "offset": [
        1800,
        1865
      ],
      "op": "PUSH32",
      "path": "61",
      "value": "0x4572726F7220706F6F6C20616C72656164792061646465640000000000000000"
    },
    "2248": {
      "fn": "ERC20Vault.add",
      "offset": [
        1800,
        1865
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x44"
    },
    "2250": {
      "fn": "ERC20Vault.add",
      "offset": [
        1800,
        1865
      ],
      "op": "DUP3",
      "path": "61"
    },
    "2251": {
      "fn": "ERC20Vault.add",
      "offset": [
        1800,
        1865
      ],
      "op": "ADD",
      "path": "61"
    },
    "2252": {
      "fn": "ERC20Vault.add",
      "offset": [
        1800,
        1865
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "2253": {
      "fn": "ERC20Vault.add",
      "offset": [
        1800,
        1865
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "2254": {
      "fn": "ERC20Vault.add",
      "offset": [
        1800,
        1865
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "2255": {
      "fn": "ERC20Vault.add",
      "offset": [
        1800,
        1865
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "2256": {
      "fn": "ERC20Vault.add",
      "offset": [
        1800,
        1865
      ],
      "op": "DUP2",
      "path": "61"
    },
    "2257": {
      "fn": "ERC20Vault.add",
      "offset": [
        1800,
        1865
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "2258": {
      "fn": "ERC20Vault.add",
      "offset": [
        1800,
        1865
      ],
      "op": "SUB",
      "path": "61"
    },
    "2259": {
      "fn": "ERC20Vault.add",
      "offset": [
        1800,
        1865
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x64"
    },
    "2261": {
      "fn": "ERC20Vault.add",
      "offset": [
        1800,
        1865
      ],
      "op": "ADD",
      "path": "61"
    },
    "2262": {
      "fn": "ERC20Vault.add",
      "offset": [
        1800,
        1865
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "2263": {
      "fn": "ERC20Vault.add",
      "offset": [
        1800,
        1865
      ],
      "op": "REVERT",
      "path": "61"
    },
    "2264": {
      "fn": "ERC20Vault.add",
      "offset": [
        1800,
        1865
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "2265": {
      "fn": "ERC20Vault.add",
      "offset": [
        1779,
        1784
      ],
      "op": "PUSH1",
      "path": "61",
      "statement": 24,
      "value": "0x1"
    },
    "2267": {
      "fn": "ERC20Vault.add",
      "offset": [
        1779,
        1784
      ],
      "op": "ADD",
      "path": "61"
    },
    "2268": {
      "fn": "ERC20Vault.add",
      "offset": [
        1743,
        1876
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x84C"
    },
    "2271": {
      "fn": "ERC20Vault.add",
      "offset": [
        1743,
        1876
      ],
      "op": "JUMP",
      "path": "61"
    },
    "2272": {
      "fn": "ERC20Vault.add",
      "offset": [
        1743,
        1876
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "2273": {
      "op": "POP"
    },
    "2274": {
      "op": "POP"
    },
    "2275": {
      "fn": "ERC20Vault.add",
      "offset": [
        1909,
        2026
      ],
      "op": "PUSH1",
      "path": "61",
      "statement": 25,
      "value": "0x40"
    },
    "2277": {
      "fn": "ERC20Vault.add",
      "offset": [
        1909,
        2026
      ],
      "op": "DUP1",
      "path": "61"
    },
    "2278": {
      "fn": "ERC20Vault.add",
      "offset": [
        1909,
        2026
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "2279": {
      "fn": "ERC20Vault.add",
      "offset": [
        1909,
        2026
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x60"
    },
    "2281": {
      "fn": "ERC20Vault.add",
      "offset": [
        1909,
        2026
      ],
      "op": "DUP2",
      "path": "61"
    },
    "2282": {
      "fn": "ERC20Vault.add",
      "offset": [
        1909,
        2026
      ],
      "op": "ADD",
      "path": "61"
    },
    "2283": {
      "fn": "ERC20Vault.add",
      "offset": [
        1909,
        2026
      ],
      "op": "DUP3",
      "path": "61"
    },
    "2284": {
      "fn": "ERC20Vault.add",
      "offset": [
        1909,
        2026
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "2285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2289": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2291": {
      "op": "SHL"
    },
    "2292": {
      "op": "SUB"
    },
    "2293": {
      "fn": "ERC20Vault.add",
      "offset": [
        1909,
        2026
      ],
      "op": "SWAP6",
      "path": "61"
    },
    "2294": {
      "fn": "ERC20Vault.add",
      "offset": [
        1909,
        2026
      ],
      "op": "DUP7",
      "path": "61"
    },
    "2295": {
      "fn": "ERC20Vault.add",
      "offset": [
        1909,
        2026
      ],
      "op": "AND",
      "path": "61"
    },
    "2296": {
      "fn": "ERC20Vault.add",
      "offset": [
        1909,
        2026
      ],
      "op": "DUP2",
      "path": "61"
    },
    "2297": {
      "fn": "ERC20Vault.add",
      "offset": [
        1909,
        2026
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "2298": {
      "fn": "ERC20Vault.add",
      "offset": [
        1909,
        2026
      ],
      "op": "SWAP4",
      "path": "61"
    },
    "2299": {
      "fn": "ERC20Vault.add",
      "offset": [
        1909,
        2026
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "2300": {
      "fn": "ERC20Vault.add",
      "offset": [
        1909,
        2026
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "2301": {
      "fn": "ERC20Vault.add",
      "offset": [
        1909,
        2026
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "2303": {
      "fn": "ERC20Vault.add",
      "offset": [
        1909,
        2026
      ],
      "op": "DUP6",
      "path": "61"
    },
    "2304": {
      "fn": "ERC20Vault.add",
      "offset": [
        1909,
        2026
      ],
      "op": "ADD",
      "path": "61"
    },
    "2305": {
      "fn": "ERC20Vault.add",
      "offset": [
        1909,
        2026
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "2306": {
      "fn": "ERC20Vault.add",
      "offset": [
        1909,
        2026
      ],
      "op": "DUP2",
      "path": "61"
    },
    "2307": {
      "fn": "ERC20Vault.add",
      "offset": [
        1909,
        2026
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "2308": {
      "fn": "ERC20Vault.add",
      "offset": [
        1909,
        2026
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "2309": {
      "fn": "ERC20Vault.add",
      "offset": [
        1909,
        2026
      ],
      "op": "DUP5",
      "path": "61"
    },
    "2310": {
      "fn": "ERC20Vault.add",
      "offset": [
        1909,
        2026
      ],
      "op": "ADD",
      "path": "61"
    },
    "2311": {
      "fn": "ERC20Vault.add",
      "offset": [
        1909,
        2026
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "2312": {
      "fn": "ERC20Vault.add",
      "offset": [
        1909,
        2026
      ],
      "op": "DUP3",
      "path": "61"
    },
    "2313": {
      "fn": "ERC20Vault.add",
      "offset": [
        1909,
        2026
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "2314": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        1903
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x4"
    },
    "2316": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "DUP1",
      "path": "61"
    },
    "2317": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "SLOAD",
      "path": "61"
    },
    "2318": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x1"
    },
    "2320": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "DUP2",
      "path": "61"
    },
    "2321": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "ADD",
      "path": "61"
    },
    "2322": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "DUP3",
      "path": "61"
    },
    "2323": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "SSTORE",
      "path": "61"
    },
    "2324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2326": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "2327": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "2328": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "2329": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "2330": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "SWAP4",
      "path": "61"
    },
    "2331": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "2332": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "PUSH32",
      "path": "61",
      "value": "0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
    },
    "2365": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x2"
    },
    "2367": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "2368": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "SWAP6",
      "path": "61"
    },
    "2369": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "MUL",
      "path": "61"
    },
    "2370": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "SWAP5",
      "path": "61"
    },
    "2371": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "DUP6",
      "path": "61"
    },
    "2372": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "ADD",
      "path": "61"
    },
    "2373": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "DUP1",
      "path": "61"
    },
    "2374": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "SLOAD",
      "path": "61"
    },
    "2375": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "SWAP3",
      "path": "61"
    },
    "2376": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2381": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2383": {
      "op": "SHL"
    },
    "2384": {
      "op": "SUB"
    },
    "2385": {
      "op": "NOT"
    },
    "2386": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "2387": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "SWAP4",
      "path": "61"
    },
    "2388": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "AND",
      "path": "61"
    },
    "2389": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "2390": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "2391": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "SWAP7",
      "path": "61"
    },
    "2392": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "AND",
      "path": "61"
    },
    "2393": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "OR",
      "path": "61"
    },
    "2394": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2396": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2398": {
      "op": "SHL"
    },
    "2399": {
      "op": "NOT"
    },
    "2400": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "AND",
      "path": "61"
    },
    "2401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2405": {
      "op": "SHL"
    },
    "2406": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "2407": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "2408": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "2409": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "2410": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "2411": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "2412": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "MUL",
      "path": "61"
    },
    "2413": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "OR",
      "path": "61"
    },
    "2414": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "2415": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "SWAP4",
      "path": "61"
    },
    "2416": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "SSTORE",
      "path": "61"
    },
    "2417": {
      "op": "POP"
    },
    "2418": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "2419": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "2420": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "PUSH32",
      "path": "61",
      "value": "0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19C"
    },
    "2453": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "2454": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "2455": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "ADD",
      "path": "61"
    },
    "2456": {
      "fn": "ERC20Vault.add",
      "offset": [
        1895,
        2027
      ],
      "op": "SSTORE",
      "path": "61"
    },
    "2457": {
      "fn": "ERC20Vault.add",
      "jump": "o",
      "offset": [
        1531,
        2034
      ],
      "op": "JUMP",
      "path": "61"
    },
    "2458": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4000,
        4282
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "2459": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4155,
        4164
      ],
      "op": "PUSH2",
      "path": "61",
      "statement": 26,
      "value": "0x9A2"
    },
    "2462": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4155,
        4162
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x7F8"
    },
    "2465": {
      "fn": "ERC20Vault.setContractAllowance",
      "jump": "i",
      "offset": [
        4155,
        4164
      ],
      "op": "JUMP",
      "path": "61"
    },
    "2466": {
      "branch": 49,
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4155,
        4164
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "2467": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4147,
        4165
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x9AB"
    },
    "2470": {
      "branch": 49,
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4147,
        4165
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "2471": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4147,
        4165
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "2473": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4147,
        4165
      ],
      "op": "DUP1",
      "path": "61"
    },
    "2474": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4147,
        4165
      ],
      "op": "REVERT",
      "path": "61"
    },
    "2475": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4147,
        4165
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "2476": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4183,
        4210
      ],
      "op": "PUSH2",
      "path": "61",
      "statement": 27,
      "value": "0x9B4"
    },
    "2479": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4194,
        4209
      ],
      "op": "DUP2",
      "path": "61"
    },
    "2480": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4183,
        4193
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x396"
    },
    "2483": {
      "fn": "ERC20Vault.setContractAllowance",
      "jump": "i",
      "offset": [
        4183,
        4210
      ],
      "op": "JUMP",
      "path": "61"
    },
    "2484": {
      "branch": 50,
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4183,
        4210
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "2485": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4175,
        4211
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0x9BD"
    },
    "2488": {
      "branch": 50,
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4175,
        4211
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "2489": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4175,
        4211
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "2491": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4175,
        4211
      ],
      "op": "DUP1",
      "path": "61"
    },
    "2492": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4175,
        4211
      ],
      "op": "REVERT",
      "path": "61"
    },
    "2493": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4175,
        4211
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "2494": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4228,
        4240
      ],
      "op": "DUP3",
      "path": "61",
      "statement": 28
    },
    "2495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2499": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2501": {
      "op": "SHL"
    },
    "2502": {
      "op": "SUB"
    },
    "2503": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4249
      ],
      "op": "AND",
      "path": "61"
    },
    "2504": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4249
      ],
      "op": "PUSH4",
      "path": "61",
      "value": "0x95EA7B3"
    },
    "2509": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4250,
        4265
      ],
      "op": "DUP3",
      "path": "61"
    },
    "2510": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4267,
        4274
      ],
      "op": "DUP5",
      "path": "61"
    },
    "2511": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "2513": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "2514": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "DUP4",
      "path": "61"
    },
    "2515": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "PUSH4",
      "path": "61",
      "value": "0xFFFFFFFF"
    },
    "2520": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "AND",
      "path": "61"
    },
    "2521": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0xE0"
    },
    "2523": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "SHL",
      "path": "61"
    },
    "2524": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "DUP2",
      "path": "61"
    },
    "2525": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "2526": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x4"
    },
    "2528": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "ADD",
      "path": "61"
    },
    "2529": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "DUP1",
      "path": "61"
    },
    "2530": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "DUP4",
      "path": "61"
    },
    "2531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2535": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2537": {
      "op": "SHL"
    },
    "2538": {
      "op": "SUB"
    },
    "2539": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "AND",
      "path": "61"
    },
    "2540": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "DUP2",
      "path": "61"
    },
    "2541": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "2542": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "2544": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "ADD",
      "path": "61"
    },
    "2545": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "DUP3",
      "path": "61"
    },
    "2546": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "DUP2",
      "path": "61"
    },
    "2547": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "2548": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "2550": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "ADD",
      "path": "61"
    },
    "2551": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "SWAP3",
      "path": "61"
    },
    "2552": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "POP",
      "path": "61"
    },
    "2553": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "POP",
      "path": "61"
    },
    "2554": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "POP",
      "path": "61"
    },
    "2555": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "2557": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "2559": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "2560": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "DUP1",
      "path": "61"
    },
    "2561": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "DUP4",
      "path": "61"
    },
    "2562": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "SUB",
      "path": "61"
    },
    "2563": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "DUP2",
      "path": "61"
    },
    "2564": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "2566": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "DUP8",
      "path": "61"
    },
    "2567": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "DUP1",
      "path": "61"
    },
    "2568": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "EXTCODESIZE",
      "path": "61"
    },
    "2569": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "2570": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "DUP1",
      "path": "61"
    },
    "2571": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "2572": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0xA14"
    },
    "2575": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "2576": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "2578": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "DUP1",
      "path": "61"
    },
    "2579": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "REVERT",
      "path": "61"
    },
    "2580": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "2581": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "POP",
      "path": "61"
    },
    "2582": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "GAS",
      "path": "61"
    },
    "2583": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "CALL",
      "path": "61"
    },
    "2584": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "2585": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "DUP1",
      "path": "61"
    },
    "2586": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "2587": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0xA28"
    },
    "2590": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "2591": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "RETURNDATASIZE",
      "path": "61"
    },
    "2592": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "2594": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "DUP1",
      "path": "61"
    },
    "2595": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "RETURNDATACOPY",
      "path": "61"
    },
    "2596": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "RETURNDATASIZE",
      "path": "61"
    },
    "2597": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "2599": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "REVERT",
      "path": "61"
    },
    "2600": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "2601": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "POP",
      "path": "61"
    },
    "2602": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "POP",
      "path": "61"
    },
    "2603": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "POP",
      "path": "61"
    },
    "2604": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "POP",
      "path": "61"
    },
    "2605": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "2607": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "2608": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "RETURNDATASIZE",
      "path": "61"
    },
    "2609": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "2611": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "DUP2",
      "path": "61"
    },
    "2612": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "LT",
      "path": "61"
    },
    "2613": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "2614": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0xA3E"
    },
    "2617": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "2618": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "2620": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "DUP1",
      "path": "61"
    },
    "2621": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "REVERT",
      "path": "61"
    },
    "2622": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        4221,
        4275
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "2623": {
      "op": "POP"
    },
    "2624": {
      "op": "POP"
    },
    "2625": {
      "op": "POP"
    },
    "2626": {
      "op": "POP"
    },
    "2627": {
      "op": "POP"
    },
    "2628": {
      "fn": "ERC20Vault.setContractAllowance",
      "jump": "o",
      "offset": [
        4000,
        4282
      ],
      "op": "JUMP",
      "path": "61"
    },
    "2629": {
      "offset": [
        156,
        179
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "2630": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        156,
        179
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x1"
    },
    "2632": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        156,
        179
      ],
      "op": "SLOAD",
      "path": "57"
    },
    "2633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2637": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2639": {
      "op": "SHL"
    },
    "2640": {
      "op": "SUB"
    },
    "2641": {
      "offset": [
        156,
        179
      ],
      "op": "AND",
      "path": "57"
    },
    "2642": {
      "fn": "ERC20Vault.setContractAllowance",
      "offset": [
        156,
        179
      ],
      "op": "DUP2",
      "path": "57"
    },
    "2643": {
      "fn": "ERC20Vault.setContractAllowance",
      "jump": "o",
      "offset": [
        156,
        179
      ],
      "op": "JUMP",
      "path": "57"
    },
    "2644": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2548,
        2893
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "2645": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2612,
        2633
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "2647": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2636,
        2644
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x4"
    },
    "2649": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2645,
        2649
      ],
      "op": "DUP4",
      "path": "61"
    },
    "2650": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2636,
        2650
      ],
      "op": "DUP2",
      "path": "61"
    },
    "2651": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2636,
        2650
      ],
      "op": "SLOAD",
      "path": "61"
    },
    "2652": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2636,
        2650
      ],
      "op": "DUP2",
      "path": "61"
    },
    "2653": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2636,
        2650
      ],
      "op": "LT",
      "path": "61"
    },
    "2654": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2636,
        2650
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0xA63"
    },
    "2657": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2636,
        2650
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "2658": {
      "dev": "Index out of range",
      "fn": "ERC20Vault.deposit",
      "offset": [
        2636,
        2650
      ],
      "op": "INVALID",
      "path": "61"
    },
    "2659": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2636,
        2650
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "2660": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2636,
        2650
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "2662": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2636,
        2650
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "2663": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2636,
        2650
      ],
      "op": "DUP3",
      "path": "61"
    },
    "2664": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2636,
        2650
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "2665": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2636,
        2650
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "2667": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2636,
        2650
      ],
      "op": "DUP1",
      "path": "61"
    },
    "2668": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2636,
        2650
      ],
      "op": "DUP4",
      "path": "61"
    },
    "2669": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2636,
        2650
      ],
      "op": "KECCAK256",
      "path": "61"
    },
    "2670": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2684,
        2698
      ],
      "op": "DUP7",
      "path": "61"
    },
    "2671": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2684,
        2698
      ],
      "op": "DUP5",
      "path": "61"
    },
    "2672": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2684,
        2698
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "2673": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2684,
        2692
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x3"
    },
    "2675": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2684,
        2698
      ],
      "op": "DUP3",
      "path": "61"
    },
    "2676": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2684,
        2698
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "2677": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2684,
        2698
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "2679": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2684,
        2698
      ],
      "op": "DUP1",
      "path": "61"
    },
    "2680": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2684,
        2698
      ],
      "op": "DUP6",
      "path": "61"
    },
    "2681": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2684,
        2698
      ],
      "op": "KECCAK256",
      "path": "61"
    },
    "2682": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2699,
        2709
      ],
      "op": "CALLER",
      "path": "61"
    },
    "2683": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2684,
        2710
      ],
      "op": "DUP1",
      "path": "61"
    },
    "2684": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2684,
        2710
      ],
      "op": "DUP8",
      "path": "61"
    },
    "2685": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2684,
        2710
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "2686": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2684,
        2710
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "2687": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2684,
        2710
      ],
      "op": "DUP5",
      "path": "61"
    },
    "2688": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2684,
        2710
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "2689": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2684,
        2710
      ],
      "op": "DUP2",
      "path": "61"
    },
    "2690": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2684,
        2710
      ],
      "op": "DUP7",
      "path": "61"
    },
    "2691": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2684,
        2710
      ],
      "op": "KECCAK256",
      "path": "61"
    },
    "2692": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2636,
        2650
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x2"
    },
    "2694": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2636,
        2650
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "2695": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2636,
        2650
      ],
      "op": "SWAP6",
      "path": "61"
    },
    "2696": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2636,
        2650
      ],
      "op": "MUL",
      "path": "61"
    },
    "2697": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2636,
        2650
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "2698": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2636,
        2650
      ],
      "op": "SWAP3",
      "path": "61"
    },
    "2699": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2636,
        2650
      ],
      "op": "ADD",
      "path": "61"
    },
    "2700": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2731
      ],
      "op": "DUP1",
      "path": "61",
      "statement": 29
    },
    "2701": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2731
      ],
      "op": "SLOAD",
      "path": "61"
    },
    "2702": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "DUP3",
      "path": "61"
    },
    "2703": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "2704": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2709": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2711": {
      "op": "SHL"
    },
    "2712": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "DUP2",
      "path": "61"
    },
    "2713": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "2714": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x4"
    },
    "2716": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "DUP2",
      "path": "61"
    },
    "2717": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "ADD",
      "path": "61"
    },
    "2718": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "SWAP5",
      "path": "61"
    },
    "2719": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "2720": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "SWAP5",
      "path": "61"
    },
    "2721": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "2722": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2774,
        2778
      ],
      "op": "ADDRESS",
      "path": "61"
    },
    "2723": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x24"
    },
    "2725": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "DUP6",
      "path": "61"
    },
    "2726": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "ADD",
      "path": "61"
    },
    "2727": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "2728": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x44"
    },
    "2730": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "DUP5",
      "path": "61"
    },
    "2731": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "ADD",
      "path": "61"
    },
    "2732": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "DUP10",
      "path": "61"
    },
    "2733": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "2734": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "2735": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "2736": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "2737": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2636,
        2650
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "2738": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2636,
        2650
      ],
      "op": "SWAP7",
      "path": "61"
    },
    "2739": {
      "op": "POP"
    },
    "2740": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2684,
        2710
      ],
      "op": "SWAP4",
      "path": "61"
    },
    "2741": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2684,
        2710
      ],
      "op": "SWAP5",
      "path": "61"
    },
    "2742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2746": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2748": {
      "op": "SHL"
    },
    "2749": {
      "op": "SUB"
    },
    "2750": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2731
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "2751": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2731
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "2752": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2731
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "2753": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2731
      ],
      "op": "AND",
      "path": "61"
    },
    "2754": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2731
      ],
      "op": "SWAP4",
      "path": "61"
    },
    "2755": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2744
      ],
      "op": "PUSH4",
      "path": "61",
      "value": "0x23B872DD"
    },
    "2760": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2744
      ],
      "op": "SWAP4",
      "path": "61"
    },
    "2761": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x64"
    },
    "2763": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "DUP1",
      "path": "61"
    },
    "2764": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "DUP6",
      "path": "61"
    },
    "2765": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "ADD",
      "path": "61"
    },
    "2766": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "SWAP5",
      "path": "61"
    },
    "2767": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2636,
        2650
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "2768": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2636,
        2650
      ],
      "op": "SWAP4",
      "path": "61"
    },
    "2769": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "2770": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "DUP4",
      "path": "61"
    },
    "2771": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "2772": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "SUB",
      "path": "61"
    },
    "2773": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "ADD",
      "path": "61"
    },
    "2774": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "2775": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "DUP3",
      "path": "61"
    },
    "2776": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "2777": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2731
      ],
      "op": "DUP8",
      "path": "61"
    },
    "2778": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "DUP1",
      "path": "61"
    },
    "2779": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "EXTCODESIZE",
      "path": "61"
    },
    "2780": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "2781": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "DUP1",
      "path": "61"
    },
    "2782": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "2783": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0xAE7"
    },
    "2786": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "2787": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "2789": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "DUP1",
      "path": "61"
    },
    "2790": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "REVERT",
      "path": "61"
    },
    "2791": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "2792": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "POP",
      "path": "61"
    },
    "2793": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "GAS",
      "path": "61"
    },
    "2794": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "CALL",
      "path": "61"
    },
    "2795": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "2796": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "DUP1",
      "path": "61"
    },
    "2797": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "2798": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0xAFB"
    },
    "2801": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "2802": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "RETURNDATASIZE",
      "path": "61"
    },
    "2803": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "2805": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "DUP1",
      "path": "61"
    },
    "2806": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "RETURNDATACOPY",
      "path": "61"
    },
    "2807": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "RETURNDATASIZE",
      "path": "61"
    },
    "2808": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "2810": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "REVERT",
      "path": "61"
    },
    "2811": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "2812": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "POP",
      "path": "61"
    },
    "2813": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "POP",
      "path": "61"
    },
    "2814": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "POP",
      "path": "61"
    },
    "2815": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "POP",
      "path": "61"
    },
    "2816": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x40"
    },
    "2818": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "2819": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "RETURNDATASIZE",
      "path": "61"
    },
    "2820": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "2822": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "DUP2",
      "path": "61"
    },
    "2823": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "LT",
      "path": "61"
    },
    "2824": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "ISZERO",
      "path": "61"
    },
    "2825": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0xB11"
    },
    "2828": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "JUMPI",
      "path": "61"
    },
    "2829": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x0"
    },
    "2831": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "DUP1",
      "path": "61"
    },
    "2832": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "REVERT",
      "path": "61"
    },
    "2833": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2721,
        2789
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "2834": {
      "op": "POP"
    },
    "2835": {
      "op": "POP"
    },
    "2836": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2813,
        2824
      ],
      "op": "DUP1",
      "path": "61",
      "statement": 30
    },
    "2837": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2813,
        2824
      ],
      "op": "SLOAD",
      "path": "61"
    },
    "2838": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2813,
        2837
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0xB1F"
    },
    "2841": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2813,
        2837
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "2842": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2829,
        2836
      ],
      "op": "DUP5",
      "path": "61"
    },
    "2843": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2813,
        2828
      ],
      "op": "PUSH2",
      "path": "61",
      "value": "0xC4F"
    },
    "2846": {
      "fn": "ERC20Vault.deposit",
      "jump": "i",
      "offset": [
        2813,
        2837
      ],
      "op": "JUMP",
      "path": "61"
    },
    "2847": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2813,
        2837
      ],
      "op": "JUMPDEST",
      "path": "61"
    },
    "2848": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2799,
        2837
      ],
      "op": "DUP2",
      "path": "61"
    },
    "2849": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2799,
        2837
      ],
      "op": "SSTORE",
      "path": "61"
    },
    "2850": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2852,
        2886
      ],
      "op": "PUSH1",
      "path": "61",
      "statement": 31,
      "value": "0x40"
    },
    "2852": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2852,
        2886
      ],
      "op": "DUP1",
      "path": "61"
    },
    "2853": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2852,
        2886
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "2854": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2852,
        2886
      ],
      "op": "DUP5",
      "path": "61"
    },
    "2855": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2852,
        2886
      ],
      "op": "DUP2",
      "path": "61"
    },
    "2856": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2852,
        2886
      ],
      "op": "MSTORE",
      "path": "61"
    },
    "2857": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2852,
        2886
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "2858": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2852,
        2886
      ],
      "op": "MLOAD",
      "path": "61"
    },
    "2859": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2872,
        2876
      ],
      "op": "DUP6",
      "path": "61"
    },
    "2860": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2872,
        2876
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "2861": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2860,
        2870
      ],
      "op": "CALLER",
      "path": "61"
    },
    "2862": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2860,
        2870
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "2863": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2852,
        2886
      ],
      "op": "PUSH32",
      "path": "61",
      "value": "0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
    },
    "2896": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2852,
        2886
      ],
      "op": "SWAP2",
      "path": "61"
    },
    "2897": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2852,
        2886
      ],
      "op": "DUP2",
      "path": "61"
    },
    "2898": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2852,
        2886
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "2899": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2852,
        2886
      ],
      "op": "SUB",
      "path": "61"
    },
    "2900": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2852,
        2886
      ],
      "op": "PUSH1",
      "path": "61",
      "value": "0x20"
    },
    "2902": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2852,
        2886
      ],
      "op": "ADD",
      "path": "61"
    },
    "2903": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2852,
        2886
      ],
      "op": "SWAP1",
      "path": "61"
    },
    "2904": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2852,
        2886
      ],
      "op": "LOG3",
      "path": "61"
    },
    "2905": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2548,
        2893
      ],
      "op": "POP",
      "path": "61"
    },
    "2906": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2548,
        2893
      ],
      "op": "POP",
      "path": "61"
    },
    "2907": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2548,
        2893
      ],
      "op": "POP",
      "path": "61"
    },
    "2908": {
      "fn": "ERC20Vault.deposit",
      "offset": [
        2548,
        2893
      ],
      "op": "POP",
      "path": "61"
    },
    "2909": {
      "fn": "ERC20Vault.deposit",
      "jump": "o",
      "offset": [
        2548,
        2893
      ],
      "op": "JUMP",
      "path": "61"
    },
    "2910": {
      "fn": "Owned.transferOwnership",
      "offset": [
        742,
        860
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "2911": {
      "fn": "Owned.transferOwnership",
      "offset": [
        813,
        822
      ],
      "op": "PUSH2",
      "path": "57",
      "statement": 32,
      "value": "0xB66"
    },
    "2914": {
      "fn": "Owned.transferOwnership",
      "offset": [
        813,
        820
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x7F8"
    },
    "2917": {
      "fn": "Owned.transferOwnership",
      "jump": "i",
      "offset": [
        813,
        822
      ],
      "op": "JUMP",
      "path": "57"
    },
    "2918": {
      "branch": 52,
      "fn": "Owned.transferOwnership",
      "offset": [
        813,
        822
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "2919": {
      "fn": "Owned.transferOwnership",
      "offset": [
        805,
        823
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0xB6F"
    },
    "2922": {
      "branch": 52,
      "fn": "Owned.transferOwnership",
      "offset": [
        805,
        823
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "2923": {
      "fn": "Owned.transferOwnership",
      "offset": [
        805,
        823
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "2925": {
      "fn": "Owned.transferOwnership",
      "offset": [
        805,
        823
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2926": {
      "fn": "Owned.transferOwnership",
      "offset": [
        805,
        823
      ],
      "op": "REVERT",
      "path": "57"
    },
    "2927": {
      "fn": "Owned.transferOwnership",
      "offset": [
        805,
        823
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "2928": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        841
      ],
      "op": "PUSH1",
      "path": "57",
      "statement": 33,
      "value": "0x1"
    },
    "2930": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "DUP1",
      "path": "57"
    },
    "2931": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SLOAD",
      "path": "57"
    },
    "2932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2936": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2938": {
      "op": "SHL"
    },
    "2939": {
      "op": "SUB"
    },
    "2940": {
      "op": "NOT"
    },
    "2941": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "AND",
      "path": "57"
    },
    "2942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2946": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2948": {
      "op": "SHL"
    },
    "2949": {
      "op": "SUB"
    },
    "2950": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "2951": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2952": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "2953": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "AND",
      "path": "57"
    },
    "2954": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "2955": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2956": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "2957": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "OR",
      "path": "57"
    },
    "2958": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "2959": {
      "fn": "Owned.transferOwnership",
      "offset": [
        833,
        853
      ],
      "op": "SSTORE",
      "path": "57"
    },
    "2960": {
      "fn": "Owned.transferOwnership",
      "jump": "o",
      "offset": [
        742,
        860
      ],
      "op": "JUMP",
      "path": "57"
    },
    "2961": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        512,
        646
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "2962": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        570,
        577
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x0"
    },
    "2964": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "PUSH2",
      "path": "58",
      "statement": 34,
      "value": "0xBD3"
    },
    "2967": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        600,
        601
      ],
      "op": "DUP4",
      "path": "58"
    },
    "2968": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        603,
        604
      ],
      "op": "DUP4",
      "path": "58"
    },
    "2969": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x40"
    },
    "2971": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "2972": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "DUP1",
      "path": "58"
    },
    "2973": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x40"
    },
    "2975": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "ADD",
      "path": "58"
    },
    "2976": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x40"
    },
    "2978": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "2979": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "DUP1",
      "path": "58"
    },
    "2980": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x1E"
    },
    "2982": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "DUP2",
      "path": "58"
    },
    "2983": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "2984": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x20"
    },
    "2986": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "ADD",
      "path": "58"
    },
    "2987": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "PUSH32",
      "path": "58",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "3020": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "DUP2",
      "path": "58"
    },
    "3021": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "3022": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "POP",
      "path": "58"
    },
    "3023": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        599
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0xCA9"
    },
    "3026": {
      "fn": "SafeMathPlus.sub",
      "jump": "i",
      "offset": [
        596,
        639
      ],
      "op": "JUMP",
      "path": "58"
    },
    "3027": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        596,
        639
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "3028": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        589,
        639
      ],
      "op": "SWAP4",
      "path": "58"
    },
    "3029": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        512,
        646
      ],
      "op": "SWAP3",
      "path": "58"
    },
    "3030": {
      "op": "POP"
    },
    "3031": {
      "op": "POP"
    },
    "3032": {
      "op": "POP"
    },
    "3033": {
      "fn": "SafeMathPlus.sub",
      "jump": "o",
      "offset": [
        512,
        646
      ],
      "op": "JUMP",
      "path": "58"
    },
    "3034": {
      "fn": "Owned._initOwned",
      "offset": [
        349,
        558
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "3035": {
      "fn": "Owned._initOwned",
      "offset": [
        413,
        424
      ],
      "op": "PUSH1",
      "path": "57",
      "statement": 35,
      "value": "0x0"
    },
    "3037": {
      "fn": "Owned._initOwned",
      "offset": [
        413,
        424
      ],
      "op": "SLOAD",
      "path": "57"
    },
    "3038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3040": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3042": {
      "op": "SHL"
    },
    "3043": {
      "fn": "Owned._initOwned",
      "offset": [
        413,
        424
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "3044": {
      "fn": "Owned._initOwned",
      "offset": [
        413,
        424
      ],
      "op": "DIV",
      "path": "57"
    },
    "3045": {
      "fn": "Owned._initOwned",
      "offset": [
        413,
        424
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0xFF"
    },
    "3047": {
      "fn": "Owned._initOwned",
      "offset": [
        413,
        424
      ],
      "op": "AND",
      "path": "57"
    },
    "3048": {
      "branch": 53,
      "fn": "Owned._initOwned",
      "offset": [
        412,
        424
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "3049": {
      "fn": "Owned._initOwned",
      "offset": [
        404,
        425
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0xBF1"
    },
    "3052": {
      "branch": 53,
      "fn": "Owned._initOwned",
      "offset": [
        404,
        425
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "3053": {
      "fn": "Owned._initOwned",
      "offset": [
        404,
        425
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "3055": {
      "fn": "Owned._initOwned",
      "offset": [
        404,
        425
      ],
      "op": "DUP1",
      "path": "57"
    },
    "3056": {
      "fn": "Owned._initOwned",
      "offset": [
        404,
        425
      ],
      "op": "REVERT",
      "path": "57"
    },
    "3057": {
      "fn": "Owned._initOwned",
      "offset": [
        404,
        425
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "3058": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        441
      ],
      "op": "PUSH1",
      "path": "57",
      "statement": 36,
      "value": "0x0"
    },
    "3060": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "DUP1",
      "path": "57"
    },
    "3061": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "SLOAD",
      "path": "57"
    },
    "3062": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3064": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3066": {
      "op": "SHL"
    },
    "3067": {
      "op": "NOT"
    },
    "3068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3072": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3074": {
      "op": "SHL"
    },
    "3075": {
      "op": "SUB"
    },
    "3076": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "DUP1",
      "path": "57"
    },
    "3077": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "DUP6",
      "path": "57"
    },
    "3078": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "AND",
      "path": "57"
    },
    "3079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3083": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3085": {
      "op": "SHL"
    },
    "3086": {
      "op": "SUB"
    },
    "3087": {
      "op": "NOT"
    },
    "3088": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "3089": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "SWAP4",
      "path": "57"
    },
    "3090": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "AND",
      "path": "57"
    },
    "3091": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "3092": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "3093": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "3094": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        468
      ],
      "op": "OR",
      "path": "57"
    },
    "3095": {
      "fn": "Owned._initOwned",
      "offset": [
        478,
        496
      ],
      "op": "AND",
      "path": "57",
      "statement": 37
    },
    "3096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3098": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3100": {
      "op": "SHL"
    },
    "3101": {
      "fn": "Owned._initOwned",
      "offset": [
        478,
        496
      ],
      "op": "OR",
      "path": "57"
    },
    "3102": {
      "fn": "Owned._initOwned",
      "offset": [
        478,
        496
      ],
      "op": "DUP1",
      "path": "57"
    },
    "3103": {
      "fn": "Owned._initOwned",
      "offset": [
        478,
        496
      ],
      "op": "DUP4",
      "path": "57"
    },
    "3104": {
      "fn": "Owned._initOwned",
      "offset": [
        478,
        496
      ],
      "op": "SSTORE",
      "path": "57"
    },
    "3105": {
      "fn": "Owned._initOwned",
      "offset": [
        511,
        551
      ],
      "op": "PUSH1",
      "path": "57",
      "statement": 38,
      "value": "0x40"
    },
    "3107": {
      "fn": "Owned._initOwned",
      "offset": [
        511,
        551
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "3108": {
      "fn": "Owned._initOwned",
      "offset": [
        544,
        550
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "3109": {
      "fn": "Owned._initOwned",
      "offset": [
        544,
        550
      ],
      "op": "AND",
      "path": "57"
    },
    "3110": {
      "fn": "Owned._initOwned",
      "offset": [
        544,
        550
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "3111": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        441
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "3112": {
      "fn": "Owned._initOwned",
      "offset": [
        511,
        551
      ],
      "op": "PUSH32",
      "path": "57",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3145": {
      "fn": "Owned._initOwned",
      "offset": [
        511,
        551
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "3146": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        441
      ],
      "op": "DUP3",
      "path": "57"
    },
    "3147": {
      "fn": "Owned._initOwned",
      "offset": [
        435,
        441
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "3148": {
      "fn": "Owned._initOwned",
      "offset": [
        511,
        551
      ],
      "op": "LOG3",
      "path": "57"
    },
    "3149": {
      "fn": "Owned._initOwned",
      "offset": [
        349,
        558
      ],
      "op": "POP",
      "path": "57"
    },
    "3150": {
      "fn": "Owned._initOwned",
      "jump": "o",
      "offset": [
        349,
        558
      ],
      "op": "JUMP",
      "path": "57"
    },
    "3151": {
      "fn": "SafeMathPlus.add",
      "offset": [
        332,
        507
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "3152": {
      "fn": "SafeMathPlus.add",
      "offset": [
        390,
        397
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x0"
    },
    "3154": {
      "fn": "SafeMathPlus.add",
      "offset": [
        421,
        426
      ],
      "op": "DUP3",
      "path": "58"
    },
    "3155": {
      "fn": "SafeMathPlus.add",
      "offset": [
        421,
        426
      ],
      "op": "DUP3",
      "path": "58"
    },
    "3156": {
      "fn": "SafeMathPlus.add",
      "offset": [
        421,
        426
      ],
      "op": "ADD",
      "path": "58"
    },
    "3157": {
      "fn": "SafeMathPlus.add",
      "offset": [
        444,
        450
      ],
      "op": "DUP4",
      "path": "58",
      "statement": 39
    },
    "3158": {
      "fn": "SafeMathPlus.add",
      "offset": [
        444,
        450
      ],
      "op": "DUP2",
      "path": "58"
    },
    "3159": {
      "fn": "SafeMathPlus.add",
      "offset": [
        444,
        450
      ],
      "op": "LT",
      "path": "58"
    },
    "3160": {
      "branch": 54,
      "fn": "SafeMathPlus.add",
      "offset": [
        444,
        450
      ],
      "op": "ISZERO",
      "path": "58"
    },
    "3161": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0xBD3"
    },
    "3164": {
      "branch": 54,
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "JUMPI",
      "path": "58"
    },
    "3165": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x40"
    },
    "3167": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "DUP1",
      "path": "58"
    },
    "3168": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "3169": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3173": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3175": {
      "op": "SHL"
    },
    "3176": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "DUP2",
      "path": "58"
    },
    "3177": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "3178": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x20"
    },
    "3180": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x4"
    },
    "3182": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "DUP3",
      "path": "58"
    },
    "3183": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "ADD",
      "path": "58"
    },
    "3184": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "3185": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x1B"
    },
    "3187": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x24"
    },
    "3189": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "DUP3",
      "path": "58"
    },
    "3190": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "ADD",
      "path": "58"
    },
    "3191": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "3192": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "PUSH32",
      "path": "58",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "3225": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x44"
    },
    "3227": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "DUP3",
      "path": "58"
    },
    "3228": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "ADD",
      "path": "58"
    },
    "3229": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "3230": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "3231": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "3232": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "3233": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "DUP2",
      "path": "58"
    },
    "3234": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "3235": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "SUB",
      "path": "58"
    },
    "3236": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x64"
    },
    "3238": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "ADD",
      "path": "58"
    },
    "3239": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "3240": {
      "fn": "SafeMathPlus.add",
      "offset": [
        436,
        482
      ],
      "op": "REVERT",
      "path": "58"
    },
    "3241": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        651,
        837
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "3242": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        737,
        744
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x0"
    },
    "3244": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        772,
        784
      ],
      "op": "DUP2",
      "path": "58",
      "statement": 40
    },
    "3245": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        764,
        770
      ],
      "op": "DUP5",
      "path": "58"
    },
    "3246": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        764,
        770
      ],
      "op": "DUP5",
      "path": "58"
    },
    "3247": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        764,
        770
      ],
      "op": "GT",
      "path": "58"
    },
    "3248": {
      "branch": 55,
      "fn": "SafeMathPlus.sub",
      "offset": [
        764,
        770
      ],
      "op": "ISZERO",
      "path": "58"
    },
    "3249": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0xD38"
    },
    "3252": {
      "branch": 55,
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "JUMPI",
      "path": "58"
    },
    "3253": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x40"
    },
    "3255": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "3256": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3260": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3262": {
      "op": "SHL"
    },
    "3263": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP2",
      "path": "58"
    },
    "3264": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "3265": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x4"
    },
    "3267": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "ADD",
      "path": "58"
    },
    "3268": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP1",
      "path": "58"
    },
    "3269": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP1",
      "path": "58"
    },
    "3270": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x20"
    },
    "3272": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "ADD",
      "path": "58"
    },
    "3273": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP3",
      "path": "58"
    },
    "3274": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP2",
      "path": "58"
    },
    "3275": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "SUB",
      "path": "58"
    },
    "3276": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP3",
      "path": "58"
    },
    "3277": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "3278": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP4",
      "path": "58"
    },
    "3279": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP2",
      "path": "58"
    },
    "3280": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP2",
      "path": "58"
    },
    "3281": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "3282": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP2",
      "path": "58"
    },
    "3283": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "3284": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x20"
    },
    "3286": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "ADD",
      "path": "58"
    },
    "3287": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "SWAP2",
      "path": "58"
    },
    "3288": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "POP",
      "path": "58"
    },
    "3289": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP1",
      "path": "58"
    },
    "3290": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "3291": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "3292": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x20"
    },
    "3294": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "ADD",
      "path": "58"
    },
    "3295": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "3296": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP1",
      "path": "58"
    },
    "3297": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP4",
      "path": "58"
    },
    "3298": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP4",
      "path": "58"
    },
    "3299": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x0"
    },
    "3301": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "3302": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP4",
      "path": "58"
    },
    "3303": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP2",
      "path": "58"
    },
    "3304": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "LT",
      "path": "58"
    },
    "3305": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "ISZERO",
      "path": "58"
    },
    "3306": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0xCFD"
    },
    "3309": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "JUMPI",
      "path": "58"
    },
    "3310": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP2",
      "path": "58"
    },
    "3311": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP2",
      "path": "58"
    },
    "3312": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "ADD",
      "path": "58"
    },
    "3313": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "3314": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP4",
      "path": "58"
    },
    "3315": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP3",
      "path": "58"
    },
    "3316": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "ADD",
      "path": "58"
    },
    "3317": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "3318": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x20"
    },
    "3320": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "ADD",
      "path": "58"
    },
    "3321": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0xCE5"
    },
    "3324": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "JUMP",
      "path": "58"
    },
    "3325": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "3326": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "POP",
      "path": "58"
    },
    "3327": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "POP",
      "path": "58"
    },
    "3328": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "POP",
      "path": "58"
    },
    "3329": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "POP",
      "path": "58"
    },
    "3330": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "3331": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "POP",
      "path": "58"
    },
    "3332": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "3333": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP2",
      "path": "58"
    },
    "3334": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "ADD",
      "path": "58"
    },
    "3335": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "3336": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x1F"
    },
    "3338": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "AND",
      "path": "58"
    },
    "3339": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP1",
      "path": "58"
    },
    "3340": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "ISZERO",
      "path": "58"
    },
    "3341": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0xD2A"
    },
    "3344": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "JUMPI",
      "path": "58"
    },
    "3345": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP1",
      "path": "58"
    },
    "3346": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP3",
      "path": "58"
    },
    "3347": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "SUB",
      "path": "58"
    },
    "3348": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP1",
      "path": "58"
    },
    "3349": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "3350": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x1"
    },
    "3352": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP4",
      "path": "58"
    },
    "3353": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x20"
    },
    "3355": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "SUB",
      "path": "58"
    },
    "3356": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "PUSH2",
      "path": "58",
      "value": "0x100"
    },
    "3359": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "EXP",
      "path": "58"
    },
    "3360": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "SUB",
      "path": "58"
    },
    "3361": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "NOT",
      "path": "58"
    },
    "3362": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "AND",
      "path": "58"
    },
    "3363": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP2",
      "path": "58"
    },
    "3364": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "MSTORE",
      "path": "58"
    },
    "3365": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x20"
    },
    "3367": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "ADD",
      "path": "58"
    },
    "3368": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "SWAP2",
      "path": "58"
    },
    "3369": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "POP",
      "path": "58"
    },
    "3370": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "3371": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "POP",
      "path": "58"
    },
    "3372": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "SWAP3",
      "path": "58"
    },
    "3373": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "POP",
      "path": "58"
    },
    "3374": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "POP",
      "path": "58"
    },
    "3375": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "POP",
      "path": "58"
    },
    "3376": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "PUSH1",
      "path": "58",
      "value": "0x40"
    },
    "3378": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "MLOAD",
      "path": "58"
    },
    "3379": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "DUP1",
      "path": "58"
    },
    "3380": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "SWAP2",
      "path": "58"
    },
    "3381": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "SUB",
      "path": "58"
    },
    "3382": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "3383": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "REVERT",
      "path": "58"
    },
    "3384": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        756,
        785
      ],
      "op": "JUMPDEST",
      "path": "58"
    },
    "3385": {
      "op": "POP"
    },
    "3386": {
      "op": "POP"
    },
    "3387": {
      "op": "POP"
    },
    "3388": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        807,
        812
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "3389": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        807,
        812
      ],
      "op": "SUB",
      "path": "58"
    },
    "3390": {
      "fn": "SafeMathPlus.sub",
      "offset": [
        807,
        812
      ],
      "op": "SWAP1",
      "path": "58"
    },
    "3391": {
      "fn": "SafeMathPlus.sub",
      "jump": "o",
      "offset": [
        651,
        837
      ],
      "op": "JUMP",
      "path": "58"
    }
  },
  "sha1": "c37f9c9bff7eaeb08fad2bbdff55a2e1635ca4e7",
  "source": "pragma solidity ^0.6.9;\n\nimport \"../Utils/Owned.sol\";\nimport \"../../interfaces/IERC20.sol\";\nimport \"../Utils/SafeMathPlus.sol\";\ncontract ERC20Vault is Owned{\n    using SafeMathPlus for uint256;\n\n    uint256 public unlockDate;\n   \n    //add super admin that can have authority to approve the token to transfer to any contractAddress?\n    //Refer to CORE vault for more superadmin stuff\n   \n    //address private _superAdmin;\n   \n    // Does it need to be indexed?\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\n    event EmergencyWithdraw(address indexed user,uint256 indexed pid,uint256 amount);\n\n    struct UserInfo{\n        uint256 amount; // How many  tokens the user has provided\n    }\n\n    struct PoolInfo{\n        IERC20 token;\n        bool withdrawable;\n        uint256 endDate;\n    }\n    // Info of each user that stakes  tokens. (poolId => (userAddress => userInfo))\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\n\n    // Info of each pool.\n    PoolInfo[] public poolInfo;\n\n    function initERC20Vault() public{\n        _initOwned((msg.sender));\n        /* unlockDate = _unlockDate; */\n    }\n\n  /*   function updateUnlockDate(uint256 _newDate) public {\n        require(isOwner());\n        require(_newDate > unlockDate, \"Date specified is less than current unlock date\");\n        unlockDate = _newDate;\n    } */\n    \n    \n    // Add a new token pool. Can only be called by the owner. \n    function add(IERC20 _token, bool _withdrawable, uint256 _duration) public{\n        require(isOwner());\n        uint256 endDate = block.timestamp.add(_duration);\n\n        uint256 length = poolInfo.length;\n        for (uint256 pid = 0; pid < length; ++pid) {\n            require(poolInfo[pid].token != _token,\"Error pool already added\");\n        }\n        \n\n        poolInfo.push(PoolInfo({\n            token:_token,\n            withdrawable: _withdrawable,\n            endDate: endDate\n        }));\n    }\n    \n\n    // Update the given pool's ability to withdraw tokens\n    function setPoolWithdrawable(uint256 _pid, bool _withdrawable\n    ) public  {\n        require(isOwner());\n        poolInfo[_pid].withdrawable = _withdrawable;\n    }\n    \n    //Have to do more checks\n    function updatePoolEndDate(uint256 _pid, uint256 _duration) public{\n        require(isOwner());\n        PoolInfo storage pool = poolInfo[_pid];\n        pool.endDate = block.timestamp.add(_duration);\n    }\n    // Deposit  tokens to Vault.\n    function deposit(uint256 _pid, uint256 _amount) public{\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n\n        pool.token.transferFrom(address(msg.sender), address(this), _amount);\n        user.amount = user.amount.add(_amount);\n        emit Deposit(msg.sender, _pid, _amount);\n    }\n\n    function withdraw(uint256 _pid, uint256 _amount) public{\n        PoolInfo storage pool = poolInfo[_pid];\n        require(pool.withdrawable, \"Withdrawing from pool is disabled\");\n        require(now >= pool.endDate, \"Timelock: Funds cannot be withdrawn yet\");\n        UserInfo storage user = userInfo[_pid][msg.sender];\n        require(user.amount >=_amount,\"withdraw: unsufficient funds in the pool\");\n        user.amount = user.amount.sub(_amount);\n        pool.token.transfer(address(msg.sender),_amount);\n        emit Withdraw(msg.sender, _pid, _amount);\n    }\n\n    //No Timelock implemented\n    function emergencyWithdraw(uint256 _pid) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        require(pool.withdrawable,\"Withdrawing from pool disabled\");\n        UserInfo storage user = userInfo[_pid][msg.sender];\n        user.amount = 0;\n        pool.token.transfer(msg.sender,user.amount);\n        emit EmergencyWithdraw(msg.sender, _pid, user.amount);\n    }\n\n    //To set allowance of ERC20 to a particular contractAddress. Good or not? Only owner can call. May add superadmin too.\n    function setContractAllowance(address tokenAddress, uint256 _amount,address contractAddress) public{\n        \n        // Can be superadmin\n        require(isOwner());\n        require(isContract(contractAddress));\n        IERC20(tokenAddress).approve(contractAddress, _amount);\n    }\n\n    function isContract(address addr) public returns (bool){\n        uint size;\n        assembly { size:= extcodesize(addr) }\n        return size > 0;\n    }\n\n}\n",
  "sourceMap": "128:4315:61:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Vault/ERC20Vault.sol",
  "type": "contract"
}